<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>walsky&#39;s blog</title>
  <subtitle>我转身，发现你们一直在身后，这就是我为什么坚持的原因</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-11-03T12:14:50.424Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>laiwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python开发3(控制语句和文件操作)</title>
    <link href="http://yoursite.com/2016/10/11/Python%E5%BC%80%E5%8F%913(%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5%E5%92%8C%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C)/"/>
    <id>http://yoursite.com/2016/10/11/Python开发3(控制语句和文件操作)/</id>
    <published>2016-10-11T01:06:30.797Z</published>
    <updated>2016-11-03T12:14:50.424Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://huaban.com/go/?pin_id=436154113&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;python的控制语句&quot;&gt;&lt;a href=&quot;#python的控制语句&quot; class=&quot;headerlink&quot; title=&quot;python的控制语句&quot;&gt;&lt;/a&gt;python的控制语句&lt;/h5&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = input(&lt;span class=&quot;string&quot;&gt;&quot;x:&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# input支持用户输入数字和表达式，最后返回数字类型，表达式会自动计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = raw_imput(&lt;span class=&quot;string&quot;&gt;&quot;x:&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# raw_input捕获原始输入，返回的是字符串类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = int(x) &lt;span class=&quot;comment&quot;&gt;# 如果需要使用数字类型,转换位数字类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = x+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;####### switch语句&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;switch语句容易造成代码不易维护，使源文件拥挤。&lt;strong&gt;面向对象程序设计，常常对switch语句进行重构，把switch语句分解成若干个类。&lt;/strong&gt;当然对于分支流程简单的switch可以使用字典来实现，使用字典更加容易管理switch.&lt;br&gt;字典是键值对组成的集合，类似JAVA的HashTable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 使用字典实现switch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; division&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# python提供了__future__模块，把新版本的特性导入到当前版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x =&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;operator = &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;+&quot;&lt;/span&gt;: x+y,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;: x*y,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;-&quot;&lt;/span&gt;: x-y,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;: x/y,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; result.get(operator)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;循环语句&quot;&gt;&lt;a href=&quot;#循环语句&quot; class=&quot;headerlink&quot; title=&quot;循环语句&quot;&gt;&lt;/a&gt;循环语句&lt;/h6&gt;&lt;p&gt;python循环语句包括while和for&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;####### while循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;numbers = raw_input(&lt;span class=&quot;string&quot;&gt;&quot;输入几个数字，以逗号分隔&quot;&lt;/span&gt;).split(&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 输入数字，赋值给numbers列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x &amp;lt; len(numbers):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; numbers[x]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; = x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 带else的while的循环语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = input(&lt;span class=&quot;string&quot;&gt;&quot;输入x的值&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(x!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(x&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  x&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;=x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   x+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;=x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;=i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; print(&lt;span class=&quot;string&quot;&gt;&quot;第%d循环&quot;&lt;/span&gt;%i, x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;x等于0&quot;&lt;/span&gt;，x)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;####### for循环&lt;br&gt;for循环用于遍历一个集合，依次访问集合中的每一个项目&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 变量 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; 集合：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 集合可以是元组、列表、字典等数据结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 每次从集合中取出一个值并赋值给变量，else可以省略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for循环通常与range()函数一起使用，range(开始，结束值，步长)返回一个列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;range(5,-1,-1) -&amp;gt;[5,4,3,2,1,0]    包前不包后&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# for in 语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;正数&quot;&lt;/span&gt;,x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; x == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;零&quot;&lt;/span&gt;,x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;负数&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;函数结束&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;python中没有for(x=2;x&amp;lt;15;x++)这种表达式，可以使用：&lt;br&gt;&lt;code&gt;x= 0
while x &amp;lt; 5:
    print x
    x + 1=x&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;####### break 和 continue&lt;br&gt;break: 直接中断循环&lt;br&gt;continue: 停止本次循环，进入下一次循环&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x != y:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# x不等于y，continue，进入下次循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# x等于y,break中断循环，输入：0，1，2，3，4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;介绍下xrange()函数：&lt;/strong&gt;&lt;br&gt;xrange是一个类，返回一个xrange对象，`xrange(开始，结束值，步长）&lt;br&gt;xrange()进行遍历的时候                      &lt;strong&gt;每次只返回一个值&lt;/strong&gt; &lt;strong&gt;&lt;br&gt;range()返回的是列表             &lt;/strong&gt;一次性计算并返回所有的值**，&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# xrange()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = xrange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x &lt;span class=&quot;comment&quot;&gt;#输出xrange(8),这是一个xrange对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;#输出 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;#输出最后一个元素的值 输出结果为：7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;####### xrange()实现的冒泡排序算法&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bubbleSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(numbers)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(numbers)&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(j):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; numbers[i] &amp;gt; numbers[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]:   &lt;span class=&quot;comment&quot;&gt;# 把数值小的放到顶端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                numbers[i], numbers[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = numbers[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], numbers[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(numbers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numbers = [&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bubbleSort(numbers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Python文件的处理&quot;&gt;&lt;a href=&quot;#Python文件的处理&quot; class=&quot;headerlink&quot; title=&quot;Python文件的处理&quot;&gt;&lt;/a&gt;Python文件的处理&lt;/h4&gt;&lt;p&gt;数据的存储可以使用数据库（保持了数据完整性、关联性，数据更加安全可靠）和文件（简单易用，通常用于存储应用程序软件的参数和临时数据）&lt;/p&gt;
&lt;h5 id=&quot;文件的基本操作&quot;&gt;&lt;a href=&quot;#文件的基本操作&quot; class=&quot;headerlink&quot; title=&quot;文件的基本操作&quot;&gt;&lt;/a&gt;文件的基本操作&lt;/h5&gt;&lt;p&gt;python提供os,os.path,shutil等模块用于处理文件用于处理文件，包括：&lt;br&gt;文件的创建、读写、修改和复制、删除和重命名&lt;br&gt;文件内容的搜索和替换&lt;br&gt;文件内容的比较&lt;br&gt;配置文集的读写，目录创建和遍历&lt;br&gt;文件和流&lt;/p&gt;
&lt;h6 id=&quot;文件的打开和创建&quot;&gt;&lt;a href=&quot;#文件的打开和创建&quot; class=&quot;headerlink&quot; title=&quot;文件的打开和创建&quot;&gt;&lt;/a&gt;文件的打开和创建&lt;/h6&gt;&lt;p&gt;python使用内联函数file()创建和打开文件， 返回一个file对象可以对文件进行各种操作&lt;br&gt;&lt;strong&gt;使用open()可以替换file()，open()是file()的别名&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;file(name, mode, buffering)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# name:被打开文件的名称，mode文件的打开模式，buffering设置缓存模式，0是无缓存，1表示行缓存，&amp;gt;1表示缓冲区的大小以字节为单位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;模式名称&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;以只读方式打开&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r+&lt;/td&gt;
&lt;td&gt;以读写方式打开&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;以写入方式打开，先删除原有内容，再写入新的数据，&lt;strong&gt;如果文件不存在就创建一个新的文件 &lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w+&lt;/td&gt;
&lt;td&gt;以读写方式打开，先删除原有内容，再写入新的数据，&lt;strong&gt;如果文件不存在就创建一个新的文件&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;以写入方式打开，在文件末尾增加新的内容，如果文件不存在就创建一个新的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a+&lt;/td&gt;
&lt;td&gt;以读写方式打开，在文件末尾增加新的内容，如果文件不存在就创建一个新的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;以二进制方式打开文件，与r r+  w w+ a +结合使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;U&lt;/td&gt;
&lt;td&gt;支持所有换行符，\r \n &lt;code&gt;\r\n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;对于图片，视频文件必须使用“b”（也就是二进制的方式读写）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;file的常用属性和方法：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性名称&lt;/th&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Closed&lt;/td&gt;
&lt;td&gt;判断文件是否关闭，关闭返回True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mode&lt;/td&gt;
&lt;td&gt;显示文件的打开模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Encoding&lt;/td&gt;
&lt;td&gt;显示文件的编码模式   print(f.Encoding) f是file对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Newlines&lt;/td&gt;
&lt;td&gt;显示文件的换行模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file(name,mode,buffering)&lt;/td&gt;
&lt;td&gt;以mode模式打开name文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flush&lt;/td&gt;
&lt;td&gt;把缓存区内容写入磁盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;close&lt;/td&gt;
&lt;td&gt;关闭文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;read(5)&lt;/td&gt;
&lt;td&gt;读取文件中读取5个字节的内容作为字符串返回&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;readline()&lt;/td&gt;
&lt;td&gt;读取1行作为字符串返回，readlines(2)表示每行每次读取两个字节，直到行的末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;readlines()&lt;/td&gt;
&lt;td&gt;读取每行的内容存储在列表中返回&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;seek(offset, whence)&lt;/td&gt;
&lt;td&gt;把文件指针移动到1个新的位置，offset是相对于whence的位置，whence为0从文件开始的位置计算，为1表示从当前位置计算，为2表示从文件末尾位置计算&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tell()&lt;/td&gt;
&lt;td&gt;返回文件指针的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;next()&lt;/td&gt;
&lt;td&gt;返回下一行的内容，并将文件的指针移动到下一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;truncate(size)&lt;/td&gt;
&lt;td&gt;删除size个字节的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;write(str)&lt;/td&gt;
&lt;td&gt;将字符串str的内容写入文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;writelines(str)&lt;/td&gt;
&lt;td&gt;将字符串序列的内容写入文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 文件的创建&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello myladys &#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = open(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.write(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 这里是有三引号 可以输出换行，三引号用来输出换行、单引号、双引号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;####### 文件的读取&lt;br&gt;1.readline() 每次只读取文件中的一行，需要使用永真表达式循环读取，知道文件的指针移动到文件末尾，再使用readlines()错误，使用&lt;strong&gt;break&lt;/strong&gt;中断循环&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 使用readlines读取文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = open(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    line = f.readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; line:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.close&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.多行读取readlines()&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 使用readlines读取文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = open(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lines = f.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lines:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(line)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.一次性读取read()&lt;br&gt;读取文件最简单方法是read(),read()读出文件的所有内容并赋值给一个字符串变量&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 使用read读取文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = open(&#39;hello.txt&#39;,&#39;r&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 通过控制read的参数，并返回指定字节的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = open(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content = f.read(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#读取5个字节作为字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(f.tell())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content_next = f.read(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#从上次读取结束后的指针位置开始读取5个字节返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(content_next)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(f.tell())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;文件的写入&quot;&gt;&lt;a href=&quot;#文件的写入&quot; class=&quot;headerlink&quot; title=&quot;文件的写入&quot;&gt;&lt;/a&gt;文件的写入&lt;/h6&gt;&lt;p&gt;write()把字符串写入文件，writelines()方法把列表中存储的字符串写入文件。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;f = open(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w+&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.writelines([&lt;span class=&quot;string&quot;&gt;&quot;hi,mylady\n&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;yes,myload&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# f.write(&#39;&#39;&#39;hi,mylady,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yes,myload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 追加新的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = open(&#39;hello.txt&#39;,&#39;a+&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content = &quot;I have waited for the days for a long time&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.write(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.close()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;文件的删除&quot;&gt;&lt;a href=&quot;#文件的删除&quot; class=&quot;headerlink&quot; title=&quot;文件的删除&quot;&gt;&lt;/a&gt;文件的删除&lt;/h6&gt;&lt;p&gt;文件的删除需要使用os,os.path模块，os模块提供了对系统环境、文件、目录等操作系统级的接口函数&lt;br&gt;markdown全角模式下ctrl+space在点击space就输入了空格&lt;/p&gt;
&lt;p&gt;　　　　　　　　　　　　　&lt;strong&gt;    os模块的常见文件处理模块&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;access(path,mode)&lt;/td&gt;
&lt;td&gt;按照mode指定权限访问文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;open(filename,flag,mode=0777)&lt;/td&gt;
&lt;td&gt;按照mode指定权限打开文件，默认给所有用户读写，执行权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;change(path,mode)&lt;/td&gt;
&lt;td&gt;改变文件的访问权限，mode需要使用Unix系统的权限代号表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;remove(path)&lt;/td&gt;
&lt;td&gt;删除path指定的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rename(old,new)&lt;/td&gt;
&lt;td&gt;重命名文件或者目录，old是原文件或目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stat(path)&lt;/td&gt;
&lt;td&gt;返回path指定文件的所有属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fstat(path)&lt;/td&gt;
&lt;td&gt;返回打开文件的所有属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lseek(fd,pos,how)&lt;/td&gt;
&lt;td&gt;设置文件当前位置，返回当前位置的字节数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tmpfile()&lt;/td&gt;
&lt;td&gt;创建一个临时文件，文件创建在操作系统的临时目录中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;os模块的open（）函数与内联的file(),open()函数用法不同&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　　　　　　　　&lt;strong&gt;　　　os.path模块的常用函数&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;abspath(path)&lt;/td&gt;
&lt;td&gt;返回path所在的绝对路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dirname(p)&lt;/td&gt;
&lt;td&gt;返回目录路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;exists(path)&lt;/td&gt;
&lt;td&gt;判断文件是否存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getatime(filename)&lt;/td&gt;
&lt;td&gt;返回文件的最后访问时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getctime(filename)&lt;/td&gt;
&lt;td&gt;返回文件的创建时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getmtime(filename)&lt;/td&gt;
&lt;td&gt;返回文件的最后修改时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getsize&lt;/td&gt;
&lt;td&gt;返回文件的大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isabs(s)&lt;/td&gt;
&lt;td&gt;返回路径是否为绝对路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isdir(path)&lt;/td&gt;
&lt;td&gt;判断path指定的是否为目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isfile(path)&lt;/td&gt;
&lt;td&gt;判断path指定的是否为文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;split(p)&lt;/td&gt;
&lt;td&gt;对路径进行分割，并以列表形式返回&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;splittext(p)&lt;/td&gt;
&lt;td&gt;在路径中分割文件的扩展名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Splitdriver(p)&lt;/td&gt;
&lt;td&gt;从路径中分割驱动器的名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;walk(top,func,org)&lt;/td&gt;
&lt;td&gt;遍历目录数， 与os.walk()功能相同&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h6 id=&quot;文件的删除-1&quot;&gt;&lt;a href=&quot;#文件的删除-1&quot; class=&quot;headerlink&quot; title=&quot;文件的删除&quot;&gt;&lt;/a&gt;文件的删除&lt;/h6&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; os.path.exists(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;):   &lt;span class=&quot;comment&quot;&gt;#调用os.path模块的exist方法判断文件hello.txt是否存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.remove(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;)       &lt;span class=&quot;comment&quot;&gt;#调用remove()方法删除hello.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 删除桌面上的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; os.path.exists(&lt;span class=&quot;string&quot;&gt;&#39;C:/Users/LW/Desktop/hello.txt&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.remove(&lt;span class=&quot;string&quot;&gt;&quot;C:/Users/LW/Desktop/hello.txt&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;文件的复制&quot;&gt;&lt;a href=&quot;#文件的复制&quot; class=&quot;headerlink&quot; title=&quot;文件的复制&quot;&gt;&lt;/a&gt;文件的复制&lt;/h6&gt;&lt;p&gt;file类没有提供复制文件的方法，但可以利用read(),write()方法模拟实现文件复制&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 利用read()、write()方法实现复制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file1 = open(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content1= [&lt;span class=&quot;string&quot;&gt;&quot;hi,mylady\n&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;yes,myload\n&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file1.writelines(content1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file1.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 把hello1.txt的内容复制到hello2.txt的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file1_read = open(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file2 = open(&lt;span class=&quot;string&quot;&gt;&#39;mylady.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file2.write(file1_read.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file1_read.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file2.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;shutil模块是一个文件、目录的管理接口，提供一些用于文件、目录复制的函数：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; shutil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copefile(src, dst)    &lt;span class=&quot;comment&quot;&gt;#copefiel()函数用于文件的拷贝&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# src表示源文件的路径，dst表示目标文件的路径，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;move(src, dst)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 移动一个目录或文件到指定的位置，可以根据参数dst重新命名移动后的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; shutil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shutil.copyfile(&lt;span class=&quot;string&quot;&gt;&#39;mylady.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;myload.txt&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shutil.move(&lt;span class=&quot;string&quot;&gt;&#39;mylady.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;../becase.txt&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;文件重命名&quot;&gt;&lt;a href=&quot;#文件重命名&quot; class=&quot;headerlink&quot; title=&quot;文件重命名&quot;&gt;&lt;/a&gt;文件重命名&lt;/h6&gt;&lt;p&gt;&lt;strong&gt;利用os.rename(可以对文件或目录进行重命名&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filelist = os.listdir(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#.表示当前目录，listdir返回当前目录的文件列表[]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(filelist)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;myload.txt&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; filelist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.rename(&lt;span class=&quot;string&quot;&gt;&quot;myload.txt&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;mylady.txt&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;更改后缀名：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 修改txt后缀名为md&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filelist = os.listdir(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(filelist)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; file &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; filelist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    spilt_point = file.find(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; file[spilt_point+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:] == &lt;span class=&quot;string&quot;&gt;&quot;txt&quot;&lt;/span&gt;:            &lt;span class=&quot;comment&quot;&gt;#列表分片，又忘了，头大&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_name = file[:spilt_point+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;md&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        os.rename(file,new_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;为了获取文件的后缀名，先找到“.”的位置，再通过分片file[split_point+1:]截取后缀名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;也可以使用 os.path模块的函数splitext()来实现，splitext()返回一个列表，第一个部分是文件名，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第二个部分是后缀名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 修改txt后缀名为md&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filelist = os.listdir(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; file &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; filelist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    namelist = os.path.splitext(file)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; namelist[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&quot;.md&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_name = namelist[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&quot;.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        os.rename(file,new_name)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;glob模块用于路径的匹配，返回给定匹配条件的文件列表。glob模块组重要的函数就是glob(),该函数返回符合同一匹配条件的多个文件&lt;br&gt;golb()函数的参数应该符合正则表达式的语法要求&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 返回后缀为html的文件列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; glob&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list = glob.glob(&lt;span class=&quot;string&quot;&gt;&quot;*.txt&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(type(list))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;glob做更多的匹配匹配出桌面的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; glob&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# list = glob.glob(&quot;C:/Users/LW/Desktop/b*.txt&quot;)  #以b开头的txt文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list =glob.glob(&lt;span class=&quot;string&quot;&gt;&quot;C:/Users/LW/Desktop/p*/*.py&quot;&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;#输出桌面p开头文件夹中的python文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 注意使用正则表达式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(list)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;文件内容的查找和替换&quot;&gt;&lt;a href=&quot;#文件内容的查找和替换&quot; class=&quot;headerlink&quot; title=&quot;文件内容的查找和替换&quot;&gt;&lt;/a&gt;文件内容的查找和替换&lt;/h6&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = open(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#得到文件对象f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; single_line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f.readlines():  &lt;span class=&quot;comment&quot;&gt;#每次读取一行保存到变量single_line&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    list = re.findall(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;,single_line) &lt;span class=&quot;comment&quot;&gt;#调用re模块findall(),讲查找的结果保存在列表list中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(list) &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count = count + list.count(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#调用列表的count()方法，统计当前列表的list个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;hello的个数是&quot;&lt;/span&gt;,count)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;文件内容的替换&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 把hello.txt的hello全部替换成hi，并把结果保存到文件hello2.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1 = open(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2 = open(&lt;span class=&quot;string&quot;&gt;&#39;hello2.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; s &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f1.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f2.write(s.replace(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;hi&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;把f1中内容替换 为什么不行  后序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1 = open(&#39;hello.txt&#39;,&#39;r+&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for s in f1.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s.replace(&quot;hello&quot;,&quot;hi&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单个文件的执行为什么不行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;文件的比较&quot;&gt;&lt;a href=&quot;#文件的比较&quot; class=&quot;headerlink&quot; title=&quot;文件的比较&quot;&gt;&lt;/a&gt;文件的比较&lt;/h6&gt;&lt;p&gt;python使用difflib模块实现对序列、文件的比较。如果需要列出两个文件的不同，使用&lt;strong&gt;difflib&lt;/strong&gt;模块的&lt;strong&gt;SequenceMatche&lt;/strong&gt;r类来实现，其中&lt;strong&gt;get_opcodes()&lt;/strong&gt;可以返回两个序列的比较结果，是一个&lt;strong&gt;元组&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在调用get_opcodes()方法之前，需要生成一个SequenceMatcher对象&lt;br&gt;SequenceMatche(匹配指定的字符或字符串，待比较序列a，待比较序列b)&lt;br&gt;a,b序列谁在前谁是标准&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight dos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;费事，我还是使用git diff吧&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;配置文件的访问&quot;&gt;&lt;a href=&quot;#配置文件的访问&quot; class=&quot;headerlink&quot; title=&quot;配置文件的访问&quot;&gt;&lt;/a&gt;配置文件的访问&lt;/h6&gt;&lt;p&gt;应用程序中，通常使用配置文件定义一些参数。例如：数据库的配置文件用于记录数据库的字符串连接、主机名、用户名、密码等，Windows的ini是一种传统的配置文件，ini由多个块组成，每个块有多个多个配置项。例如ODBC.ini记录了windows下各种数据库系统的ODBC驱动信息。&lt;br&gt;1.读取配置文件的内容&lt;br&gt;Python的标准库ConfigParser模块用于解析配置文件，&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&quot;目录的基本操作&quot;&gt;&lt;a href=&quot;#目录的基本操作&quot; class=&quot;headerlink&quot; title=&quot;目录的基本操作&quot;&gt;&lt;/a&gt;目录的基本操作&lt;/h5&gt;&lt;h6 id=&quot;目录的创建和删除&quot;&gt;&lt;a href=&quot;#目录的创建和删除&quot; class=&quot;headerlink&quot; title=&quot;目录的创建和删除&quot;&gt;&lt;/a&gt;目录的创建和删除&lt;/h6&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mkdir(path)&lt;/td&gt;
&lt;td&gt;创建path指定的目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;makedirs(path)&lt;/td&gt;
&lt;td&gt;创建doc/hello形式的多级目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rmdir(path)&lt;/td&gt;
&lt;td&gt;删除path指定的目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;removedirs(path)&lt;/td&gt;
&lt;td&gt;删除path指定的多级目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;listdir(path)&lt;/td&gt;
&lt;td&gt;返回path下所有的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getcwd()&lt;/td&gt;
&lt;td&gt;返回当前的工作目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;chdir(path)&lt;/td&gt;
&lt;td&gt;将当前目录改为path指定的目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;walk(top,topdown=True,onerror= None)&lt;/td&gt;
&lt;td&gt;遍历目录树&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.mkdir(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.makedirs(&lt;span class=&quot;string&quot;&gt;&quot;may/day&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;# 创建多级目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.rmdir(&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.removedirs(&lt;span class=&quot;string&quot;&gt;&quot;may/day&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;# 删除多级目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h6 id=&quot;目录的遍历&quot;&gt;&lt;a href=&quot;#目录的遍历&quot; class=&quot;headerlink&quot; title=&quot;目录的遍历&quot;&gt;&lt;/a&gt;目录的遍历&lt;/h6&gt;&lt;p&gt;目录的遍历有三种方式：&lt;br&gt;递归函数、os.path.walk(), os.walk()&lt;br&gt;1.递归函数&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;VisitDir&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(path)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    list = os.listdir(path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; each_path &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; list:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pathname = os.path.join(path,each_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#调用os.path模块的join函数，获取文件的完整路径保存到pathname变量中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; os.path.isfile(pathname):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            VisitDir(pathname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# 判断pathname是否为目录，如果为目录则递归调用VisitDir(path)继续遍历底层目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(pathname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path = &lt;span class=&quot;string&quot;&gt;r&quot;C:\Users\LW\Desktop\python笔记&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#r&quot;&quot;可以处理特殊字符串比如路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# path = &quot;C:/Users/LW/Desktop/python笔记&quot;  #linux中的/写法也可以，推荐上面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    VisitDir(path)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;2.C和C++中必须使用函数递归对目录进行遍历，python可以使用os.path模块的&lt;strong&gt;walk()函数&lt;/strong&gt;进行遍历&lt;br&gt;&lt;strong&gt;python3不支持，ca擦&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# walk()函数简介&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;walk(需要遍历的路径, 回调函数, 传递给回调函数的元组)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;回调函数：对遍历路径进行处理，回调函数就是作为一个函数的参数使用，触发某个事件则调用定义好的回调函数处理这个任务。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;回调函数的&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;个参数：&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;walk()函数的元组，&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;文件列表&lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;目录列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os,os.path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;VisitDir&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(arg,dirname,names)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; filespath &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; name:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(os.path.join(dirname,filespath))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__==&lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path= &lt;span class=&quot;string&quot;&gt;r&quot;C:\Users\LW\Desktop\python笔记&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.path.walk(path,VisitDir,())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.&lt;strong&gt;os.walk()也可用于python的遍历，os.walk()比os.path.walk()更加高效，而且不需要回调函数更加容易使用。&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;VisitDir&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(path)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; root,dirs,files &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; os.walk(path):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; filepath &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; files:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(os.path.join(root,filepath))&lt;span class=&quot;comment&quot;&gt;# 输出目录下遍历的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for dirpath in dirs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(os.path.join(root,dir)) #输出目录下遍历的文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path = &lt;span class=&quot;string&quot;&gt;r&quot;C:\Users\LW\Desktop\Mypython&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    VisitDir(path)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;os.walk()具体用法&lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;walk(path,topdown=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;,onerror=&lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;path表示遍历树的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;topdown=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;表示先返回根目录下文件，在遍历子目录的文件，&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;表示先遍历子目录的文件，再返回根目录下的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;onerror=&lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt; 表示忽略文件遍历过程中产生的错误，否则提供一个自定义函数提示错误信息后继续遍历或者终止遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;4.&lt;/span&gt;该函数返回一个元组，这三个参数分别是遍历路径名，目录列表，文件列表&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&quot;文件和流&quot;&gt;&lt;a href=&quot;#文件和流&quot; class=&quot;headerlink&quot; title=&quot;文件和流&quot;&gt;&lt;/a&gt;文件和流&lt;/h5&gt;&lt;p&gt;读写文件的方式有多种，如文件的读写，数据库的读写。为了有效的表示数据的读写，把文件、外设、网络连接等数据传输抽象成流。数据的传输好像流水从一个容器流到另一个容器。&lt;/p&gt;
&lt;h6 id=&quot;Python的流对象&quot;&gt;&lt;a href=&quot;#Python的流对象&quot; class=&quot;headerlink&quot; title=&quot;Python的流对象&quot;&gt;&lt;/a&gt;Python的流对象&lt;/h6&gt;&lt;p&gt;Python隐藏了流机制，在python的模块中找不到类似Stream的类。python把文件的处理和流关联在一起，流对象实现了File类的所有方法。&lt;br&gt;sys提供了三种基本的流对象：&lt;br&gt;stdin: 标准输入&lt;br&gt;stdout: 标准输出&lt;br&gt;stderr： 错误输出&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# stdin是流的标准输入，可以通过stdin读取hello.txt的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可以理解把文件的内容输入到流&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys.stdin = open(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; file &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sys.stdin.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(file)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;stdout是流的标准输出，前面的程序都是把程序的结果输出到控制台，现在通过stdout重定向输出，把输出结果保存在文件中。&quot;&gt;&lt;a href=&quot;#stdout是流的标准输出，前面的程序都是把程序的结果输出到控制台，现在通过stdout重定向输出，把输出结果保存在文件中。&quot; class=&quot;headerlink&quot; title=&quot;stdout是流的标准输出，前面的程序都是把程序的结果输出到控制台，现在通过stdout重定向输出，把输出结果保存在文件中。&quot;&gt;&lt;/a&gt;stdout是流的标准输出，前面的程序都是把程序的结果输出到控制台，现在通过stdout重定向输出，把输出结果保存在文件中。&lt;/h6&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys.stdout = open(&lt;span class=&quot;string&quot;&gt;r&quot;./hello.txt&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;r+&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 以追加模式打开当前目录下的文件hello.txt，并把hello.txt设置为终端输出设备(默认是系统的控制台)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;goodbye my almost lover&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys.stdout.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;stderr-错误输出&quot;&gt;&lt;a href=&quot;#stderr-错误输出&quot; class=&quot;headerlink&quot; title=&quot;stderr 错误输出&quot;&gt;&lt;/a&gt;stderr 错误输出&lt;/h6&gt;&lt;blockquote&gt;
&lt;p&gt;日志文件通常会记录应用程序每次操作的执行结果。日志文件的记录便于维护人员了解当前系统的状况，甚至可以用于数据的回复(比如数据库的日志文件)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;python的stderr用于记录、输出异常信息，通过stderr对象可以实现日志文件的功能。例如，当error_log.txt的内容为空，就在日志文件的error.log中记录异常的信息。如果error_log.txt的内容不为空，就在日志文件的error.log中记录正确的信息。&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys,time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys.stderr = open(&lt;span class=&quot;string&quot;&gt;&quot;error.log&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = open(&lt;span class=&quot;string&quot;&gt;&quot;error_log.txt&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = time.strftime(&lt;span class=&quot;string&quot;&gt;&quot;%Y-%m-%d %H:%M:%S&quot;&lt;/span&gt;,time.localtime())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; content:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;监控文件正常&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sys.stderr.write(t+&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;+content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; Exception(t + &lt;span class=&quot;string&quot;&gt;&quot;异常信息&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 如果文件的内容不为空，则向error.log记录当前时间和txt内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 文件为空抛出异常，在error.log记录当前时间和异常信息。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;(2) 模拟Java的输入、输出流(输入输出以文件为对象，FileInputStream文件输入流，把文件的内容写入流)&lt;br&gt;先调用函数FileInputStream()读取该函数的参数hello.txt文件，然后调用函数FileOutputStream()吧FileInputStream()读取到的内容写入到hello2.txt文件中(&lt;strong&gt;相当于COPY文件的内容&lt;/strong&gt;)&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 文件输入流&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FileInputStream&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename)&lt;/span&gt;:&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#采用Generator函数的设计风格，模拟java的FileInputStream的工作方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f:          &lt;span class=&quot;comment&quot;&gt;#控制读取文件每行的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; byte &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; line:   &lt;span class=&quot;comment&quot;&gt;#控制读取每个字节的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; byte       &lt;span class=&quot;comment&quot;&gt;# yiel保留字返回每个字节的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; StopIteration &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f.close&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 文件输出流&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FileOutputStream&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(inputStream,filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            byte = inputStream.__next__() &lt;span class=&quot;comment&quot;&gt;#获取取yield保留字产生的字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            f.write(byte)   &lt;span class=&quot;comment&quot;&gt;# write可以把字符串和字节写入，writelines()把列表的内容写入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; StopIteration &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FileOutputStream(FileInputStream(&lt;span class=&quot;string&quot;&gt;&#39;hello.txt&#39;&lt;/span&gt;),&lt;span class=&quot;string&quot;&gt;&#39;mylady.txt&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;(3) 设计文件属性浏览程序（&lt;strong&gt;写轮子、用别人的好轮子、不要重复造轮子&lt;/strong&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习函数类、基本概念，是用来解决实际问题的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;程序需要解决的问题：通过给定目录路径查看文件的名称、大小、创建时间、最后修改日期和最后访问日期。&lt;br&gt;ShowFileProperties()的实现大概分3个步骤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遍历path指定的目录，获取每个子目录的路径&lt;/li&gt;
&lt;li&gt;遍历子目录下的所有文件，并返回文件的属性列表&lt;/li&gt;
&lt;li&gt;分解属性列表，将属性列表的值格式化输出&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;使用glob模块查找文件&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; glob&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# list = glob.glob(&quot;C:/Users/LW/Desktop/b*.txt&quot;)  #以b开头的txt文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list =glob.glob(&lt;span class=&quot;string&quot;&gt;&quot;C:/Users/LW/Desktop/p*/*.py&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(list)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://huaban.com/go/?pin_id=436154113&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;python的控制语句&quot;&gt;&lt;a href=&quot;#python的控制语句&quot; class=&quot;headerlink&quot; title=&quot;python的控制语句&quot;&gt;&lt;/a&gt;python的控制语句&lt;/h5&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = input(&lt;span class=&quot;string&quot;&gt;&quot;x:&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# input支持用户输入数字和表达式，最后返回数字类型，表达式会自动计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = raw_imput(&lt;span class=&quot;string&quot;&gt;&quot;x:&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# raw_input捕获原始输入，返回的是字符串类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = int(x) &lt;span class=&quot;comment&quot;&gt;# 如果需要使用数字类型,转换位数字类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = x+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;####### switch语句&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;switch语句容易造成代码不易维护，使源文件拥挤。&lt;strong&gt;面向对象程序设计，常常对switch语句进行重构，把switch语句分解成若干个类。&lt;/strong&gt;当然对于分支流程简单的switch可以使用字典来实现，使用字典更加容易管理switch.&lt;br&gt;字典是键值对组成的集合，类似JAVA的HashTable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 使用字典实现switch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; division&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# python提供了__future__模块，把新版本的特性导入到当前版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x =&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;operator = &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;+&quot;&lt;/span&gt;: x+y,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;: x*y,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;-&quot;&lt;/span&gt;: x-y,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;: x/y,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; result.get(operator)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;循环语句&quot;&gt;&lt;a href=&quot;#循环语句&quot; class=&quot;headerlink&quot; title=&quot;循环语句&quot;&gt;&lt;/a&gt;循环语句&lt;/h6&gt;&lt;p&gt;python循环语句包括while和for&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;####### while循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;numbers = raw_input(&lt;span class=&quot;string&quot;&gt;&quot;输入几个数字，以逗号分隔&quot;&lt;/span&gt;).split(&lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 输入数字，赋值给numbers列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x &amp;lt; len(numbers):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; numbers[x]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; = x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 带else的while的循环语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = input(&lt;span class=&quot;string&quot;&gt;&quot;输入x的值&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(x!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(x&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  x&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;=x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   x+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;=x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;=i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; print(&lt;span class=&quot;string&quot;&gt;&quot;第%d循环&quot;&lt;/span&gt;%i, x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;x等于0&quot;&lt;/span&gt;，x)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;####### for循环&lt;br&gt;for循环用于遍历一个集合，依次访问集合中的每一个项目&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; 变量 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; 集合：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 集合可以是元组、列表、字典等数据结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 每次从集合中取出一个值并赋值给变量，else可以省略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for循环通常与range()函数一起使用，range(开始，结束值，步长)返回一个列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;range(5,-1,-1) -&amp;gt;[5,4,3,2,1,0]    包前不包后&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# for in 语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;正数&quot;&lt;/span&gt;,x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; x == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;零&quot;&lt;/span&gt;,x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;负数&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;函数结束&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;python中没有for(x=2;x&amp;lt;15;x++)这种表达式，可以使用：&lt;br&gt;&lt;code&gt;x= 0
while x &amp;lt; 5:
    print x
    x + 1=x&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;####### break 和 continue&lt;br&gt;break: 直接中断循环&lt;br&gt;continue: 停止本次循环，进入下一次循环&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x != y:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# x不等于y，continue，进入下次循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# x等于y,break中断循环，输入：0，1，2，3，4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;介绍下xrange()函数：&lt;/strong&gt;&lt;br&gt;xrange是一个类，返回一个xrange对象，`xrange(开始，结束值，步长）&lt;br&gt;xrange()进行遍历的时候                      &lt;strong&gt;每次只返回一个值&lt;/strong&gt; &lt;strong&gt;&lt;br&gt;range()返回的是列表             &lt;/strong&gt;一次性计算并返回所有的值**，&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# xrange()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = xrange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x &lt;span class=&quot;comment&quot;&gt;#输出xrange(8),这是一个xrange对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;#输出 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; x[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;#输出最后一个元素的值 输出结果为：7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;####### xrange()实现的冒泡排序算法&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bubbleSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(numbers)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(numbers)&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(j):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; numbers[i] &amp;gt; numbers[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]:   &lt;span class=&quot;comment&quot;&gt;# 把数值小的放到顶端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                numbers[i], numbers[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = numbers[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], numbers[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(numbers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numbers = [&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bubbleSort(numbers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    main()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Python文件的处理&quot;&gt;&lt;a href=&quot;#Python文件的处理&quot; class=&quot;headerlink&quot; title=&quot;Python文件的处理&quot;&gt;&lt;/a&gt;Python文件的处理&lt;/h4&gt;&lt;p&gt;数据的存储可以使用数据库（保持了数据完整性、关联性，数据更加安全可靠）和文件（简单易用，通常用于存储应用程序软件的参数和临时数据）&lt;/p&gt;
&lt;h5 id=&quot;文件的基本操作&quot;&gt;&lt;a href=&quot;#文件的基本操作&quot; class=&quot;headerlink&quot; title=&quot;文件的基本操作&quot;&gt;&lt;/a&gt;文件的基本操作&lt;/h5&gt;&lt;p&gt;python提供os,os.path,shutil等模块用于处理文件用于处理文件，包括：&lt;br&gt;文件的创建、读写、修改和复制、删除和重命名&lt;br&gt;文件内容的搜索和替换&lt;br&gt;文件内容的比较&lt;br&gt;配置文集的读写，目录创建和遍历&lt;br&gt;文件和流&lt;/p&gt;
&lt;h6 id=&quot;文件的打开和创建&quot;&gt;&lt;a href=&quot;#文件的打开和创建&quot; class=&quot;headerlink&quot; title=&quot;文件的打开和创建&quot;&gt;&lt;/a&gt;文件的打开和创建&lt;/h6&gt;&lt;p&gt;python使用内联函数file()创建和打开文件， 返回一个file对象可以对文件进行各种操作&lt;br&gt;&lt;strong&gt;使用open()可以替换file()，open()是file()的别名&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;file(name, mode, buffering)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# name:被打开文件的名称，mode文件的打开模式，buffering设置缓存模式，0是无缓存，1表示行缓存，&amp;gt;1表示缓冲区的大小以字节为单位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;模式名称&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;以只读方式打开&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r+&lt;/td&gt;
&lt;td&gt;以读写方式打开&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;以写入方式打开，先删除原有内容，再写入新的数据，&lt;strong&gt;如果文件不存在就创建一个新的文件 &lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w+&lt;/td&gt;
&lt;td&gt;以读写方式打开，先删除原有内容，再写入新的数据，&lt;strong&gt;如果文件不存在就创建一个新的文件&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;以写入方式打开，在文件末尾增加新的内容，如果文件不存在就创建一个新的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a+&lt;/td&gt;
&lt;td&gt;以读写方式打开，在文件末尾增加新的内容，如果文件不存在就创建一个新的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;以二进制方式打开文件，与r r+  w w+ a +结合使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;U&lt;/td&gt;
&lt;td&gt;支持所有换行符，\r \n &lt;code&gt;\r\n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;对于图片，视频文件必须使用“b”（也就是二进制的方式读写）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;file的常用属性和方法：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性名称&lt;/th&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Closed&lt;/td&gt;
&lt;td&gt;判断文件是否关闭，关闭返回True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mode&lt;/td&gt;
&lt;td&gt;显示文件的打开模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Encoding&lt;/td&gt;
&lt;td&gt;显示文件的编码模式   print(f.Encoding) f是file对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Newlines&lt;/td&gt;
&lt;td&gt;显示文件的换行模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file(name,mode,buffering)&lt;/td&gt;
&lt;td&gt;以mode模式打开name文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flush&lt;/td&gt;
&lt;td&gt;把缓存区内容写入磁盘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;close&lt;/td&gt;
&lt;td&gt;关闭文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;read(5)&lt;/td&gt;
&lt;td&gt;读取文件中读取5个字节的内容作为字符串返回&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;readline()&lt;/td&gt;
&lt;td&gt;读取1行作为字符串返回，readlines(2)表示每行每次读取两个字节，直到行的末尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;readlines()&lt;/td&gt;
&lt;td&gt;读取每行的内容存储在列表中返回&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;seek(offset, whence)&lt;/td&gt;
&lt;td&gt;把文件指针移动到1个新的位置，offset是相对于whence的位置，whence为0从文件开始的位置计算，为1表示从当前位置计算，为2表示从文件末尾位置计算&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tell()&lt;/td&gt;
&lt;td&gt;返回文件指针的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;next()&lt;/td&gt;
&lt;td&gt;返回下一行的内容，并将文件的指针移动到下一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;truncate(size)&lt;/td&gt;
&lt;td&gt;删除size个字节的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;write(str)&lt;/td&gt;
&lt;td&gt;将字符串str的内容写入文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;writelines(str)&lt;/td&gt;
&lt;td&gt;将字符串序列的内容写入文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python基础" scheme="http://yoursite.com/tags/python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>python网络数据采集1</title>
    <link href="http://yoursite.com/2016/10/01/python%E7%BD%91%E7%BB%9C%E9%87%87%E9%9B%861/"/>
    <id>http://yoursite.com/2016/10/01/python网络采集1/</id>
    <published>2016-10-01T07:17:31.137Z</published>
    <updated>2016-11-03T12:12:34.717Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/REMitchell/python-scraping&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python网络数据采集代码(github)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/bc0acb2f96d7314b03e5d59527587275e362a75c128f8-sD64Th_fw658&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;python代码简洁，拥有高级数据结构，能够以简单高效的方式执行面向对象编程，&lt;strong&gt;但是它的运行效率受人诟病&lt;/strong&gt;，所以python经常作为一种“胶水语言”，把耗时的核心部分使用C/C++等效率更高的语言编写，然后再由python粘和。事实上，在大多数数据任务上，python的运行效率已经可以媲美C/C++.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在大数据深入人心的时代，网络数据采集作为网络、数据库、和机器学习等领域的交汇点，成为满足个性化网络数据需求的最佳实践。网络数据采集技术可以进一步精炼数据，把网络上杂乱无章的的数据聚合成规范的形式，方便分析和挖掘。&lt;/p&gt;
&lt;p&gt;工作中经常会遇到各种数据，比如几百页的数据，或者在数据杂乱无章的网站中充满着带有陷阱的表单和坑爹的验证码，甚至需要的数据保存在网页版的PDF和网络图片中。你需要了解常用的数据采集手段和网络表单安全措施。&lt;/p&gt;
&lt;p&gt;网络数据采集可以使用多种语言，比如：python, java ,php, C#, Go都可以。Python拥有简洁轻松的语法，开箱可用的模块，强大快乐的社区，总可以快速构建出简单高效的解决方案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网络数据采集是涉及多个领域的：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python数据采集的模块有：urllib, BeautifulSoup, lxml, Scrapy, PdfMiner, Requests, Selenium, NLTK, Pillow, unittest,Pysocks等&lt;br&gt;还有一些知名网站的API，MySQL数据库，OpenRefine数据分析工具，PhanthomJS无头浏览器以及Tor代理服务器等内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;如果需要了解python多进程(multiprocessing)，并发(concurrency)，集群(cluster)等高性能和多核编程，可以移步python高性能、多核编程、设计模式的书籍。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;进行网络数据采集时，要控制网络数据采集的速度，降低被采集网站服务器的负担。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;什么是网络数据采集&quot;&gt;&lt;a href=&quot;#什么是网络数据采集&quot; class=&quot;headerlink&quot; title=&quot;什么是网络数据采集&quot;&gt;&lt;/a&gt;什么是网络数据采集&lt;/h4&gt;&lt;p&gt;网络数据采集也称 网页抓屏(screen scraping),数据挖掘(data mining), 网络收割(Web harvesting),或者网络机器人(bots)。&lt;br&gt;网络数据采集是通过多种手段收集网络数据的方式，涉及数据库，网络服务器，HTTP协议，HTML语言，网络安全，图像处理，数据科学等。&lt;br&gt;网络数据采集不光是通过与API交互(或者与浏览器进行交互)的方式，还需要处理js，多媒体和cookie的新式网站。最常用的方法是写一个自动化程序向网络服务器请求数据(通常是HTML表单或其他网页文件)，然后对数据进行解析，提取需要的信息。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;网络数据挖掘流程：&lt;/strong&gt;采集数据   -&amp;gt;    数据清洗    -&amp;gt;挖掘模型构建    -&amp;gt;    归类展示(可视化)&lt;br&gt;&lt;strong&gt;数据采集的可视化&lt;/strong&gt;; 爬取数据    -&amp;gt;存入数据库     -&amp;gt;调用数据库将数据可视化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网络爬虫可以完成传统搜索引擎不能做的事情，搜索引擎不能填写表单，比如爬取大量网站的数据查询出航班价格随时间变化的图表，爬虫可以一次可以成千上百万个网页。&lt;/p&gt;
&lt;p&gt;存在各种API(Twitter或者维基百科的API)，可以向用户提供服务器中格式完好的数据，而且一个API提供了不同的数据类型，在某些时候API是比爬虫获取数据更加方便。但是在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你收集的数据来自不同的网站，没有一个API能够综合多个网站的数据。&lt;/li&gt;
&lt;li&gt;你采取的数据非常小众，网站不会为你单独做一个api&lt;/li&gt;
&lt;li&gt;一些网站没有基础设施或者技术能力去建API&lt;/li&gt;
&lt;li&gt;即使API存在，有时候还会有请求内容和次数限制，API提供的数据类型或者数据格式也可能无法满足需求&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大多数的应用场景都会用到这样毫无阻碍获取数据的手段：市场预测，机器语言翻译，甚至医疗诊断领域，通过对新闻网站、文章以及健康论坛中的数据进行采集和分析，也可以获取很多好处。无论处于哪个领域，网络数据采集都会让你的工作更加高效，提升生产力，甚至开创一个全新的领域。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;初见网络爬虫&quot;&gt;&lt;a href=&quot;#初见网络爬虫&quot; class=&quot;headerlink&quot; title=&quot;初见网络爬虫&quot;&gt;&lt;/a&gt;初见网络爬虫&lt;/h4&gt;&lt;p&gt;基本原理：如何利用Python从服务器请求信息，如何对服务器的响应进行基本处理，如何利用自动化手段与网站进行交互。最终你将创建出具有域名切换、信息收集、信息存储功能的爬虫。&lt;br&gt;爬虫的基本想法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过域名获取网站HTML数据&lt;/li&gt;
&lt;li&gt;根据目标信息解析数据&lt;/li&gt;
&lt;li&gt;存储目标信息&lt;/li&gt;
&lt;li&gt;如果需求，移动到下一个页面重复这个过程&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;网络连接&quot;&gt;&lt;a href=&quot;#网络连接&quot; class=&quot;headerlink&quot; title=&quot;网络连接&quot;&gt;&lt;/a&gt;网络连接&lt;/h5&gt;&lt;h6 id=&quot;get-post请求的区别&quot;&gt;&lt;a href=&quot;#get-post请求的区别&quot; class=&quot;headerlink&quot; title=&quot;get,post请求的区别&quot;&gt;&lt;/a&gt;get,post请求的区别&lt;/h6&gt;&lt;p&gt;HTTP从网络服务获取信息有4种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GET&lt;/strong&gt;: 一般指在浏览器中输入url（不含参数），服务器返回信息的方式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; POST&lt;/strong&gt;：当你填写表单或者提交信息到网络服务器后端程序时使用。比如：你登录网站时，就是通过用户名和密码(有可能通过加密)发起一个POST请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PUT&lt;/strong&gt;: 在网站交互的过程中不常用，在API请求有时使用。PUT请求用来更新一个对象或信息。比如：更新一个老用户的邮箱。现在好多API更新信息都使用POST替代PUT，这取决与API请求本身是如何构建的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt;：用于删除一个对象。比如我们向&lt;code&gt;http://myapi.com/user/23&lt;/code&gt;发起一个DELETE请求，就会删除ID号是23的用户。DELETE在公用API不常用，不能随便让一个用户删除数据库的信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h6 id=&quot;SSL和SSH&quot;&gt;&lt;a href=&quot;#SSL和SSH&quot; class=&quot;headerlink&quot; title=&quot;SSL和SSH&quot;&gt;&lt;/a&gt;SSL和SSH&lt;/h6&gt;&lt;p&gt;&lt;a href=&quot;http://www.open-open.com/lib/view/open1422417444048.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;++SSH外链++&lt;/a&gt;&lt;br&gt;SSH：安全外壳协议（SSH）是一种在&lt;strong&gt;不安全网络上&lt;/strong&gt;提供&lt;strong&gt;安全远程登录&lt;/strong&gt;及其它&lt;strong&gt;安全网络服务&lt;/strong&gt;的协议。Secure Shell，又可记为SSH&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.oschina.net/translate/everything-you-ever-wanted-to-know-about-ssl?cmp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;++SSL外链++&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/wm_1991/article/details/51954571&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;++SSL外链2++&lt;/a&gt;&lt;br&gt;OpenSSL 是一个强大的安全套接字层密码库，Apache 使用它加密 HTTPS，OpenSSH 使用它加密SSH，但是，你不应该只将其作为一个库来使用，它还是一个多用途的、跨平台的密码工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多多使用知乎，google，百度是个坑&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/19577317&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http 和 https 有何区别？如何灵活使用？&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h6 id=&quot;关于url中-amp-的作用：&quot;&gt;&lt;a href=&quot;#关于url中-amp-的作用：&quot; class=&quot;headerlink&quot; title=&quot;关于url中# #! ? &amp;amp;的作用：&quot;&gt;&lt;/a&gt;关于url中&lt;code&gt;# #! ? &amp;amp;&lt;/code&gt;的作用：&lt;/h6&gt;&lt;p&gt;&lt;code&gt;#&lt;/code&gt; 代表锚点，可以跳转到页面指定的位置，&lt;code&gt;#&lt;/code&gt;后面的内容称为hashtag, hashtag多用于AJAX请求获取数据。&lt;br&gt;如果进行url请求，修改&lt;code&gt;#&lt;/code&gt;后面的内容，浏览器不会向服务器重新加载index.html,既&lt;strong&gt;不会重新加载&lt;/strong&gt;，但是会在浏览器中&lt;strong&gt;增加一条历史记录&lt;/strong&gt;。&lt;br&gt;&lt;code&gt;window.location.hash&lt;/code&gt;读取hashtag,这是一个可读可写的变量，用于判断网页状态是否改变，增加一条访问记录。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AJAX = JAVASCRIPT + XML&lt;/code&gt;&lt;br&gt;&lt;strong&gt;AJAX&lt;/strong&gt;是一种用于&lt;strong&gt;创建快速动态网页的技术&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;?&lt;/code&gt;在url中有两种作用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;连接作用,&lt;strong&gt;连接网址和参数&lt;/strong&gt;，比如：&lt;code&gt;http://www.baidu.com/?userid=walkk&amp;amp;password=123456&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;清楚缓存： index.html?test123123,表示不调用缓存，认为是新地址重新加载。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;就是上文中的，间隔参数的作用&lt;/p&gt;
&lt;h6 id=&quot;GET方法向服务器请求数据的过程&quot;&gt;&lt;a href=&quot;#GET方法向服务器请求数据的过程&quot; class=&quot;headerlink&quot; title=&quot;GET方法向服务器请求数据的过程&quot;&gt;&lt;/a&gt;GET方法向服务器请求数据的过程&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;A电脑发送一串0、1的比特值，这些比特构成了一种信息，包括&lt;strong&gt;请求头和消息体&lt;/strong&gt;。请求头包括了A本地路由的MAC地址和服务器B的IP地址，消息体包含了A对B服务器的请求内容。&lt;/li&gt;
&lt;li&gt;A的路由器收到所有0、1比特值，把它理解成一个数据包(package)，从A的MAC地址寄到B的IP的地址，A的路由器将数据包加上自己的IP地址作为“发件地址”，然后通过互联网发出去&lt;/li&gt;
&lt;li&gt;A的数据包经过了一些中介服务器，沿着正确的物理/电路路径前进，到达了B的服务器&lt;/li&gt;
&lt;li&gt;B的服务器收取到数据包，解析请求头里面的目标端口(通常是网络应用的80端口，IP地址相当于街道地址，端口相当于房间号)，把数据包传到网络服务器对应的应用上。&lt;/li&gt;
&lt;li&gt;服务器应用从服务器处理器器收到一串数据，&lt;ul&gt;
&lt;li&gt;这是一个GET请求&lt;/li&gt;
&lt;li&gt;请求文件Indx.html&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;网络服务器应用找到对应的HTML文件，把它打成数据包，通过本地的路由器回传到B服务器上。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&quot;BeautifulSoup&quot;&gt;&lt;a href=&quot;#BeautifulSoup&quot; class=&quot;headerlink&quot; title=&quot;BeautifulSoup&quot;&gt;&lt;/a&gt;BeautifulSoup&lt;/h5&gt;&lt;p&gt;使用urlopen()获取HTML数据，然后把HTML数据传到BeautifulSoup对象，转换成(树型的类似XML结构)下面的结构：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;**html**            -&amp;gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;.....&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**head**           -&amp;gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;....&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**body**          -&amp;gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;An Int...&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;Loren ip....&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; urllib.request &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; urlopen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url = &lt;span class=&quot;string&quot;&gt;&quot;www.baidu.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html = urlopen(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bsobj = BeautifulSop(html.read())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(bsobj.h1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这里访问的是html下body中第一个h1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bsobj.h1  通过对象名获取节点属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bsobj.h1 = bsobj.html.h1 = bsobj.body.h1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;一般很少使用，使用正则或Beautiful中的find(),findAll()过滤标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;网络数据采集添加-异常处理-Important&quot;&gt;&lt;a href=&quot;#网络数据采集添加-异常处理-Important&quot; class=&quot;headerlink&quot; title=&quot;网络数据采集添加   异常处理 (Important)&quot;&gt;&lt;/a&gt;网络数据采集添加   &lt;em&gt;异常处理&lt;/em&gt; (Important)&lt;/h5&gt;&lt;p&gt;网络数据采集会遇到：网页数据格式不友好，网站服务器怠机，目标数据的标签找不到等等问题，添加&lt;strong&gt;异常处理try….. except&lt;/strong&gt;防止程序奔溃，死循环，增加健壮性。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;html = ulropen(&amp;quot;www.jianshu.com&amp;quot;)&lt;/code&gt;&lt;br&gt;就像请求数据会出现两种异常：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目标网页在服务器上不存在(或获取页面的过程中出错)&lt;/li&gt;
&lt;li&gt;服务器不存在&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一种异常发 生, 会返回HTTP错误，比如&lt;code&gt;404 Page Not Found, 500 Internal Server Error&lt;/code&gt;,所有类似的异常，urlopen都会返回&lt;code&gt;HTTPError&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    html = urlopen(&lt;span class=&quot;string&quot;&gt;&quot;www.jianshu.com&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; HTTPError &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 添加代码，返回空值，中断程序，或者执行另一个方案&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#程序继续，如果在上面的try...except捕捉异常中返回或&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#break中断，不需要else语句，else内容也不执行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第二种情况，服务器不存在（url不存在或者写错了），urlopen会返回一个&lt;em&gt;None对象&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; html &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:       &lt;span class=&quot;comment&quot;&gt;# 注意是urlopen返回的None对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&lt;span class=&quot;string&quot;&gt;&quot;URL Not Found&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	程序继续&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果调用Beautiful对象标签，增加一个判断条件判断标签是否存在，不存在返回None对象。但是如果继续访问&lt;strong&gt;None&lt;/strong&gt;对象下面的子标签就会返回一个&lt;strong&gt;AttributeError&lt;/strong&gt;&lt;br&gt;如何对这两种情形做出检查：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    badcontent = bsobj.nonExistingTag.subTag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; AttributeError &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;Tag not Found&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; badcontent &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;Tag not Found&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(badcontent)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写爬虫的时候，&lt;strong&gt;思考代码总体格局&lt;/strong&gt;，既容易捕捉异常，又方便阅读。&lt;br&gt;为了重用代码：多写getSiteHtml(),和getTitle()这种通用函数(具有周密的异常处理功能，修改函数内容别人就可以调用)，进行快速稳定的网络采集。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;复杂HTML解析-使用爬虫的几种方式&quot;&gt;&lt;a href=&quot;#复杂HTML解析-使用爬虫的几种方式&quot; class=&quot;headerlink&quot; title=&quot;复杂HTML解析 + 使用爬虫的几种方式&quot;&gt;&lt;/a&gt;复杂HTML解析 + 使用爬虫的几种方式&lt;/h4&gt;&lt;p&gt;解决复杂HTML页面需要考虑的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;寻找是否有HTML页面样式更加友好的移动版&lt;/li&gt;
&lt;li&gt;寻找隐藏在JS中的内容&lt;/li&gt;
&lt;li&gt;URL链接有时候能直接提取出title标题&lt;/li&gt;
&lt;li&gt;寻求多个数据源看是否有相同数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在面对埋藏很深或格式不友好的数据，千万不要不经过思考就写代码。&lt;/p&gt;
&lt;h4 id=&quot;添加异常捕获&quot;&gt;&lt;a href=&quot;#添加异常捕获&quot; class=&quot;headerlink&quot; title=&quot;添加异常捕获&quot;&gt;&lt;/a&gt;添加异常捕获&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; urllib.request &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; urlopen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSoup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__title__ = &#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__author__ = &#39;walsky&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__mtime__ = &#39;2016.10.30&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__email__ = &#39;wal139491@163.com&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# code is far away from bugs with the god animal protecting&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    I love animals. They taste delicious.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              ┏┓      ┏┓&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ┏┛┻━━━┛┻┓&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ┃      ☃      ┃&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ┃  ┳┛  ┗┳  ┃&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ┃      ┻      ┃&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ┗━┓      ┏━┛&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ┃      ┗━━━┓&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ┃  神兽保佑    ┣┓&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ┃　永无BUG！   ┏┛&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ┗┓┓┏━┳┓┏┛&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  ┃┫┫  ┃┫┫&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  ┗┻┛  ┗┻┛&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getSiteHtml&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Url)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        html = urlopen(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; HttPError &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        getTitle(html)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(html)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; html &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;Url Not Found&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bsobj = BeautifulSoup(html)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            title = bsobj.html.title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; AttributeError &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&lt;span class=&quot;string&quot;&gt;&quot;Title not found&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; title &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print(&lt;span class=&quot;string&quot;&gt;&quot;title not found&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print(title)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getSiteHtml(&lt;span class=&quot;string&quot;&gt;&quot;www.jianshu.com&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;BeautifulSoup-1&quot;&gt;&lt;a href=&quot;#BeautifulSoup-1&quot; class=&quot;headerlink&quot; title=&quot;BeautifulSoup&quot;&gt;&lt;/a&gt;BeautifulSoup&lt;/h4&gt;&lt;p&gt;BeautifulSoup有四个对象:&lt;br&gt;&lt;strong&gt;Tag&lt;/strong&gt;（标签里面有name,attrs）&lt;br&gt;获取标签name, attrs[]&lt;br&gt;bsobj.p.name       bsobj.p.attrs[]&lt;br&gt;单独获得某个属性值 :&lt;br&gt;&lt;code&gt;bsobj.a[&amp;#39;href&amp;#39;]     bsobj.a.get(&amp;#39;href&amp;#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BeautifulSoup对象&lt;/strong&gt;（bsobj）&lt;br&gt;bsobj = BeautifulSoup(html)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NavigableString&lt;/strong&gt;&lt;br&gt;(标签中的文字比如&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;标签中的文字&lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt;)&lt;br&gt;&lt;code&gt;p.string&lt;/code&gt;  就可以获得标签中的文字&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Comment &lt;/strong&gt;获得html的注释内容   &lt;code&gt;&amp;lt;!--注释--&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;lt;a class=&amp;quot;sister&amp;quot; href=&amp;quot;http://example.com/elsie&amp;quot; id=&amp;quot;link1&amp;quot;&amp;gt;&amp;lt;!-- Elsie --&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;br&gt;利用 .string 来输出它的内容，它已经把注释符号去掉了，我们获取其中内容需要做一下判断：&lt;br&gt;&lt;code&gt;if type(soup.a.string)==bs4.element.Comment:
    print soup.a.string&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;具体使用方法&quot;&gt;&lt;a href=&quot;#具体使用方法&quot; class=&quot;headerlink&quot; title=&quot;具体使用方法&quot;&gt;&lt;/a&gt;具体使用方法&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;bsobj.h1  bsobj.a   bsobj.p&lt;/code&gt;&lt;br&gt;查找的是在所有内容中的第一个符合要求的标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bsobj.find()  和bsobj.findall() 方法&lt;br&gt;find()和findAll(),都有过滤标签作用，最后返回的一个&lt;strong&gt;标签列表&lt;/strong&gt;，就像&lt;code&gt;&amp;lt;a class=&amp;quot;sister&amp;quot; href=&amp;quot;http://example.com/elsie&amp;quot; id=&amp;quot;link1&amp;quot;&amp;gt;Elsie&amp;lt;/a&amp;gt;&lt;/code&gt; 完整的标签&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;由于返回的是一个列表，要想得到其中内容1.使用for 循环遍历列表2.使用&lt;strong&gt;get_text()&lt;/strong&gt;方法去除&lt;strong&gt;html&lt;/strong&gt;的标签&lt;br&gt;nameList = bsobj.findAll(“span”,{“class”:{“red”,”blue”}})&lt;br&gt;for content in nameList:&lt;br&gt;       content.get_text()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; findAll(tag, attributes, recursive, text, limit, keywords)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;# tag 传入一个标签名，或多个标签名组成的列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; findAll(&lt;span class=&quot;string&quot;&gt;&quot;h1&quot;&lt;/span&gt;) 或 findAll(&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;h1&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;h2&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;p&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 最后以列表返回 h1,h1,p,a 的多个标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;# attributes 用Python字典封装若干 属性+属性值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; findAll(&lt;span class=&quot;string&quot;&gt;&quot;span&quot;&lt;/span&gt;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;class&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# recursive 布尔变量，ture查找所有子标签，false只查找一级子标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  一般不需要设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# text 使用标签中的内容进行匹配 &amp;lt;p&amp;gt;这是标签内容&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nameList =bsobj.findAll(text=&lt;span class=&quot;string&quot;&gt;&quot;i love python&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(len(nameList))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# limit  限制列表的获取几项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; findAll(&lt;span class=&quot;string&quot;&gt;&quot;p&quot;&lt;/span&gt;,limit =&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;# keyword 也就是使用&#39;=&#39; 指定标签的具体属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; content = findAll(id=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; print(content[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].get_text())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;其实:findAll(id=&quot;foot&quot;) = findAll(&quot;&quot;,&amp;#123;&quot;id&quot; : &quot;foot&quot;&amp;#125;) #不指定标签名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   但你不能使用：findAll(class=&quot;green&quot;) 因为class是python的保留字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;可以：findAll(_class=&quot;green&quot;) 或findAll(&quot;&quot;,&amp;#123;&quot;class&quot;:&quot;green&quot;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;find(tag, attributes, recursive, text, limit, keywords)少了limit属性，基本使用方法相同&lt;/p&gt;
&lt;h4 id=&quot;导航树&quot;&gt;&lt;a href=&quot;#导航树&quot; class=&quot;headerlink&quot; title=&quot;导航树&quot;&gt;&lt;/a&gt;导航树&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://cuiqingcai.com/1319.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;++参考外链++&lt;/a&gt;&lt;br&gt;其实就是使用文档结构获取：&lt;br&gt;tr是table标签的&lt;strong&gt;子标签&lt;/strong&gt;，  children&lt;br&gt;tr,th,td,img,span是table标签的&lt;strong&gt;后代标签&lt;/strong&gt;   descendants&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; child &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; bsobj.findAll(&lt;span class=&quot;string&quot;&gt;&quot;table&quot;&lt;/span&gt;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;giftshit&quot;&lt;/span&gt;&amp;#125;).children():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(child)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#就会打出giftshift表格的所有数据行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; child &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; bsobj.findAll(&lt;span class=&quot;string&quot;&gt;&quot;table&quot;&lt;/span&gt;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;giftshit&quot;&lt;/span&gt;&amp;#125;).tr.next_siblings:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(child)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#就会打出giftshift表格的除了第一行所有数据行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#或者使用previous_siblings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;正则和BeautifulSoup的结合&quot;&gt;&lt;a href=&quot;#正则和BeautifulSoup的结合&quot; class=&quot;headerlink&quot; title=&quot;正则和BeautifulSoup的结合&quot;&gt;&lt;/a&gt;正则和BeautifulSoup的结合&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSoup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; urllib.request &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; urlopen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html = urlopen(&lt;span class=&quot;string&quot;&gt;&quot;www.jianshu.com&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bsobj = BeautifulSoup(html)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imgs = bsobj.findAll(&lt;span class=&quot;string&quot;&gt;&quot;img&quot;&lt;/span&gt;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:re.compile(&lt;span class=&quot;string&quot;&gt;&quot;\.\.\/img\img.*\.jpg&quot;&lt;/span&gt;)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查找a标签，都在id为bodyContent的div中，都以&quot;/wiki/&quot;开头&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url链接中不含&quot;:&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;links = bsobj.find(&lt;span class=&quot;string&quot;&gt;&quot;div&quot;&lt;/span&gt;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;bodyContent&quot;&lt;/span&gt;&amp;#125;).findAll(&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;href&quot;&lt;/span&gt;:re.compile(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;^(/wiki/)((?!:).)*$&quot;&lt;/span&gt;)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#((?!.)*)括号编组这样就任何地方都不会出现:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; img &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; imgs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(img[&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;]) &lt;span class=&quot;comment&quot;&gt;#使用attrs获取图片的相对路径,获取属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(img.get_text()) &lt;span class=&quot;comment&quot;&gt;#使用get_text获取img的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&amp;gt;&amp;lt;!-- Elsie --&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果提取&amp;lt;a 标签属性&amp;gt;，a.attrs[&quot;herf&quot;]或a[&quot;href&quot;]都行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果提取&amp;lt;a&amp;gt;标签内容，a.get_text()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;使用lambda函数替代正则&quot;&gt;&lt;a href=&quot;#使用lambda函数替代正则&quot; class=&quot;headerlink&quot; title=&quot;使用lambda函数替代正则&quot;&gt;&lt;/a&gt;使用lambda函数替代正则&lt;/h4&gt;&lt;p&gt;Beautiful允许我们把lambda函数作为findAll()的参数，&lt;strong&gt;限制条件是：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;必须把一个标签作为参数&lt;/li&gt;
&lt;li&gt;返回结果是bool形式&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bsobj.findAll(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; tag: len(tag.attrs == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 返回只有两个属性的标签列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 考虑使用，简洁快速最重要&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;关于python的html解析库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BeautifulSoup不用介绍了&lt;/li&gt;
&lt;li&gt;lxml,这个库可以用来解析Html和XML文档，大部分源码用C实现，以非常底层的实现而闻名。虽然学习需要花一些时间，但在处理大多数HTML文档速度都比较快。&lt;/li&gt;
&lt;li&gt;HTML parser 这是Python自带的解析库&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/REMitchell/python-scraping&quot;&gt;python网络数据采集代码(github)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.hb.aicdn.com/bc0acb2f96d7314b03e5d59527587275e362a75c128f8-sD64Th_fw658&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;python代码简洁，拥有高级数据结构，能够以简单高效的方式执行面向对象编程，&lt;strong&gt;但是它的运行效率受人诟病&lt;/strong&gt;，所以python经常作为一种“胶水语言”，把耗时的核心部分使用C/C++等效率更高的语言编写，然后再由python粘和。事实上，在大多数数据任务上，python的运行效率已经可以媲美C/C++.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在大数据深入人心的时代，网络数据采集作为网络、数据库、和机器学习等领域的交汇点，成为满足个性化网络数据需求的最佳实践。网络数据采集技术可以进一步精炼数据，把网络上杂乱无章的的数据聚合成规范的形式，方便分析和挖掘。&lt;/p&gt;
&lt;p&gt;工作中经常会遇到各种数据，比如几百页的数据，或者在数据杂乱无章的网站中充满着带有陷阱的表单和坑爹的验证码，甚至需要的数据保存在网页版的PDF和网络图片中。你需要了解常用的数据采集手段和网络表单安全措施。&lt;/p&gt;
&lt;p&gt;网络数据采集可以使用多种语言，比如：python, java ,php, C#, Go都可以。Python拥有简洁轻松的语法，开箱可用的模块，强大快乐的社区，总可以快速构建出简单高效的解决方案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网络数据采集是涉及多个领域的：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python数据采集的模块有：urllib, BeautifulSoup, lxml, Scrapy, PdfMiner, Requests, Selenium, NLTK, Pillow, unittest,Pysocks等&lt;br&gt;还有一些知名网站的API，MySQL数据库，OpenRefine数据分析工具，PhanthomJS无头浏览器以及Tor代理服务器等内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;如果需要了解python多进程(multiprocessing)，并发(concurrency)，集群(cluster)等高性能和多核编程，可以移步python高性能、多核编程、设计模式的书籍。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;进行网络数据采集时，要控制网络数据采集的速度，降低被采集网站服务器的负担。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;什么是网络数据采集&quot;&gt;&lt;a href=&quot;#什么是网络数据采集&quot; class=&quot;headerlink&quot; title=&quot;什么是网络数据采集&quot;&gt;&lt;/a&gt;什么是网络数据采集&lt;/h4&gt;&lt;p&gt;网络数据采集也称 网页抓屏(screen scraping),数据挖掘(data mining), 网络收割(Web harvesting),或者网络机器人(bots)。&lt;br&gt;网络数据采集是通过多种手段收集网络数据的方式，涉及数据库，网络服务器，HTTP协议，HTML语言，网络安全，图像处理，数据科学等。&lt;br&gt;网络数据采集不光是通过与API交互(或者与浏览器进行交互)的方式，还需要处理js，多媒体和cookie的新式网站。最常用的方法是写一个自动化程序向网络服务器请求数据(通常是HTML表单或其他网页文件)，然后对数据进行解析，提取需要的信息。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;网络数据挖掘流程：&lt;/strong&gt;采集数据   -&amp;gt;    数据清洗    -&amp;gt;挖掘模型构建    -&amp;gt;    归类展示(可视化)&lt;br&gt;&lt;strong&gt;数据采集的可视化&lt;/strong&gt;; 爬取数据    -&amp;gt;存入数据库     -&amp;gt;调用数据库将数据可视化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网络爬虫可以完成传统搜索引擎不能做的事情，搜索引擎不能填写表单，比如爬取大量网站的数据查询出航班价格随时间变化的图表，爬虫可以一次可以成千上百万个网页。&lt;/p&gt;
&lt;p&gt;存在各种API(Twitter或者维基百科的API)，可以向用户提供服务器中格式完好的数据，而且一个API提供了不同的数据类型，在某些时候API是比爬虫获取数据更加方便。但是在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你收集的数据来自不同的网站，没有一个API能够综合多个网站的数据。&lt;/li&gt;
&lt;li&gt;你采取的数据非常小众，网站不会为你单独做一个api&lt;/li&gt;
&lt;li&gt;一些网站没有基础设施或者技术能力去建API&lt;/li&gt;
&lt;li&gt;即使API存在，有时候还会有请求内容和次数限制，API提供的数据类型或者数据格式也可能无法满足需求&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大多数的应用场景都会用到这样毫无阻碍获取数据的手段：市场预测，机器语言翻译，甚至医疗诊断领域，通过对新闻网站、文章以及健康论坛中的数据进行采集和分析，也可以获取很多好处。无论处于哪个领域，网络数据采集都会让你的工作更加高效，提升生产力，甚至开创一个全新的领域。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python网络数据采集" scheme="http://yoursite.com/tags/python%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>我该如何Act</title>
    <link href="http://yoursite.com/2016/09/25/All%20is%20Acting/"/>
    <id>http://yoursite.com/2016/09/25/All is Acting/</id>
    <published>2016-09-25T05:56:18.054Z</published>
    <updated>2016-10-11T01:39:01.037Z</updated>
    
    <content type="html">&lt;h3 id=&quot;值得浏览的网站&quot;&gt;&lt;a href=&quot;#值得浏览的网站&quot; class=&quot;headerlink&quot; title=&quot;值得浏览的网站:&quot;&gt;&lt;/a&gt;值得浏览的网站:&lt;/h3&gt;&lt;p&gt;　　　　　　　　　　　　　&lt;strong&gt;　思考有时候比机械的code重要&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/zuozhu.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;95%&lt;a href=&quot;http://blog.csdn.net/holybin/article/details/36180941&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSDN解析CTCI&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CSDN还是要多看看的，不管机器学习还是数据挖掘(分析)，上面的干货多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;95%&lt;a href=&quot;http://www.cocoachina.com/programmer/20140904/9524.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;对菜鸟开发者的叮咛&lt;/a&gt;&lt;br&gt;90%&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTMxMzA4NQ==&amp;amp;mid=2655932796&amp;amp;idx=1&amp;amp;sn=edc70a72d8864b6e041c0d134d2b2913&amp;amp;chksm=bc879aae8bf013b8b663726c18829508065ecdae7e332879f71772095259a84c11e38e4b185d&amp;amp;scene=0#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;每个优秀程序员必须具备的技术技能&lt;/a&gt;&lt;br&gt;95%&lt;a href=&quot;https://book.douban.com/subject/10436668/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;豆瓣读书&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/25753386/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序员面试金典（第5版)&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;豆瓣上书书评，算法，面试的书籍、豆列都是极好的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;80%&lt;a href=&quot;http://www.cricode.com/category/program-language/python/pythonlevel1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;快客网&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;2016-9-25-下午2-00-我打算写完睡一会&quot;&gt;&lt;a href=&quot;#2016-9-25-下午2-00-我打算写完睡一会&quot; class=&quot;headerlink&quot; title=&quot;2016.9.25  下午2:00 我打算写完睡一会&quot;&gt;&lt;/a&gt;2016.9.25  下午2:00 我打算写完睡一会&lt;/h5&gt;&lt;p&gt;最近我很少更新博客和简书了，有很多方面的原因吧。开学将近一个月了，我也不知道上的是什么，发生了什么我也记不太清了，连诉说的人也越来越少，我不是抱怨因为不起作用了只能默默接受，毕竟事实就是这样。&lt;/p&gt;
&lt;p&gt;爸妈之前一直电话微信问我怎么样，我不愿意他们担心太多也不愿意去骗他们，只能说还好，具体哪里好哪里不好我也懒得说，也说不清。我的身体越来越不好，连一点免疫力都没有，有时候我在想这他妈该死的日子能不能发生点转机，结果真的没有。我连续好几天的做噩梦，后来才知道我爸心脏可能有些不舒服了，跟我爷爷一起在医院里治疗。之前总想着玩，家里还有我爸呢，现在我爸身体不好了，我觉得我应该做些什么了，最让我沮丧的是我什么也做不了，我没有找到一份工作哪怕挣一点钱，我妈总是说你回来吧(不知道她是心大还是太溺爱我)，为着一个不知道怎样的结局而走着，我不想因为我个人的事情破坏大家的心情，所以我一直以为我与这个世界是格格不入的。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;我一直在跟都哥、表妹说我会回上海的，可是我知道这个概率很小，是的我想回到你们身边，我没想挣多少钱，我就想上上班能跟你们一起开开玩笑吃吃饭，找一个相爱的人在喜欢的城市呆着就够了。时间都会让我们发生改变，都哥不用费太大力气就有一份好工作毕竟兔哥你们都是名校毕业的，星哥表妹也都在为自己的事情而做着。不是我不够努力，也许就是差一点运气还有我那该死的身体和杂念。我来北京一直蒙七爷、慧姐、阿磊他们照顾，他们都在上班，曾经我想通过上研究生发生点变化，然而事与愿违，我看不到方向，看不清未来的样子，爸妈的老去以及各种压力让我难过。&lt;/p&gt;
&lt;p&gt;我不知道我花了几个晚上才写了一点点python笔记有没有什么作用，我极其讨厌那种理论上的东西，结果上课发现全是的，我只能自己多看点书，学习专业课和多多编程练习。&lt;/p&gt;
&lt;h5 id=&quot;2016-9-30-晚上9-30-发完我应该会去跑步&quot;&gt;&lt;a href=&quot;#2016-9-30-晚上9-30-发完我应该会去跑步&quot; class=&quot;headerlink&quot; title=&quot;2016.9.30 晚上9:30  发完我应该会去跑步&quot;&gt;&lt;/a&gt;2016.9.30 晚上9:30  发完我应该会去跑步&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/IMAG1459.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;(MD,等我尽快把python基础看完，一定要写个程序上传图片到七牛返回外链，天天网页打开太麻烦了)&lt;br&gt;前两天因为一些小事搞得自己心情不好，可能我太在意某些东西比如mx情节了，周三那么忙的一天都挺过来了，现在想想确实也没什么，&lt;strong&gt;任何事情都不能阻止你美丽的活着不是吗&lt;/strong&gt;，今天也在上面的&lt;a href=&quot;http://www.cocoachina.com/programmer/20140904/9524.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;对菜鸟开发者的叮咛&lt;/a&gt;中读到一句话一句话:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;别再和他人比较，而是与自己比较&lt;br&gt;当人开始不断地和他人比较的时，很容易陷入复杂的情绪。&lt;/p&gt;
&lt;p&gt;与其想着别人有多好、多厉害，专注于自身的独特点，思考什么对你来说是重要的事情，设定目标，并且花心思找寻方法来一一达成，这才是最实际也最重要的。&lt;/p&gt;
&lt;p&gt; 比如说，不妨想想，现在的自己跟一年前的自己有什么不同？看看成长了多少、进步了多少，一年后，你想成为怎样的人？自觉，会渐渐地改变你，会更凸显出你的个人特质，无形中让你越来越好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;英语老师好像每节课都会看我写的东西对我说good，我好像从开学开始就一直坐在最后一排，可能我想安静的看书吧或者我怕老师问我问题，事实上我是不怎么喜欢多说话的这是个沟通的问题我可能要慢慢改掉，我4月份在南京的时候大姨说我小时后很聪明很喜欢说话，现在长大了说话越来越少了，我当时吃了一惊，小时候的事情一点也不记得了，居然与现在有这么大不同，不过我从小到大都是面瘫脸好像(∩_∩)。&lt;/p&gt;
&lt;p&gt;我总是如此的反复，现在心情会好一些，不再去多想事情，早上爸妈7,8点给我发微信，我一直睡到10点结果下午看完电影回来还是困成狗真不知道为啥，晚上我妈又用微信视频告诉我去北京医院看看，我这辈子最讨厌去医院，合肥，南京，石家庄的医院快去全了，我就很生气把我妈一顿说气呼呼给挂了，现在想想挺后悔的，我妈太啰嗦太容易夸大事实，所以我总把她当成出气的对象，当我难过伤心无能为力还是只能打给她。她不会做饭衣服也洗不干净从来不打扮，但她是我妈，这就值得我爱她了。以后还是克制吧，毕竟陪父母，爷爷的时间也没那么多了。&lt;/p&gt;
&lt;p&gt;下来一个多小时书都没打开，查查东西，听听歌就10点了，算了十一才刚刚开始，说不定明天还要去医院，谁能拯救我脆弱的小身板啊。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有学软件，我一定会是个很好的写手，作家谈不上，我总是会有奇奇怪怪的想法，现在后悔也晚了，谁让上了贼船了呢，不过我发现我能做一些事情的时候也没那么讨厌软件了，还是要略微拼命学习啊（身体不好不能太拼(∩_∩)），跟其他朋友还是差了点，不过我要养家糊口不是吗。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Over, have a good night everybody.&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;值得浏览的网站&quot;&gt;&lt;a href=&quot;#值得浏览的网站&quot; class=&quot;headerlink&quot; title=&quot;值得浏览的网站:&quot;&gt;&lt;/a&gt;值得浏览的网站:&lt;/h3&gt;&lt;p&gt;　　　　　　　　　　　　　&lt;strong&gt;　思考有时候比机械的code重要&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/zuozhu.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;95%&lt;a href=&quot;http://blog.csdn.net/holybin/article/details/36180941&quot;&gt;CSDN解析CTCI&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CSDN还是要多看看的，不管机器学习还是数据挖掘(分析)，上面的干货多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;95%&lt;a href=&quot;http://www.cocoachina.com/programmer/20140904/9524.html&quot;&gt;对菜鸟开发者的叮咛&lt;/a&gt;&lt;br&gt;90%&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTMxMzA4NQ==&amp;amp;mid=2655932796&amp;amp;idx=1&amp;amp;sn=edc70a72d8864b6e041c0d134d2b2913&amp;amp;chksm=bc879aae8bf013b8b663726c18829508065ecdae7e332879f71772095259a84c11e38e4b185d&amp;amp;scene=0#rd&quot;&gt;每个优秀程序员必须具备的技术技能&lt;/a&gt;&lt;br&gt;95%&lt;a href=&quot;https://book.douban.com/subject/10436668/&quot;&gt;豆瓣读书&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/25753386/&quot;&gt;程序员面试金典（第5版)&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;豆瓣上书书评，算法，面试的书籍、豆列都是极好的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;80%&lt;a href=&quot;http://www.cricode.com/category/program-language/python/pythonlevel1&quot;&gt;快客网&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;2016-9-25-下午2-00-我打算写完睡一会&quot;&gt;&lt;a href=&quot;#2016-9-25-下午2-00-我打算写完睡一会&quot; class=&quot;headerlink&quot; title=&quot;2016.9.25  下午2:00 我打算写完睡一会&quot;&gt;&lt;/a&gt;2016.9.25  下午2:00 我打算写完睡一会&lt;/h5&gt;&lt;p&gt;最近我很少更新博客和简书了，有很多方面的原因吧。开学将近一个月了，我也不知道上的是什么，发生了什么我也记不太清了，连诉说的人也越来越少，我不是抱怨因为不起作用了只能默默接受，毕竟事实就是这样。&lt;/p&gt;
&lt;p&gt;爸妈之前一直电话微信问我怎么样，我不愿意他们担心太多也不愿意去骗他们，只能说还好，具体哪里好哪里不好我也懒得说，也说不清。我的身体越来越不好，连一点免疫力都没有，有时候我在想这他妈该死的日子能不能发生点转机，结果真的没有。我连续好几天的做噩梦，后来才知道我爸心脏可能有些不舒服了，跟我爷爷一起在医院里治疗。之前总想着玩，家里还有我爸呢，现在我爸身体不好了，我觉得我应该做些什么了，最让我沮丧的是我什么也做不了，我没有找到一份工作哪怕挣一点钱，我妈总是说你回来吧(不知道她是心大还是太溺爱我)，为着一个不知道怎样的结局而走着，我不想因为我个人的事情破坏大家的心情，所以我一直以为我与这个世界是格格不入的。&lt;br&gt;
    
    </summary>
    
      <category term="读书和生活" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E5%92%8C%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>数据库概论基础知识—-1</title>
    <link href="http://yoursite.com/2016/08/20/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%AE%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E2%80%94-1/"/>
    <id>http://yoursite.com/2016/08/20/数据库概论基础知识—-1/</id>
    <published>2016-08-20T09:11:06.850Z</published>
    <updated>2016-08-24T10:26:13.169Z</updated>
    
    <content type="html">&lt;h4 id=&quot;数据库系统概论&quot;&gt;&lt;a href=&quot;#数据库系统概论&quot; class=&quot;headerlink&quot; title=&quot;数据库系统概论&quot;&gt;&lt;/a&gt;数据库系统概论&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://hbimg.b0.upaiyun.com/f65de72a8e926773cde52778b9e00aea489080651521f-gCW2W4_fw658&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;数据库的4个基本概念&quot;&gt;&lt;a href=&quot;#数据库的4个基本概念&quot; class=&quot;headerlink&quot; title=&quot;数据库的4个基本概念&quot;&gt;&lt;/a&gt;数据库的4个基本概念&lt;/h5&gt;&lt;p&gt;数据、数据库、数据库管理系统、数据库系统是与数据库技术密切相关的4个基本概念&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;数据(data)&lt;/p&gt;
&lt;p&gt;数据是数据库中存储的基本对象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;描述事物的符号记录被称为数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  描述事物的符号可以是数字、文本、音频、图形、图像、视频等多种形式，他们都可以经过数字化存入计算机。&lt;/p&gt;
&lt;p&gt;  在计算机中常常这样描述：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   (李明，男，199505，江苏省南京市，计算机系，2013)`



数据的含义称为数据的语义，数据与其语义是不可分的。
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;数据库(Database,DB)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据库是长期存储在计算机内、有组织、可共享的大量数据的集合。数据库中的数据按一定的数据模型组织、描述和存储，具有较小的冗余度、较高的数据独立性和易扩展性，并为各种用户共享。&lt;/p&gt;
&lt;p&gt;概括的来讲，数据库具有&lt;strong&gt;永久存储、可共享、有组织&lt;/strong&gt;三个基本特点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库管理系统&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据库管理系统是位于用户与操作系统之间的一层数据管理软件，数据库管理系统和操作系统一样是计算机的基础软件，它的主要功能包括以下几个方面：&lt;/p&gt;
&lt;p&gt;（1） &lt;strong&gt;数据定义功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库管理系统提供数据定义语言(DDL)，用户通过它可以方便地对数据库中的数据对象的组成和结构进行定义&lt;/p&gt;
&lt;p&gt;（2）&lt;strong&gt;数据组织、存储和管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库管理系统要分类组织、存储和管理各种数据，包括数据字典、用户数据、数据的存取路径等。数据的组织和存储的基本目标是提高空间利用率和方便存取，提供多种存取方法(如Hash查找、索引查找、顺序查找)来提高存取效率。&lt;/p&gt;
&lt;p&gt;（3） &lt;strong&gt;数据操纵功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库管理系统提供数据操纵功能(DML)，用户可以使用它来操纵数据，如插入、修改、删除、查询等&lt;/p&gt;
&lt;p&gt;（4）&lt;strong&gt;数据库的事务管理和运行管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库在建立、运用和维护时由数据库管理系统统一管理和控制，以保证事务的正确运行，保证数据的安全性、完整性、多用户对数据的并发使用及发生故障后的系统恢复&lt;/p&gt;
&lt;p&gt;（5）&lt;strong&gt;数据库的简历与维护&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库的建立和维护功能包括数据库的初始数据的输入、转换功能，数据库的转储、恢复功能，数据库的重组织和性能监视、分析功能等。这些功能由使用程序和管理工具完成&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（6） 其他功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其他功能：数据库管理系统与网络中其他软件系统的通信功能，一个数据库管理系统与另一个数据库管理系统或文件系统的数据转换功能，异构数据库之间的互访和互操作功能。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库系统&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据库系统是由数据库、数据库管理系统(及其应用开发工具)、应用程序和数据库管理员(DBA)组成的存储、管理、处理和维护数据的系统。&lt;/p&gt;
&lt;p&gt;一般不引起混淆的情况下，把数据库系统简称为数据库&lt;/p&gt;
&lt;h6 id=&quot;数据管理的三个阶段&quot;&gt;&lt;a href=&quot;#数据管理的三个阶段&quot; class=&quot;headerlink&quot; title=&quot;数据管理的三个阶段&quot;&gt;&lt;/a&gt;数据管理的三个阶段&lt;/h6&gt;&lt;p&gt;人工管理阶段-&amp;gt;文件系统阶段-&amp;gt;数据库系统阶段&lt;/p&gt;
&lt;p&gt;现在比较流行的：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://redis.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.yiibai.com/redis/redis_quick_guide.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redis快速入门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis 有三个主要使其有别于其它很多竞争对手的特点：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Redis是完全在内存中保存数据的数据库，使用磁盘只是为了持久性目的； &lt;/p&gt;
&lt;p&gt;Redis相比许多键值数据存储系统有相对丰富的数据类型； &lt;/p&gt;
&lt;p&gt;Redis可以将数据复制到任意数量的从服务器中； &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://hadoop.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hadoop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://hadoop.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hadoop官方文档&lt;/a&gt;&lt;a href=&quot;http://hadoop.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hadoop.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/userid29778labid764time1427382197256&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://spark.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jobbole.com/86232/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spark入门Python版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://spark.apache.org/docs/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spark官方文档&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Spark是UC Berkeley AMP lab所开源的类Hadoop MapReduce的通用的并行计算框架，Spark基于map reduce算法实现的分布式计算，拥有Hadoop MapReduce所具有的优点；但不同于MapReduce的是Job中间输出和结果可以保存在内存中，从而不再需要读写HDFS，因此Spark能更好地适用于数据挖掘与机器学习等需要迭代的map reduce的算法。其架构如下图所示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/spark_jiagou.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h6 id=&quot;数据库系统的优点&quot;&gt;&lt;a href=&quot;#数据库系统的优点&quot; class=&quot;headerlink&quot; title=&quot;数据库系统的优点&quot;&gt;&lt;/a&gt;数据库系统的优点&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;数据结构化&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据库系统实现整体数据的结构化，这是数据库系统的主要特征之一，整体结构化，数据之间有联系。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;数据共享性高、冗余度低、且易扩充&lt;/p&gt;
&lt;p&gt;数据共享课大大减少数据冗余 ，节约存储空间，数据共享还可以避免数据之间的不相容性和不一致性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据独立性高&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据独立性：物理独立性和逻辑独立性&lt;/p&gt;
&lt;p&gt;物理独立性指：用户的应用程序与数据库中的数据的物理存储是相互独立的。&lt;/p&gt;
&lt;p&gt;逻辑独立性：用户的应用程序与数据库的逻辑结构相互独立&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据由数据库管理系统统一管理和控制&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据库管理系统必须提供以下几个方面的控制：&lt;/p&gt;
&lt;p&gt;（1）数据安全性保护&lt;/p&gt;
&lt;p&gt;数据的安全性指保护数据以防止不合法使用造成数据泄密和破坏&lt;/p&gt;
&lt;p&gt;（2）数据完整性保护&lt;/p&gt;
&lt;p&gt;数据的完整性指数据的正确性、有效性和相容性&lt;/p&gt;
&lt;p&gt;（3）并发控制&lt;/p&gt;
&lt;p&gt;多用户同时存取、修改数据库时，可能发生相互干扰而得到错误的结果或使得数据库的完整性遭到破坏，必须对多用户的并发操作加以控制和协调。&lt;/p&gt;
&lt;p&gt;（4） 数据库恢复&lt;/p&gt;
&lt;p&gt;数据库管理系统必须有将数据库从错误状态恢复到某一已知正确状态的功能。&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据库是长期存储在计算机内有组织、大量、共享的数据集合。它可以供各种用户共享，具有最小冗余度和较高的数据独立性。数据库管理系统在数据库建立、运用和维护时对数据库进行统一控制，以保证数据的完整性和安全性，并在多用户同时使用数据库时进行并发控制，在发生故障时对数据库进行恢复。&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&quot;数据模型&quot;&gt;&lt;a href=&quot;#数据模型&quot; class=&quot;headerlink&quot; title=&quot;数据模型&quot;&gt;&lt;/a&gt;数据模型&lt;/h5&gt;&lt;p&gt;数据模型也是一种模型，它是对现实世界数据特征的抽象，也就是说数据模型是来描述数据、组织数据、和对数据进行操作的。&lt;/p&gt;
&lt;p&gt;数据模型是数据库系统的核心和基础。各种机器上实现的数据库管理系统软件都是基于某种数据模型或者说是支持某种数据模型的。&lt;/p&gt;
&lt;p&gt;数据模型应该满足三种要求：（1）比较真实的模拟现实世界（2）容易为人所理解（3）便于在计算机上实现&lt;/p&gt;
&lt;p&gt;根据模型应用的不同目的，可以将模型分为两大类&lt;/p&gt;
&lt;p&gt;（一）&lt;strong&gt;概念模型（信息模型）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;按用户的观点对数据和信息建模，主要用于数据库设计&lt;/p&gt;
&lt;p&gt;（二）&lt;strong&gt;逻辑模型和物理模型&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;逻辑模型： 层次模型、网状模型、关系模型、面向对象模型、对象关系模型、半结构化数据模型等。它是按计算机系统的观点对数据建模，主要用于数据库管理系统的实现。&lt;/p&gt;
&lt;p&gt;物理模型：是对数据最底层的抽象，它描述数据在系统内部的表示和存取方法，或在磁盘或磁带上的存储方式和存取方式，是面向计算机系统的。物理模型的具体实现是数据库管理系统的任务，数据库设计人员要了解和选择物理模型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;人们将现实世界抽象为信息世界，然后将信息世界转换为机器世界&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&quot;概念模型&quot;&gt;&lt;a href=&quot;#概念模型&quot; class=&quot;headerlink&quot; title=&quot;概念模型&quot;&gt;&lt;/a&gt;概念模型&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;信息世界的基本概念&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实体： 客观存在并可相互区别的事物称为实体&lt;/p&gt;
&lt;p&gt;属性： 实体所具有的某一特性称为属性&lt;/p&gt;
&lt;p&gt;码： 唯一标识实体的属性集称为码&lt;/p&gt;
&lt;p&gt;实体型： 用实体名及属性名集合来抽象和刻画同类实体，称为实体型&lt;/p&gt;
&lt;p&gt;例如： 学生（学号，姓名，姓名，性别，入学时间，手机号）就是一个实体型&lt;/p&gt;
&lt;p&gt;实体集：同一类型实体的集合称为实体集，全体学生就是一个实体集&lt;/p&gt;
&lt;p&gt;联系：不同实体集之间的联系，实体之间的联系有一对一，一对多，和多对多等多种联系。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;概念模型的一种表示方法：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实体联系方法用E-R图来描述现实世界的概念模型，E-R方法也称E-R模型。&lt;/p&gt;
&lt;h6 id=&quot;数据模型的组成要素&quot;&gt;&lt;a href=&quot;#数据模型的组成要素&quot; class=&quot;headerlink&quot; title=&quot;数据模型的组成要素&quot;&gt;&lt;/a&gt;数据模型的组成要素&lt;/h6&gt;&lt;p&gt;数据模型通常由：&lt;strong&gt;数据结构、数据操作和完整性约束条件组成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据结构：用来描述数据库的组成对象以及对象之间的联系&lt;/p&gt;
&lt;p&gt;数据操作： 指对数据库中各种对象（型）的实例（值）允许执行的操作的集合，包括操作及有关的操作规则。&lt;/p&gt;
&lt;p&gt;数据的完整性约束条件是一组完整性规则。&lt;/p&gt;
&lt;h6 id=&quot;常用数据模型&quot;&gt;&lt;a href=&quot;#常用数据模型&quot; class=&quot;headerlink&quot; title=&quot;常用数据模型&quot;&gt;&lt;/a&gt;常用数据模型&lt;/h6&gt;&lt;p&gt;层次模型&lt;/p&gt;
&lt;p&gt;网状模型&lt;/p&gt;
&lt;p&gt;关系模型&lt;/p&gt;
&lt;p&gt;面向对象数据模型&lt;/p&gt;
&lt;p&gt;对象关系数据模型&lt;/p&gt;
&lt;p&gt;半结构化数据模型&lt;/p&gt;
&lt;p&gt;层次和网状，已经慢慢被关系数据模型所取代，20世纪80年代，面向对象的方法和技术在计算机的各个领域产生了深远的影响，也促进了数据库中面向对象数据模型的研究和发展。许多数据库厂商为了支持面向对象模型，对关系模型做了扩展，从而产生了面向对象数据模型。&lt;/p&gt;
&lt;p&gt;随着Internet的发展，以XML为代表的半结构化和非结构化数据模型成为WEB上重要的信息来源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;层次模型&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;（1）只有一个节点没有双亲节点，也就是根节点&lt;/p&gt;
&lt;p&gt;（2）根节点以外的其他节点有且只有一个双亲节点&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网状模型：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（1）多个节点可以无双亲&lt;/p&gt;
&lt;p&gt;（2）一个节点可以有多个双亲&lt;/p&gt;
&lt;h6 id=&quot;关系模型&quot;&gt;&lt;a href=&quot;#关系模型&quot; class=&quot;headerlink&quot; title=&quot;关系模型&quot;&gt;&lt;/a&gt;关系模型&lt;/h6&gt;&lt;p&gt;关系数据库系统采用关系模型作为数据的组织方式，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;关系模型的数据结构&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;每个关系模型的数据结构是一张规范的二维表。&lt;/p&gt;
&lt;p&gt;关系模型的术语：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;关系：一个关系对应通常所说的一张表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;元组： 表中的一行既为一个元组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属性：表中一列即为为一个属性，每个属性起一个名叫属性名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;码： 表中的某个属性组可以唯一确定一个元组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;域：域是一组具有相同数据类型的值的集合 （大学生年龄属性的域是15~45岁）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分量：元组中的一个属性值&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关系模型要求关系必须是规范化的，每个分量都是不可分的数据项，也就是说，不允许表中还有表。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关系模型的数据操纵和完整性约束&lt;/p&gt;
&lt;p&gt;关系模型的数据操纵包括查询、插入、删除和更新数据。这些操作必须满足完整性约束条件（实体、参照、用户自定义完整性）。&lt;/p&gt;
&lt;p&gt;关系模型数据操作是集合操作，操作对象和操作结果都是关系。关系模型把存取路径隐藏起来，用户只需要指出“干什么”而不需要说明“怎么干”。&lt;/p&gt;
&lt;h5 id=&quot;数据库系统的结构&quot;&gt;&lt;a href=&quot;#数据库系统的结构&quot; class=&quot;headerlink&quot; title=&quot;数据库系统的结构&quot;&gt;&lt;/a&gt;数据库系统的结构&lt;/h5&gt;&lt;p&gt;在数据模型中有型（type）和值（value）的区别，&lt;/p&gt;
&lt;p&gt;型：是对某一类数据的结构和属性的说明&lt;/p&gt;
&lt;p&gt;ex：学生记录定义为：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(学号，姓名，性别，年龄，籍贯)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样的记录型&lt;/p&gt;
&lt;p&gt;值：值是型的一个具体赋值&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(201315130,李明，计算机系，19，江苏省南京市)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;模式&quot;&gt;&lt;a href=&quot;#模式&quot; class=&quot;headerlink&quot; title=&quot;模式&quot;&gt;&lt;/a&gt;模式&lt;/h6&gt;&lt;p&gt;&lt;strong&gt;模式（schema）&lt;/strong&gt;是数据库中全体数据的逻辑结构和特征的描述，仅仅涉及型，不涉及值。&lt;/p&gt;
&lt;p&gt;模式的一个具体值称为&lt;strong&gt;实例&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;模式是相对稳定的，而实例是相对变动的。&lt;/p&gt;
&lt;h6 id=&quot;数据库的二级映像功能和三级模式（保证了数据独立性）&quot;&gt;&lt;a href=&quot;#数据库的二级映像功能和三级模式（保证了数据独立性）&quot; class=&quot;headerlink&quot; title=&quot;数据库的二级映像功能和三级模式（保证了数据独立性）&quot;&gt;&lt;/a&gt;数据库的二级映像功能和三级模式（保证了数据独立性）&lt;/h6&gt;&lt;p&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/sanji_moshi.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;模式：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;模式也称逻辑模式，是数据库中全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图。&lt;/p&gt;
&lt;p&gt;它是数据库系统模式结构的中间层，即不涉及数据的物理存储细节和硬件环境，又与具体的应用程序、所使用的应用开发工具及高级程序设计语言无关。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;外模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;外模式也称子模式或用户模式，它是数据库用户能够看见和使用的&lt;strong&gt;局部数据的逻辑结构和特征的描述&lt;/strong&gt;，&lt;/p&gt;
&lt;p&gt;是数据库用户的数据局视图，是与某一应用有关的数据的逻辑表示。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;内模式也称存储模式，一个数据库只有一个存储内模式，它是数据物理结构和存储方式的描述，是数据在数据库内部的组织方式。&lt;/p&gt;
&lt;p&gt;例如：记录的存储方式是堆存储还是按照某个属性的升降值存储，或按照属性值聚储存储；索引按照什么方式组织，是B+树索引还是hash索引；数据是否压缩存储，是否加密；数据的存储记录结果有何规定，如定长结构还是变长结构。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二级映像&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;外模式/模式映像&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当模式改变时（例如增加新的关系，新的属性，改变属性的数据类型等）,由数据库管理员对各个外模式/模式映像做出改变，从而是外模式保持不变。应用程序根据数据的外模式编写的，从而应用程序不必修改，保证了数据与程序的逻辑独立性，简称数据的逻辑独立性。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;模式/内模式映像&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当数据的存储结构发生改变时（例如使用了另一种存储结构），由数据库管理员对模式/内模式映像做出改变，可以使模式保持不变，从而应用程序也不必改变，保证了数据与程序的物理独立性，简称数据的物理独立性。&lt;/p&gt;
&lt;p&gt;数据与程序之间的独立性使得数据的定义和描述可以从应用程序中分离出去。数据的存取由数据库管理系统管理，从而简化了应用程序的编制，大大减少了应用程序的修改和维护。&lt;/p&gt;
&lt;h6 id=&quot;数据库系统的组成-硬件、软件、人员&quot;&gt;&lt;a href=&quot;#数据库系统的组成-硬件、软件、人员&quot; class=&quot;headerlink&quot; title=&quot;数据库系统的组成(硬件、软件、人员)&quot;&gt;&lt;/a&gt;数据库系统的组成(硬件、软件、人员)&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;硬件平台及数据库&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据库系统的数据量都很大，加上数据库管理系统的丰富的功能使得自身的规模也很大，数据库系统对硬件资源提出了较高的要求。&lt;/p&gt;
&lt;p&gt;（1）足够大的内存，存放操作系统、数据库管理系统的核心模块、数据缓冲区和应用程序。&lt;/p&gt;
&lt;p&gt;（2）有足够大的磁盘或磁盘列阵设备存放数据库，有足够大的磁盘（或光盘）做数据备份&lt;/p&gt;
&lt;p&gt;（3）要求系统有较高的通道能力，以提高数据传输率。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;软件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（1）数据库管理系统。数据库管理系统是为数据库的建立、使用、和维护配置的系统软件。&lt;/p&gt;
&lt;p&gt;（2）支持数据库管理系统运行的操作系统&lt;/p&gt;
&lt;p&gt;（3）具有与数据库接口的高级语言及其编译系统，便于应用程序开发。&lt;/p&gt;
&lt;p&gt;（4）以数据库管理系统为核心的应用开发工具。&lt;/p&gt;
&lt;p&gt;（5）为特定应用环境开发的数据库应用系统。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;人员&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开发、管理和使用数据库系统的人员主要包括&lt;strong&gt;数据库管理员、系统分析员和数据库设计人员、应用程序员和最终用户&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/shuju_shitu.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;（1）数据库管理员&lt;/p&gt;
&lt;p&gt;数据库系统环境下有两类共享资源，一类是数据库，另一类是数据库管理系统软件，需要有专门的系统监督和管理数据库系统。&lt;/p&gt;
&lt;p&gt;a. 决定数据库中的信息内容和结构&lt;/p&gt;
&lt;p&gt;b. 决定数据库的存储结构和存取策略&lt;/p&gt;
&lt;p&gt;c. 定义数据的安全性要求和完整性约束条件&lt;/p&gt;
&lt;p&gt;d. 监控数据库的使用和运行&lt;/p&gt;
&lt;p&gt;e. 数据库的改进和重组、重构。&lt;/p&gt;
&lt;p&gt;（2） 系统分析员和数据库设计人员&lt;/p&gt;
&lt;p&gt;系统分析员负责应用系统的需求分析和规范说明，要和用户及数据库管理员相结合，确定系统的硬件软件配置，并参与数据库系统的概要设计。&lt;/p&gt;
&lt;p&gt;数据库设计人员负责数据库中数据的确定和数据库各级模式的设计。数据库设计人员必须必须参加用户需求调查和系统分析，然后进行数据库设计。很多情况下，数据库设计由数据库管理员担任。&lt;/p&gt;
&lt;p&gt;（3）应用程序员&lt;/p&gt;
&lt;p&gt;应用程序员负责设计和编写应用系统的程序模块，并进行安装、调试。&lt;/p&gt;
&lt;p&gt;（4）用户&lt;/p&gt;
&lt;p&gt;a. 偶然用户&lt;/p&gt;
&lt;p&gt; 用户不经常访问数据库，但每次访问需要不同数据库的信息。如企业或组织中高中级管理人员&lt;/p&gt;
&lt;p&gt;b. 简单用户&lt;/p&gt;
&lt;p&gt;数据库大多数用户都是简单用户，工作主要是查询和更新数据库，一般是通过程序员设计友好交互界面的应用程序存取数据库。如银行职员、航空公司机票预订人员、宾馆总台服务人员&lt;/p&gt;
&lt;p&gt;c. 复杂用户&lt;/p&gt;
&lt;p&gt;复杂用户包括工程师、科学家、科学技术工作者等高科学技术背景的人员。这类人员比较熟悉数据库管理系统的各种功能，能够直接使用数据库语言访问数据库，甚至能基于数据库管理系统的应用接口编制自己的应用程序。&lt;/p&gt;
&lt;h6 id=&quot;关系&quot;&gt;&lt;a href=&quot;#关系&quot; class=&quot;headerlink&quot; title=&quot;关系&quot;&gt;&lt;/a&gt;关系&lt;/h6&gt;&lt;p&gt;关系模型的数据结构十分简单，只包含单一的数据结构——关系，也就是一张二维表。&lt;/p&gt;
&lt;p&gt;域：是具有相同数据类型值的集合。&lt;br&gt;比如：{0,1} {男，女} 大于20小于100的正整数&lt;br&gt;笛卡尔集： 给定一组域 D1,D2,D3,……,Dn,允许某些域相同， D1,D2,D3,……,Dn的笛卡尔集是：&lt;br&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;D1*D2*D3*......*Dn=&amp;#123;(d1,d2,d3,...dn)  |di(Di,i=1,2,3,.....,n&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中，每一个元素(d1,d2,d3,…dn)叫做一个&lt;strong&gt;n元组&lt;/strong&gt;，简称&lt;strong&gt;元组&lt;/strong&gt;，元组中每一个值di叫做一个分量。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;D1=&amp;#123;A,B&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D2=&amp;#123;C,D,&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D3=&amp;#123;E,F,G&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D1,D2,D3的笛卡尔集是：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D1*D2*D3=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (A,C,E),(A,C,F)(A,C,G)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    (A,D,E),(A,D,F)(A,D,G)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (B,C,E),(B,C,F)(B,C,G)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (B,D,E),(B,D,F)(B,D,G)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;总共12个元组&lt;/p&gt;
&lt;h6 id=&quot;码&quot;&gt;&lt;a href=&quot;#码&quot; class=&quot;headerlink&quot; title=&quot;码&quot;&gt;&lt;/a&gt;码&lt;/h6&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;候选码&lt;/strong&gt;：关系中某一属性组的值可以唯一标识一个元组，而其子集不能，则称该属性组为&lt;strong&gt;候选码&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;主码&lt;/strong&gt;：如果一个关系中有多个候选码，选定其中一个为主码。&lt;br&gt;候选码的诸属性称为&lt;strong&gt;主属性&lt;/strong&gt;，不包含在任意一个候选码中的属性称为&lt;strong&gt;非主属性&lt;/strong&gt;或&lt;strong&gt;非码属性&lt;/strong&gt;&lt;br&gt;极端情况下，关系中的属性都是候选码中的值，称为&lt;strong&gt;全码&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关系模型要求关系必须是规范化的，即要求关系必须满足一定的规范条件。最基本的一条就是每一个分量都是不可分割的数据项。&lt;strong&gt;规范的关系简称范式。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关系的描述称为&lt;strong&gt;关系模式&lt;/strong&gt;，可以形式化表示为：&lt;br&gt;R(U,D,DOM.F)&lt;/p&gt;
&lt;p&gt;R为关系名，U为组成该关系的属性名集合，D为U属性所来自的域，DOM为属性向域的映像集合，F为属性间数据的依赖关系集合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关系数据库的型和值&lt;/strong&gt;&lt;br&gt;关系数据库的型也称为关系数据库模式，是对关系数据库的描述&lt;br&gt;关系数据库的值是这些关系模式在某一时刻对应的关系的集合，通常就是关系数据库。&lt;/p&gt;
&lt;p&gt;关系模式的存储结构&lt;br&gt;表是关系数据的逻辑模式，在关系数据库的物理组织中，有的关系数据库管理系统的一个表对应一个操作系统文件，将物理数据组织交给操作系统完成；有的关系数据库管理系统从操作系统那里申请若干个大的文件，自己划分空间，组织表、索引等存储结构，并进行存储管理。&lt;/p&gt;
&lt;h6 id=&quot;关系操作&quot;&gt;&lt;a href=&quot;#关系操作&quot; class=&quot;headerlink&quot; title=&quot;关系操作&quot;&gt;&lt;/a&gt;关系操作&lt;/h6&gt;&lt;p&gt;基本关系操作包括：查询、删除、插入、更新。&lt;br&gt;查询又分：选择(select)，投影，连接，除，并，交，差，笛卡尔集等。&lt;br&gt;选择，投影，并，差，笛卡尔集是基本操作，其他可以由这些定义、导出。&lt;br&gt;关系操作的特点是集合操作方式，操作对象和结果都是集合。&lt;/p&gt;
&lt;h6 id=&quot;关系的完整性&quot;&gt;&lt;a href=&quot;#关系的完整性&quot; class=&quot;headerlink&quot; title=&quot;关系的完整性&quot;&gt;&lt;/a&gt;关系的完整性&lt;/h6&gt;&lt;p&gt;关系模型的完整性规则是对关系的某种约束条件。&lt;/p&gt;
&lt;p&gt;实体完整性和参照完整性是关系模型必须满足的完整性约束条件，被称作&lt;strong&gt;关系的两个不变性&lt;/strong&gt;&lt;br&gt;用户定义的完整性是应用领域需要遵循的条件，体现了具体领域中的语义约束。&lt;/p&gt;
&lt;p&gt;实体完整性：若属性(指一个或者一组属性)A是基本关系R的主属性，则A不能取空值。&lt;br&gt;参照完整性：设F是基本关系R的一个或者一组属性，但不是R的码。Ks是基本关系S的主码。如果F与Ks相对应，&lt;strong&gt;则称F是R的外码&lt;/strong&gt;，称基本关系R为参照关系，基本关系S为被参照关系。&lt;/p&gt;
&lt;p&gt;通俗来讲，就是一个表A中属性（不是码）与另一个表B中主码对应，这个表A对应属性只能取两种值：&lt;br&gt;（1）空值&lt;br&gt;（2）表B中主码的值&lt;/p&gt;
&lt;p&gt;R和S可以是同一个关系，例如：&lt;br&gt;关系学生（++++学号++++，姓名，性别，专业号，年龄，班长）&lt;br&gt;班长属性应该是该学生所在班级班长的学号，它引用了本关系“学号”属性。&lt;br&gt;班长的属性可以取两种值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空值，表示该学生所在班级尚未选出班长&lt;/li&gt;
&lt;li&gt;非空值，值为本关系中某个元组的学号值&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;数据库系统概论&quot;&gt;&lt;a href=&quot;#数据库系统概论&quot; class=&quot;headerlink&quot; title=&quot;数据库系统概论&quot;&gt;&lt;/a&gt;数据库系统概论&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://hbimg.b0.upaiyun.com/f65de72a8e926773cde52778b9e00aea489080651521f-gCW2W4_fw658&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;数据库的4个基本概念&quot;&gt;&lt;a href=&quot;#数据库的4个基本概念&quot; class=&quot;headerlink&quot; title=&quot;数据库的4个基本概念&quot;&gt;&lt;/a&gt;数据库的4个基本概念&lt;/h5&gt;&lt;p&gt;数据、数据库、数据库管理系统、数据库系统是与数据库技术密切相关的4个基本概念&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;数据(data)&lt;/p&gt;
&lt;p&gt;数据是数据库中存储的基本对象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;描述事物的符号记录被称为数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  描述事物的符号可以是数字、文本、音频、图形、图像、视频等多种形式，他们都可以经过数字化存入计算机。&lt;/p&gt;
&lt;p&gt;  在计算机中常常这样描述：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   (李明，男，199505，江苏省南京市，计算机系，2013)`



数据的含义称为数据的语义，数据与其语义是不可分的。
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;数据库(Database,DB)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据库是长期存储在计算机内、有组织、可共享的大量数据的集合。数据库中的数据按一定的数据模型组织、描述和存储，具有较小的冗余度、较高的数据独立性和易扩展性，并为各种用户共享。&lt;/p&gt;
&lt;p&gt;概括的来讲，数据库具有&lt;strong&gt;永久存储、可共享、有组织&lt;/strong&gt;三个基本特点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库管理系统&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据库管理系统是位于用户与操作系统之间的一层数据管理软件，数据库管理系统和操作系统一样是计算机的基础软件，它的主要功能包括以下几个方面：&lt;/p&gt;
&lt;p&gt;（1） &lt;strong&gt;数据定义功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库管理系统提供数据定义语言(DDL)，用户通过它可以方便地对数据库中的数据对象的组成和结构进行定义&lt;/p&gt;
&lt;p&gt;（2）&lt;strong&gt;数据组织、存储和管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库管理系统要分类组织、存储和管理各种数据，包括数据字典、用户数据、数据的存取路径等。数据的组织和存储的基本目标是提高空间利用率和方便存取，提供多种存取方法(如Hash查找、索引查找、顺序查找)来提高存取效率。&lt;/p&gt;
&lt;p&gt;（3） &lt;strong&gt;数据操纵功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库管理系统提供数据操纵功能(DML)，用户可以使用它来操纵数据，如插入、修改、删除、查询等&lt;/p&gt;
&lt;p&gt;（4）&lt;strong&gt;数据库的事务管理和运行管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库在建立、运用和维护时由数据库管理系统统一管理和控制，以保证事务的正确运行，保证数据的安全性、完整性、多用户对数据的并发使用及发生故障后的系统恢复&lt;/p&gt;
&lt;p&gt;（5）&lt;strong&gt;数据库的简历与维护&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库的建立和维护功能包括数据库的初始数据的输入、转换功能，数据库的转储、恢复功能，数据库的重组织和性能监视、分析功能等。这些功能由使用程序和管理工具完成&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（6） 其他功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其他功能：数据库管理系统与网络中其他软件系统的通信功能，一个数据库管理系统与另一个数据库管理系统或文件系统的数据转换功能，异构数据库之间的互访和互操作功能。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据库系统&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据库系统是由数据库、数据库管理系统(及其应用开发工具)、应用程序和数据库管理员(DBA)组成的存储、管理、处理和维护数据的系统。&lt;/p&gt;
&lt;p&gt;一般不引起混淆的情况下，把数据库系统简称为数据库&lt;/p&gt;
&lt;h6 id=&quot;数据管理的三个阶段&quot;&gt;&lt;a href=&quot;#数据管理的三个阶段&quot; class=&quot;headerlink&quot; title=&quot;数据管理的三个阶段&quot;&gt;&lt;/a&gt;数据管理的三个阶段&lt;/h6&gt;&lt;p&gt;人工管理阶段-&amp;gt;文件系统阶段-&amp;gt;数据库系统阶段&lt;/p&gt;
&lt;p&gt;现在比较流行的：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://redis.io/&quot;&gt;Redis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.yiibai.com/redis/redis_quick_guide.html&quot;&gt;Redis快速入门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Redis 有三个主要使其有别于其它很多竞争对手的特点：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Redis是完全在内存中保存数据的数据库，使用磁盘只是为了持久性目的； &lt;/p&gt;
&lt;p&gt;Redis相比许多键值数据存储系统有相对丰富的数据类型； &lt;/p&gt;
&lt;p&gt;Redis可以将数据复制到任意数量的从服务器中； &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://hadoop.apache.org/&quot;&gt;hadoop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://hadoop.apache.org/&quot;&gt;hadoop官方文档&lt;/a&gt;&lt;a href=&quot;http://hadoop.apache.org/&quot;&gt;http://hadoop.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/userid29778labid764time1427382197256&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://spark.apache.org/&quot;&gt;spark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jobbole.com/86232/&quot;&gt;spark入门Python版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://spark.apache.org/docs/latest/&quot;&gt;spark官方文档&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Spark是UC Berkeley AMP lab所开源的类Hadoop MapReduce的通用的并行计算框架，Spark基于map reduce算法实现的分布式计算，拥有Hadoop MapReduce所具有的优点；但不同于MapReduce的是Job中间输出和结果可以保存在内存中，从而不再需要读写HDFS，因此Spark能更好地适用于数据挖掘与机器学习等需要迭代的map reduce的算法。其架构如下图所示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/spark_jiagou.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库概论" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Mysql数据库基础</title>
    <link href="http://yoursite.com/2016/08/20/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2016/08/20/Mysql数据库基础/</id>
    <published>2016-08-20T02:22:42.938Z</published>
    <updated>2016-08-24T01:22:43.875Z</updated>
    
    <content type="html">&lt;h5 id=&quot;Mysql-启动和创建数据库&quot;&gt;&lt;a href=&quot;#Mysql-启动和创建数据库&quot; class=&quot;headerlink&quot; title=&quot;Mysql 启动和创建数据库&quot;&gt;&lt;/a&gt;Mysql 启动和创建数据库&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://d.hiphotos.baidu.com/baike/c0%3Dbaike92%2C5%2C5%2C92%2C30/sign=96e2f04307087bf469e15fbb93ba3c49/8435e5dde71190effdb15dd7cb1b9d16fdfa6074.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;sql语句注释：&lt;br&gt;&lt;code&gt;--&lt;/code&gt;表示单行注释&lt;br&gt;&lt;code&gt;/**/&lt;/code&gt;表示多行注释&lt;br&gt;&lt;strong&gt;Markdown书写格式不对，注意缩进问题&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&quot;1、ubuntu下打开Mysql服务，并使用root用户登录&quot;&gt;&lt;a href=&quot;#1、ubuntu下打开Mysql服务，并使用root用户登录&quot; class=&quot;headerlink&quot; title=&quot;1、ubuntu下打开Mysql服务，并使用root用户登录&quot;&gt;&lt;/a&gt;1、ubuntu下打开Mysql服务，并使用root用户登录&lt;/h6&gt;&lt;p&gt;&lt;code&gt;sudo service mysql start&lt;/code&gt;(也可用来检测系统是否安装mysql)&lt;br&gt;&lt;code&gt;mysql -u root&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;检测是否安装成功：&lt;br&gt;    &lt;code&gt;netstat -tap |grep mysql&lt;/code&gt;&lt;br&gt;这句话的意思就是查看监听服务进程号&lt;br&gt;    `&lt;/p&gt;
&lt;h6 id=&quot;2、连接数据库&quot;&gt;&lt;a href=&quot;#2、连接数据库&quot; class=&quot;headerlink&quot; title=&quot;2、连接数据库&quot;&gt;&lt;/a&gt;2、连接数据库&lt;/h6&gt;&lt;p&gt;&lt;code&gt;use mysql_car&lt;/code&gt;&lt;br&gt;use+[数据库名称] 表示使用某个数据库&lt;/p&gt;
&lt;p&gt;&lt;code&gt;show tables;&lt;/code&gt;&lt;br&gt;显示该数据库的各个表名(如果有视图，也会显示)&lt;/p&gt;
&lt;h6 id=&quot;3、-新建数据库&quot;&gt;&lt;a href=&quot;#3、-新建数据库&quot; class=&quot;headerlink&quot; title=&quot;3、 新建数据库&quot;&gt;&lt;/a&gt;3、 新建数据库&lt;/h6&gt;&lt;p&gt;  &lt;code&gt;CREATE   DATABASE company&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;虽然Mysql建表语句中不区分大小写，但是一般保留字(关键字)大写，变量小写&lt;/p&gt;
&lt;h6 id=&quot;4、-新建数据表&quot;&gt;&lt;a href=&quot;#4、-新建数据表&quot; class=&quot;headerlink&quot; title=&quot;4、 新建数据表&quot;&gt;&lt;/a&gt;4、 新建数据表&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;use company (连接数据库)&lt;/li&gt;
&lt;li&gt;在数据库中新建一张表的格式为：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; employee(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;phone &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;5、数据类型&quot;&gt;&lt;a href=&quot;#5、数据类型&quot; class=&quot;headerlink&quot; title=&quot;5、数据类型&quot;&gt;&lt;/a&gt;5、数据类型&lt;/h6&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;大小(字节)&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;th&gt;格式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;INT&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;整数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Float&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;单精度浮点数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DOUBLE&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;双精度浮点数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ENUM&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;单选&lt;/td&gt;
&lt;td&gt;ENUM(‘a’,’b’,’c’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SET&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;多选&lt;/td&gt;
&lt;td&gt;SET(‘1’,’2’,’3’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DATE&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;日期&lt;/td&gt;
&lt;td&gt;YYYY-MM-DD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIME&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;时间点或持续时间点&lt;/td&gt;
&lt;td&gt;HH:MM:SS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YEAR&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;年份值&lt;/td&gt;
&lt;td&gt;HH:MM:SS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CHAR&lt;/td&gt;
&lt;td&gt;0~255&lt;/td&gt;
&lt;td&gt;定长字符串&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VARCHAR&lt;/td&gt;
&lt;td&gt;0~255&lt;/td&gt;
&lt;td&gt;变长字符串&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TEXT&lt;/td&gt;
&lt;td&gt;0~65535&lt;/td&gt;
&lt;td&gt;长文本数据&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;CHAR和VARCHAR的区别&lt;/strong&gt;: CHAR的长度是固定的，而VARCHAR的长度是可以变化的，比如，存储字符串“abc”，对于CHAR (10)，表示存储的字符将占10个字节(包括7个空字符)，而同样的VARCHAR(12)则只占用3个字节的长度，12只是最大值，当你存储的字符小于12时，按实际长度存储。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;strong&gt;ENUM和SET的区别:&lt;/strong&gt; ENUM类型的数据的值，必须是定义时枚举的值的其中之一，即单选，而SET类型的值则可以多选。&lt;/p&gt;
&lt;h6 id=&quot;6、插入数据&quot;&gt;&lt;a href=&quot;#6、插入数据&quot; class=&quot;headerlink&quot; title=&quot;6、插入数据&quot;&gt;&lt;/a&gt;6、插入数据&lt;/h6&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; 表名（&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;列名a,列名b,列名c）&lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; (值&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,值&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,值&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,phone) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;周星&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;18570631121&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;成都&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;昆哥&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;130229456311&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;1,3语句相同，如果插入数据完整可以省略&lt;br&gt;2语句不全时该值为NULL&lt;br&gt;除&lt;strong&gt;INT，DOUBLE，FLOAT&lt;/strong&gt;值不需要单引号，其他数据需要单引号括起&lt;/p&gt;
&lt;p&gt;#####约束&lt;br&gt;约束：通过对表的行和列的数据做出限制，来保证表数据的完整性和唯一性&lt;br&gt;Mysql数据库的约束分类：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;约束类型：&lt;/th&gt;
&lt;th&gt;主键&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;唯一&lt;/th&gt;
&lt;th&gt;外键&lt;/th&gt;
&lt;th&gt;非空&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;关键字：&lt;/td&gt;
&lt;td&gt;PRIMARY KEY&lt;/td&gt;
&lt;td&gt;DEFAULT&lt;/td&gt;
&lt;td&gt;UNIQUE&lt;/td&gt;
&lt;td&gt;FOREIGN KEY&lt;/td&gt;
&lt;td&gt;NOT NULL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h6 id=&quot;主键&quot;&gt;&lt;a href=&quot;#主键&quot; class=&quot;headerlink&quot; title=&quot;主键&quot;&gt;&lt;/a&gt;主键&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;列级定义主键&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt; employee(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; PRIMART &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;  &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; phone &lt;span class=&quot;built_in&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表级定义主键&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt; employee(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;  AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;  &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; phone &lt;span class=&quot;built_in&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;CONSTRAINT&lt;/span&gt; emp_pk PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;复合主键(由表中两列或多列共同标识)&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt; employee(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;  &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; phone &lt;span class=&quot;built_in&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;CONSTRAINT&lt;/span&gt; emp_py PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;,phone)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;emp_py是主键名称(自定义的)&lt;/p&gt;
&lt;h6 id=&quot;默认值约束&quot;&gt;&lt;a href=&quot;#默认值约束&quot; class=&quot;headerlink&quot; title=&quot;默认值约束&quot;&gt;&lt;/a&gt;默认值约束&lt;/h6&gt;&lt;p&gt;&lt;code&gt;phone bigint(15) 15203768500&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;DEFAULT约束只会在使用INSERT语句时体现出来，&lt;br&gt;INSERT语句中，插入位置没有值，则填充默认值&lt;/p&gt;
&lt;h6 id=&quot;唯一约束&quot;&gt;&lt;a href=&quot;#唯一约束&quot; class=&quot;headerlink&quot; title=&quot;唯一约束&quot;&gt;&lt;/a&gt;唯一约束&lt;/h6&gt;&lt;p&gt;&lt;strong&gt;UNIQUE&lt;/strong&gt;比较简单，它规定一张表中指定的一列的值必须不能有重复值，即这一列每个值都是唯一的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UNIQUE(phone)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果在phone这一列插入相同的值则失败&lt;/p&gt;
&lt;h6 id=&quot;FOREIGN-KEY&quot;&gt;&lt;a href=&quot;#FOREIGN-KEY&quot; class=&quot;headerlink&quot; title=&quot;FOREIGN KEY&quot;&gt;&lt;/a&gt;FOREIGN KEY&lt;/h6&gt;&lt;p&gt;FOREIGN KEY既能保证数据完整性，又能体现表之间的关系&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CONSTRAINT emp_fk FOREIGN KEY(name) REFERENCE Em_info(em_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--name列为外键，参考列为Em_info表的em_name列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这里是多行注释&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;NOT-NULL&quot;&gt;&lt;a href=&quot;#NOT-NULL&quot; class=&quot;headerlink&quot; title=&quot;NOT NULL&quot;&gt;&lt;/a&gt;NOT NULL&lt;/h6&gt;&lt;p&gt;非空约束：&lt;code&gt;name char(20) NOT NULL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Mysql中违反非空约束，不会报错只有警告，值为0&lt;br&gt;没有非空约束：空插入，值为NULL&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,phone) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1586563241&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--警告 name被非空约束，值为空，表中显示0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; employee(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,phone) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;laiwei&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- INSERT成功 phone为空，因为没有非空约束，表中显示NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;查询&quot;&gt;&lt;a href=&quot;#查询&quot; class=&quot;headerlink&quot; title=&quot;查询&quot;&gt;&lt;/a&gt;查询&lt;/h5&gt;&lt;h6 id=&quot;1-基本select语句&quot;&gt;&lt;a href=&quot;#1-基本select语句&quot; class=&quot;headerlink&quot; title=&quot;1.基本select语句&quot;&gt;&lt;/a&gt;1.基本select语句&lt;/h6&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; 表名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,age &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;zhoxing&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- select 要查询的列名 from 表名 where 限制条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;2-AND与OR&quot;&gt;&lt;a href=&quot;#2-AND与OR&quot; class=&quot;headerlink&quot; title=&quot;2.AND与OR&quot;&gt;&lt;/a&gt;2.AND与OR&lt;/h6&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,age &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; age&amp;gt;&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; age&amp;lt;&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;--筛选出age大于20，且age小于30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,age &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; age&amp;lt;&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; age&amp;gt;&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;--筛选出age小于20或者age大于30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/MySQL/sql-04-05.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果需要包含边界值既age&amp;gt;=20&amp;lt;=3&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,age &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; age &lt;span class=&quot;keyword&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;`;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/MySQL/sql-04-06.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h6 id=&quot;3-IN和NOT-IN&quot;&gt;&lt;a href=&quot;#3-IN和NOT-IN&quot; class=&quot;headerlink&quot; title=&quot;3. IN和NOT IN&quot;&gt;&lt;/a&gt;3. IN和NOT IN&lt;/h6&gt;&lt;p&gt;IN 和NOT IN用来指定在不在一个某个范围内的结果，比如我们要查询在dpt3和dpt4中的结果：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,age,dpt &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; dpt &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;dpt3&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;dpt4&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/MySQL/sql-04-07.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;NOT IN 查询不在这个序列中的：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,age,dpt &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; dpt &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;dpt3&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;dpt4&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;4-通配符&quot;&gt;&lt;a href=&quot;#4-通配符&quot; class=&quot;headerlink&quot; title=&quot;4. 通配符&quot;&gt;&lt;/a&gt;4. 通配符&lt;/h6&gt;&lt;p&gt;SQL语句中 &lt;strong&gt;LIKE&lt;/strong&gt; 关键字和通配符一起使用，&lt;br&gt;&lt;code&gt;_&lt;/code&gt; :表示未指定的 一个字符&lt;br&gt;&lt;code&gt;%&lt;/code&gt;: 表示未指定的多个字符&lt;/p&gt;
&lt;p&gt;查询电话号码前面为：43776的employee&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,age &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; phone &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;43776__&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查询以周姓开头的employee&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,age &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;周%&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结果可能为： 周星，周星星，周建波&lt;/p&gt;
&lt;h6 id=&quot;5-对结果进行排序-DESC-降-ASC-升&quot;&gt;&lt;a href=&quot;#5-对结果进行排序-DESC-降-ASC-升&quot; class=&quot;headerlink&quot; title=&quot;5. 对结果进行排序 DESC(降) ASC(升)&quot;&gt;&lt;/a&gt;5. 对结果进行排序 DESC(降) ASC(升)&lt;/h6&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,age,salary,phone &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; salary &lt;span class=&quot;keyword&quot;&gt;DESC&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;6-sql内置函数和计算&quot;&gt;&lt;a href=&quot;#6-sql内置函数和计算&quot; class=&quot;headerlink&quot; title=&quot;6.sql内置函数和计算&quot;&gt;&lt;/a&gt;6.sql内置函数和计算&lt;/h6&gt;&lt;p&gt;sql允许对表中数据进行计算，有5个内置函数：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数名：&lt;/th&gt;
&lt;th&gt;COUNT&lt;/th&gt;
&lt;th&gt;SUM&lt;/th&gt;
&lt;th&gt;AVG&lt;/th&gt;
&lt;th&gt;MAX&lt;/th&gt;
&lt;th&gt;MIN&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;作用：&lt;/td&gt;
&lt;td&gt;计数&lt;/td&gt;
&lt;td&gt;求和&lt;/td&gt;
&lt;td&gt;平均值&lt;/td&gt;
&lt;td&gt;最大值&lt;/td&gt;
&lt;td&gt;最小值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;查询salary最大最小值：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;MAX&lt;/span&gt;(salary) &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; zuigao_gongzi, &lt;span class=&quot;keyword&quot;&gt;MIN&lt;/span&gt;(salary) &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/MySQL/sql-04-12.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AS&lt;/strong&gt;关键字对最高工资进行命名&lt;/p&gt;
&lt;h6 id=&quot;7-子查询&quot;&gt;&lt;a href=&quot;#7-子查询&quot; class=&quot;headerlink&quot; title=&quot;7.子查询&quot;&gt;&lt;/a&gt;7.子查询&lt;/h6&gt;&lt;p&gt;想要知道名为”Tom”的员工所在部门做了几个工程。员工信息储存在employee表中，但工程信息储存在project表中&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; apt_name,&lt;span class=&quot;keyword&quot;&gt;COUNT&lt;/span&gt;(proj_name) &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; count_project &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;project&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; apt_name &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; apt_name &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;Tom&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;子查询还可以扩展到3层、4层或更多层。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/MySQL/sql-04-13.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h6 id=&quot;8-连接查询&quot;&gt;&lt;a href=&quot;#8-连接查询&quot; class=&quot;headerlink&quot; title=&quot;8.连接查询&quot;&gt;&lt;/a&gt;8.连接查询&lt;/h6&gt;&lt;p&gt;在处理多个表时，子查询只有在结果来自一个表时才有用。但如果需要显示两个表或多个表中的数据，使用连接查询把多个表当做一个表使用。&lt;br&gt;各员工所在部门的人数，其中员工的id和name来自employee表，people_num来自department表：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,people_num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; employee,department&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; employee.in_dpt= department.dpt_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;修改和删除&quot;&gt;&lt;a href=&quot;#修改和删除&quot; class=&quot;headerlink&quot; title=&quot;修改和删除&quot;&gt;&lt;/a&gt;修改和删除&lt;/h5&gt;&lt;h6 id=&quot;删除数据库&quot;&gt;&lt;a href=&quot;#删除数据库&quot; class=&quot;headerlink&quot; title=&quot;删除数据库&quot;&gt;&lt;/a&gt;删除数据库&lt;/h6&gt;&lt;p&gt;DROP DATABASE test_01&lt;/p&gt;
&lt;h6 id=&quot;重命名一张表&quot;&gt;&lt;a href=&quot;#重命名一张表&quot; class=&quot;headerlink&quot; title=&quot;重命名一张表&quot;&gt;&lt;/a&gt;重命名一张表&lt;/h6&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;RENAME&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; 原名 &lt;span class=&quot;keyword&quot;&gt;TO&lt;/span&gt; 新名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; 原名 &lt;span class=&quot;keyword&quot;&gt;RENAME&lt;/span&gt; 新名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; 原名 &lt;span class=&quot;keyword&quot;&gt;RENAME&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TO&lt;/span&gt; 新名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这三种方式都可以&lt;/p&gt;
&lt;h6 id=&quot;删除一张表&quot;&gt;&lt;a href=&quot;#删除一张表&quot; class=&quot;headerlink&quot; title=&quot;删除一张表&quot;&gt;&lt;/a&gt;删除一张表&lt;/h6&gt;&lt;p&gt;DROP TABLE 表名;&lt;/p&gt;
&lt;h6 id=&quot;对一列的修改-既对表结构的修改&quot;&gt;&lt;a href=&quot;#对一列的修改-既对表结构的修改&quot; class=&quot;headerlink&quot; title=&quot;对一列的修改(既对表结构的修改)&quot;&gt;&lt;/a&gt;对一列的修改(既对表结构的修改)&lt;/h6&gt;&lt;p&gt;#######  1.增加一列&lt;br&gt;  &lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; 表名字 &lt;span class=&quot;keyword&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COLUMN&lt;/span&gt; 列名字 数据类型 约束;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或： &lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; 表名字 &lt;span class=&quot;keyword&quot;&gt;ADD&lt;/span&gt; 列名字 数据类型 约束;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ex:&lt;br&gt;&lt;code&gt;ALTER TABLE employee ADD Height int(10) DEFAULT 170;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们新增一列 weight (体重)放置在 age (年龄)的后面：&lt;br&gt;ex:&lt;br&gt;  &lt;code&gt;ALTER  TABLE employee ADD weight int(10) DEFAULT 120 AFTER age;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/MySQL/sql-05-06.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;  新增加一列，放在第一位&lt;br&gt;  ex:&lt;br&gt;    &lt;code&gt;ALTER  TABLE employee ADD test int(10) DEFAULT  11 FIRST;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;####### 2. 删除一列&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;test&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--ALTER TABLE 表名字 DROP 列名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;####### 3.重命名一列(对列的属性做修改)&lt;br&gt;修改数据类型必须小心，因为这可能会导致数据丢失。在尝试修改数据类型之前，请慎重考虑。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;CHANGE&lt;/span&gt; age nianling &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--ALTER TABLE 表名字 CHANGE 原列名 新列名 数据类型 约束;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：这条重命名语句后面的 “数据类型” 不能省略，否则重命名失败。&lt;br&gt;当原列名和新列名相同的时候，指定新的数据类型或约束，就可以用于修改数据类型或约束。需要注意的是，修改数据类型可能会导致数据丢失，所以要慎重使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;####### 4.改变数据类型&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;MODIFY&lt;/span&gt; age &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--ALTER TABLE 表名字 MODIFY 列名 新数据类型;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;对表的内容进行修改&quot;&gt;&lt;a href=&quot;#对表的内容进行修改&quot; class=&quot;headerlink&quot; title=&quot;对表的内容进行修改&quot;&gt;&lt;/a&gt;对表的内容进行修改&lt;/h6&gt;&lt;p&gt;####### 修改表中的某个值&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; age=&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;, salary=&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--UPDATE 表名 SET 列1=&#39;值1&#39; 列2=&#39;值2&#39; where 条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;####### 删除一行记录&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt; =&lt;span class=&quot;string&quot;&gt;&#39;TOM&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--DELETE FROM 表名 WHERE 条件;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;索引&quot;&gt;&lt;a href=&quot;#索引&quot; class=&quot;headerlink&quot; title=&quot;索引&quot;&gt;&lt;/a&gt;索引&lt;/h5&gt;&lt;p&gt;索引是一种与表有关结构，相当于书的目录，可以根据目录的页码快速找到所需内容。&lt;br&gt;当表中有大量内容，如果表中没有索引，进行全表搜索将记录全部取出，与查询条件对比，返回符合条件的记录。&lt;strong&gt;这样会消耗数据库的大量时间，造成大量磁盘IO操作。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果表中以建立索引，在索引中查找符合条件的索引值，根据索引值快速找到表中数据，可大大加快查询速度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; employee &lt;span class=&quot;keyword&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; idx_id (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--ALTER TABLE 表名 ADD INDEX 索引名 (列名)；先写索引名，在写列名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--在employee表的id列上建立名为idx_id的索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; idx_name &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; employee (&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--在employee表的name列建立名为idx_name的索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;--CREATE INDEX 索引名 ON 表名 (列名);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;索引的目的是加快查询的速度，当数据较少时候不会体现&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;SHOW INDEX FROM 表名&lt;/code&gt;   查看表中的索引&lt;/li&gt;
&lt;li&gt;SELECT语句查询时，WHERE里面的条件会自动判断有没有可用的索引&lt;/li&gt;
&lt;/ol&gt;
&lt;h6 id=&quot;视图&quot;&gt;&lt;a href=&quot;#视图&quot; class=&quot;headerlink&quot; title=&quot;视图&quot;&gt;&lt;/a&gt;视图&lt;/h6&gt;&lt;p&gt;视图是从一个表或者多个表导出来的表，是一个&lt;strong&gt;虚拟&lt;/strong&gt;的表，它就像一个窗口，通过这个窗口可以看到系统专门提供的数据。这样，用户不用看到整个数据库中的数据，而只关心对自己有用的数据。&lt;/p&gt;
&lt;p&gt;注意理解视图是一个虚拟的表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库中只存放了视图的定义，而没有存放视图中的数据，这些数据放在原来的表中&lt;/li&gt;
&lt;li&gt;使用视图查询数据时，数据库系统会从原来的表中取出对应的数据&lt;/li&gt;
&lt;li&gt;视图中的数据依赖于原来表中的数据，如果原来表中的数据发生改变，显示在视图中的数据也会发生改变&lt;/li&gt;
&lt;li&gt;在使用视图时，可以把它当做一张表&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;创建视图的语句格式为：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VIEW&lt;/span&gt; 视图名(列a,列b,列c) &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; 列&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,列&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,列&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; 表名字;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可见创建视图的语句，后半句是一个SELECT查询语句，所以视图也可以建立在多张表上，只需在SELECT语句中使用子查询或连接查询&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/MySQL/sql-06-02.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;######导入和导出&lt;/p&gt;
&lt;p&gt;导入操作，可以把一个文件里的数据保存进入一张表：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;LOAD&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATA&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INFILE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;文件路径&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; 表名字;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;前提是文件中数据的格式要对：&lt;br&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/MySQL/sql-06-03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;导出操作，是将一个数据库表中的数据保存到一个文件之中：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; 列&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;，列&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;OUTFILE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;文件路径和文件名&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt;表名字;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意：语句中 “文件路径” 之下不能已经有同名文件。&lt;/p&gt;
&lt;p&gt;现在我们把整个employee表的数据导出到 /tmp 目录下，导出文件命名为 out.txt 具体语句为：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;OUTFILE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;tmp/out.txt&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; employee&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;备份&quot;&gt;&lt;a href=&quot;#备份&quot; class=&quot;headerlink&quot; title=&quot;备份&quot;&gt;&lt;/a&gt;备份&lt;/h6&gt;&lt;p&gt;数据库中的数据十分重要，注意使用备份功能&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;备份与导出的区别：导出的文件只是保存数据库中的数据；而备份，则是把数据库的结构，包括数据、约束、索引、视图等全部另存为一个文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;mysqldump是MySQL用于备份数据库的实用程序。它主要产生一个SQL脚本文件，其中包含从头重新创建数据库所必需的命令CREATE TABLE INSERT等。&lt;/p&gt;
&lt;p&gt;使用mysqldump备份的语句：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysqldump -u root 数据库名 &amp;gt; 备份文件名;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--备份整个数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysqldump -u root 数据库名 表名字 &amp;gt; 备份文件名;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--备份整个表&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们尝试备份整个数据库 mysql_shiyan，将备份文件命名为 bak.sql，先 Ctrl+Z 退出MySQL，再使用语句：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysqldump -u root mysql_shiyan &amp;gt; bak.sql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;使用备份文件恢复数据库&quot;&gt;&lt;a href=&quot;#使用备份文件恢复数据库&quot; class=&quot;headerlink&quot; title=&quot;使用备份文件恢复数据库&quot;&gt;&lt;/a&gt;使用备份文件恢复数据库&lt;/h6&gt; &lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;source /tmp/SQL6/MySQL-06.sql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这就是一条恢复语句，它把MySQL-06.sql文件中保存的mysql_shiyan数据库恢复。&lt;/p&gt;
&lt;p&gt;另一种方式：&lt;br&gt;1.&lt;code&gt;CREATE DATABASE test;&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CTRL+Z退出mysql ,然后输入语句进行恢复，把刚才备份的 bak.sql 恢复到 test 数据库:&lt;br&gt;&lt;code&gt;mysql -u root test &amp;lt; bak.sql&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mysql -u root
 use test
 show tables;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结果：&lt;br&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/MySQL/sql-06-08.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.7/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mysql官方文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://gist.github.com/wal139491/6030e3fb89db078cc5f43151500804e9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;完整的建表语句&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.runoob.com/mysql/mysql-connection.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mysql菜鸟教程&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;Mysql-启动和创建数据库&quot;&gt;&lt;a href=&quot;#Mysql-启动和创建数据库&quot; class=&quot;headerlink&quot; title=&quot;Mysql 启动和创建数据库&quot;&gt;&lt;/a&gt;Mysql 启动和创建数据库&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://d.hiphotos.baidu.com/baike/c0%3Dbaike92%2C5%2C5%2C92%2C30/sign=96e2f04307087bf469e15fbb93ba3c49/8435e5dde71190effdb15dd7cb1b9d16fdfa6074.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;sql语句注释：&lt;br&gt;&lt;code&gt;--&lt;/code&gt;表示单行注释&lt;br&gt;&lt;code&gt;/**/&lt;/code&gt;表示多行注释&lt;br&gt;&lt;strong&gt;Markdown书写格式不对，注意缩进问题&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&quot;1、ubuntu下打开Mysql服务，并使用root用户登录&quot;&gt;&lt;a href=&quot;#1、ubuntu下打开Mysql服务，并使用root用户登录&quot; class=&quot;headerlink&quot; title=&quot;1、ubuntu下打开Mysql服务，并使用root用户登录&quot;&gt;&lt;/a&gt;1、ubuntu下打开Mysql服务，并使用root用户登录&lt;/h6&gt;&lt;p&gt;&lt;code&gt;sudo service mysql start&lt;/code&gt;(也可用来检测系统是否安装mysql)&lt;br&gt;&lt;code&gt;mysql -u root&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;检测是否安装成功：&lt;br&gt;    &lt;code&gt;netstat -tap |grep mysql&lt;/code&gt;&lt;br&gt;这句话的意思就是查看监听服务进程号&lt;br&gt;    `&lt;/p&gt;
&lt;h6 id=&quot;2、连接数据库&quot;&gt;&lt;a href=&quot;#2、连接数据库&quot; class=&quot;headerlink&quot; title=&quot;2、连接数据库&quot;&gt;&lt;/a&gt;2、连接数据库&lt;/h6&gt;&lt;p&gt;&lt;code&gt;use mysql_car&lt;/code&gt;&lt;br&gt;use+[数据库名称] 表示使用某个数据库&lt;/p&gt;
&lt;p&gt;&lt;code&gt;show tables;&lt;/code&gt;&lt;br&gt;显示该数据库的各个表名(如果有视图，也会显示)&lt;/p&gt;
&lt;h6 id=&quot;3、-新建数据库&quot;&gt;&lt;a href=&quot;#3、-新建数据库&quot; class=&quot;headerlink&quot; title=&quot;3、 新建数据库&quot;&gt;&lt;/a&gt;3、 新建数据库&lt;/h6&gt;&lt;p&gt;  &lt;code&gt;CREATE   DATABASE company&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;虽然Mysql建表语句中不区分大小写，但是一般保留字(关键字)大写，变量小写&lt;/p&gt;
&lt;h6 id=&quot;4、-新建数据表&quot;&gt;&lt;a href=&quot;#4、-新建数据表&quot; class=&quot;headerlink&quot; title=&quot;4、 新建数据表&quot;&gt;&lt;/a&gt;4、 新建数据表&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;use company (连接数据库)&lt;/li&gt;
&lt;li&gt;在数据库中新建一张表的格式为：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; employee(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;phone &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;5、数据类型&quot;&gt;&lt;a href=&quot;#5、数据类型&quot; class=&quot;headerlink&quot; title=&quot;5、数据类型&quot;&gt;&lt;/a&gt;5、数据类型&lt;/h6&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;大小(字节)&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;th&gt;格式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;INT&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;整数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Float&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;单精度浮点数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DOUBLE&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;双精度浮点数&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ENUM&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;单选&lt;/td&gt;
&lt;td&gt;ENUM(‘a’,’b’,’c’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SET&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;多选&lt;/td&gt;
&lt;td&gt;SET(‘1’,’2’,’3’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DATE&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;日期&lt;/td&gt;
&lt;td&gt;YYYY-MM-DD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIME&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;时间点或持续时间点&lt;/td&gt;
&lt;td&gt;HH:MM:SS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YEAR&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;年份值&lt;/td&gt;
&lt;td&gt;HH:MM:SS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CHAR&lt;/td&gt;
&lt;td&gt;0~255&lt;/td&gt;
&lt;td&gt;定长字符串&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VARCHAR&lt;/td&gt;
&lt;td&gt;0~255&lt;/td&gt;
&lt;td&gt;变长字符串&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TEXT&lt;/td&gt;
&lt;td&gt;0~65535&lt;/td&gt;
&lt;td&gt;长文本数据&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;CHAR和VARCHAR的区别&lt;/strong&gt;: CHAR的长度是固定的，而VARCHAR的长度是可以变化的，比如，存储字符串“abc”，对于CHAR (10)，表示存储的字符将占10个字节(包括7个空字符)，而同样的VARCHAR(12)则只占用3个字节的长度，12只是最大值，当你存储的字符小于12时，按实际长度存储。&lt;br&gt;
    
    </summary>
    
      <category term="数据库概论" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Mysql等数据类型的使用</title>
    <link href="http://yoursite.com/2016/08/20/Mysql%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2016/08/20/Mysql数据类型/</id>
    <published>2016-08-20T00:29:22.634Z</published>
    <updated>2016-08-24T01:25:04.909Z</updated>
    
    <content type="html">&lt;p&gt;###MySQL 数据类型&lt;br&gt;&lt;img src=&quot;http://c.hiphotos.baidu.com/baike/w%3D268%3Bg%3D0/sign=e35e494a6159252da3171a020ca06406/ac6eddc451da81cb037c289d5366d016082431c3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;在 MySQL 中，有三种主要的类型：文本、数字和日期/时间类型。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Text类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CHAR(size)&lt;/td&gt;
&lt;td&gt;保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VARCHAR(size)&lt;/td&gt;
&lt;td&gt;保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。 (注释：如果值的长度大于 255，则被转换为 TEXT 类型。)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TINYTEXT&lt;/td&gt;
&lt;td&gt;存放最大长度为 255 个字符的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TEXT&lt;/td&gt;
&lt;td&gt;存放最大长度为 65,535 个字符的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BLOB&lt;/td&gt;
&lt;td&gt;用于 BLOBs (Binary Large OBjects)。存放最多 65,535 字节的数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMTEXT&lt;/td&gt;
&lt;td&gt;存放最大长度为 16,777,215 个字符的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMBLOB&lt;/td&gt;
&lt;td&gt;用于 BLOBs (Binary Large OBjects)。存放最多 16,777,215 字节的数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LONGTEXT&lt;/td&gt;
&lt;td&gt;存放最大长度为 4,294,967,295 个字符的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LONGBLOB&lt;/td&gt;
&lt;td&gt;用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ENUM(x,y,z,etc.)&lt;/td&gt;
&lt;td&gt;允许你输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。(注释：这些值是按照你输入的顺序存储的。)可以按照此格式输入可能的值：ENUM(‘X’,’Y’,’Z’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SET&lt;/td&gt;
&lt;td&gt;与 ENUM 类似，SET 最多只能包含 64 个列表项，不过 SET 可存储一个以上的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Number类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TINYINT(size)&lt;/td&gt;
&lt;td&gt;-128 到 127 常规。0 到 255 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SMALLINT(size)&lt;/td&gt;
&lt;td&gt;-32768 到 32767 常规。0 到 65535 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMINT(size)&lt;/td&gt;
&lt;td&gt;-8388608 到 8388607 普通。0 to 16777215 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INT(size)&lt;/td&gt;
&lt;td&gt;-2147483648 到 2147483647 常规。0 到 4294967295 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BIGINT(size)&lt;/td&gt;
&lt;td&gt;-9223372036854775808 到 9223372036854775807 常规。0 到 18446744073709551615 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FLOAT(size,d)&lt;/td&gt;
&lt;td&gt;带有浮动小数点的小数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DOUBLE(size,d)&lt;/td&gt;
&lt;td&gt;带有浮动小数点的大数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DECIMAL(size,d)&lt;/td&gt;
&lt;td&gt;作为字符串存储的 DOUBLE 类型，允许固定的小数点。(* 这些整数类型拥有额外的选项 UNSIGNED。通常，整数可以是负数或正数。如果添加 UNSIGNED 属性，那么范围将从 0 开始，而不是某个负数。)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Date类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DATE()&lt;/td&gt;
&lt;td&gt;日期。格式：YYYY-MM-DD(注释：支持的范围是从 ‘1000-01-01’ 到 ‘9999-12-31’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DATETIME()&lt;/td&gt;
&lt;td&gt;*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS(注释：支持的范围是从 ‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIMESTAMP()&lt;/td&gt;
&lt;td&gt;*时间戳。TIMESTAMP 值使用 Unix 纪元(‘1970-01-01 00:00:00’ UTC) 至今的描述来存储。格式：YYYY-MM-DD HH:MM:SS (注释：支持的范围是从 ‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-09 03:14:07’ UTC)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIME()&lt;/td&gt;
&lt;td&gt;时间。格式：HH:MM:SS 注释：支持的范围是从 ‘-838:59:59’ 到 ‘838:59:59’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;YEAR()&lt;/td&gt;
&lt;td&gt;2 位或 4 位格式的年。(注释：4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;* 即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 Insert 或 Update 查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。&lt;/td&gt;
&lt;td&gt;TIMESTAMP 也接受不同的格式，比如 YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD 或 YYMMDD。)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;SQL-Servers数据类型&quot;&gt;&lt;a href=&quot;#SQL-Servers数据类型&quot; class=&quot;headerlink&quot; title=&quot;SQL Servers数据类型&quot;&gt;&lt;/a&gt;SQL Servers数据类型&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://m.tiebaimg.com/timg?wapp&amp;amp;quality=80&amp;amp;size=b150_150&amp;amp;subsize=20480&amp;amp;cut_x=0&amp;amp;cut_w=0&amp;amp;cut_y=0&amp;amp;cut_h=0&amp;amp;sec=1369815402&amp;amp;srctrace&amp;amp;di=f5467ad2424a11889509dd16991243ae&amp;amp;wh_rate=null&amp;amp;src=http%3A%2F%2Fimgsrc.baidu.com%2Fforum%2Fpic%2Fitem%2Fc2fdfc039245d688bb8bdfeca3c27d1ed31b24e8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Character 字符串：&lt;/th&gt;
&lt;th&gt;数据类型 描述 存储&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char(n)&lt;/td&gt;
&lt;td&gt;固定长度的字符串。最多 8,000 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;varchar(n)&lt;/td&gt;
&lt;td&gt;可变长度的字符串。最多 8,000 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;varchar(max)&lt;/td&gt;
&lt;td&gt;可变长度的字符串。最多 1,073,741,824 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;可变长度的字符串。最多 2GB 字符数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Unicode 字符串：&lt;/th&gt;
&lt;th&gt;数据类型 描述 存储&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nchar(n)&lt;/td&gt;
&lt;td&gt;固定长度的 Unicode 数据。最多 4,000 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nvarchar(n)&lt;/td&gt;
&lt;td&gt;可变长度的 Unicode 数据。最多 4,000 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nvarchar(max)&lt;/td&gt;
&lt;td&gt;可变长度的 Unicode 数据。最多 536,870,912 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ntext&lt;/td&gt;
&lt;td&gt;可变长度的 Unicode 数据。最多 2GB 字符数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Binary 类型：&lt;/th&gt;
&lt;th&gt;数据类型 描述 存储&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bit&lt;/td&gt;
&lt;td&gt;允许 0、1 或 NULL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;binary(n)&lt;/td&gt;
&lt;td&gt;固定长度的二进制数据。最多 8,000 字节。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;varbinary(n)&lt;/td&gt;
&lt;td&gt;可变长度的二进制数据。最多 8,000 字节。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;varbinary(max)&lt;/td&gt;
&lt;td&gt;可变长度的二进制数据。最多 2GB 字节。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;image&lt;/td&gt;
&lt;td&gt;可变长度的二进制数据。最多 2GB。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Number 类型：&lt;/th&gt;
&lt;th&gt;数据类型 描述 存储&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tinyint&lt;/td&gt;
&lt;td&gt;允许从 0 到 255 的所有数字。 1 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;smallint&lt;/td&gt;
&lt;td&gt;允许从 -32,768 到 32,767 的所有数字。 2 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;允许从 -2,147,483,648 到 2,147,483,647 的所有数字。 4 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bigint&lt;/td&gt;
&lt;td&gt;允许介于 -9,223,372,036,854,775,808 和 9,223,372,036,854,775,807 之间的所有数字。 8 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;decimal(p,s)&lt;/td&gt;
&lt;td&gt;固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。5-17 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p 参数指示可以存储的最大位数（小数点左侧和右侧）。&lt;/td&gt;
&lt;td&gt;p 必须是 1 到 38 之间的值。默认是 18。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s 参数指示小数点右侧存储的最大位数&lt;/td&gt;
&lt;td&gt;。s 必须是 0 到 p 之间的值。默认是 0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;numeric(p,s)&lt;/td&gt;
&lt;td&gt;固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。5-17 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p 参数指示可以存储的最大位数（小数点左侧和右侧）。&lt;/td&gt;
&lt;td&gt;p 必须是 1 到 38 之间的值。默认是 18。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s 参数指示小数点右侧存储的最大位数。&lt;/td&gt;
&lt;td&gt;s 必须是 0 到 p 之间的值。默认是 0。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;smallmoney&lt;/td&gt;
&lt;td&gt;5-17 字节 介于 -214,748.3648 和 214,748.3647 之间的货币数据。 4 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;money&lt;/td&gt;
&lt;td&gt;5-17 字节 介于 -922,337,203,685,477.5808 和 922,337,203,685,477.5807 之间的货币数据。 8 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float(n)&lt;/td&gt;
&lt;td&gt;5-17 字节 从 -1.79E + 308 到 1.79E + 308 的浮动精度数字数据。参数 n 指示该字段保存 4 字节还是 8 字节。float(24) 保存 4 字节，而 float(53) 保存 8 字节。n 的默认值是 53。 4 或 8 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;real&lt;/td&gt;
&lt;td&gt;5-17 字节 从 -3.40E + 38 到 3.40E + 38 的浮动精度数字数据。 4 字节&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Date 类型：&lt;/th&gt;
&lt;th&gt;数据类型 描述 存储&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;datetime&lt;/td&gt;
&lt;td&gt;从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 3.33 毫秒。 8 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;datetime2&lt;/td&gt;
&lt;td&gt;从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 100 纳秒。 6-8 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;smalldatetime&lt;/td&gt;
&lt;td&gt;从 1900 年 1 月 1 日 到 2079 年 6 月 6 日，精度为 1 分钟。 4 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;仅存储日期。从 0001 年 1 月 1 日 到 9999 年 12 月 31 日。 3 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;time&lt;/td&gt;
&lt;td&gt;仅存储时间。精度为 100 纳秒。 3-5 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;datetimeoffset&lt;/td&gt;
&lt;td&gt;与 datetime2 相同，外加时区偏移。 8-10 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timestamp&lt;/td&gt;
&lt;td&gt;存储唯一的数字，每当创建或修改某行时，该数字会更新。timestamp 基于内部时钟，不对应真实时间。每个表只能有一个 timestamp 变量。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;其他数据类型：&lt;/th&gt;
&lt;th&gt;数据类型 描述 存储&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sql_variant&lt;/td&gt;
&lt;td&gt;存储最多 8,000 字节不同数据类型的数据，除了 text、ntext 以及 timestamp。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uniqueidentifier&lt;/td&gt;
&lt;td&gt;存储全局标识符 (GUID)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xml&lt;/td&gt;
&lt;td&gt;存储 XML 格式化数据。最多 2GB。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cursor&lt;/td&gt;
&lt;td&gt;存储对用于数据库操作的指针的引用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;存储结果集，供稍后处理。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;oracle基本数据类型&quot;&gt;&lt;a href=&quot;#oracle基本数据类型&quot; class=&quot;headerlink&quot; title=&quot;oracle基本数据类型&quot;&gt;&lt;/a&gt;oracle基本数据类型&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://m.tiebaimg.com/timg?wapp&amp;amp;quality=80&amp;amp;size=b150_150&amp;amp;subsize=20480&amp;amp;cut_x=0&amp;amp;cut_w=0&amp;amp;cut_y=0&amp;amp;cut_h=0&amp;amp;sec=1369815402&amp;amp;srctrace&amp;amp;di=6a06a6da474d02216888a531b7365f81&amp;amp;wh_rate=null&amp;amp;src=http%3A%2F%2Fimgsrc.baidu.com%2Fforum%2Fpic%2Fitem%2F8c1001e93901213f549eeb1955e736d12e2e9542.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本类型：&lt;/th&gt;
&lt;th&gt;描述 存储&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;char&lt;/td&gt;
&lt;td&gt;定长的字符型数据，最大长度可达2KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nchar&lt;/td&gt;
&lt;td&gt;存储Unicode字符集的定长字符型数据，最大长度为2KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Varchar2&lt;/td&gt;
&lt;td&gt;可变长的字符型数据，最大长度可达4000个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nvarchar2&lt;/td&gt;
&lt;td&gt;存储Unicode字符集的变长字符型数据，最大长度为4KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;存储整型或浮点型数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Date&lt;/td&gt;
&lt;td&gt;存储日期数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Long&lt;/td&gt;
&lt;td&gt;存储最大长度为2GB的变长字符数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Raw&lt;/td&gt;
&lt;td&gt;存储非结构化数据的变长字符数据，最长为2KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Long Raw&lt;/td&gt;
&lt;td&gt;存储非结构化数据的变长字符数据，最长为2GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Rowid&lt;/td&gt;
&lt;td&gt;存储表中列的物理地址的二进制数据，占用固定的10个字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Blog&lt;/td&gt;
&lt;td&gt;二进制大对象，最大长度为4GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clob&lt;/td&gt;
&lt;td&gt;字符大对象，最大长度为4GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nclob&lt;/td&gt;
&lt;td&gt;存储多达4GB的Unicode字符数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bfile&lt;/td&gt;
&lt;td&gt;把非结构化的二进制数据存储在数据库以外的操作系统文件中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Urowid&lt;/td&gt;
&lt;td&gt;存储表示任何类型列地址的二进制数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;存储浮点数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;###MySQL 数据类型&lt;br&gt;&lt;img src=&quot;http://c.hiphotos.baidu.com/baike/w%3D268%3Bg%3D0/sign=e35e494a6159252da3171a020ca06406/ac6eddc451da81cb037c289d5366d016082431c3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;在 MySQL 中，有三种主要的类型：文本、数字和日期/时间类型。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Text类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CHAR(size)&lt;/td&gt;
&lt;td&gt;保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VARCHAR(size)&lt;/td&gt;
&lt;td&gt;保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。 (注释：如果值的长度大于 255，则被转换为 TEXT 类型。)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TINYTEXT&lt;/td&gt;
&lt;td&gt;存放最大长度为 255 个字符的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TEXT&lt;/td&gt;
&lt;td&gt;存放最大长度为 65,535 个字符的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BLOB&lt;/td&gt;
&lt;td&gt;用于 BLOBs (Binary Large OBjects)。存放最多 65,535 字节的数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMTEXT&lt;/td&gt;
&lt;td&gt;存放最大长度为 16,777,215 个字符的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMBLOB&lt;/td&gt;
&lt;td&gt;用于 BLOBs (Binary Large OBjects)。存放最多 16,777,215 字节的数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LONGTEXT&lt;/td&gt;
&lt;td&gt;存放最大长度为 4,294,967,295 个字符的字符串。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LONGBLOB&lt;/td&gt;
&lt;td&gt;用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ENUM(x,y,z,etc.)&lt;/td&gt;
&lt;td&gt;允许你输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。(注释：这些值是按照你输入的顺序存储的。)可以按照此格式输入可能的值：ENUM(‘X’,’Y’,’Z’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SET&lt;/td&gt;
&lt;td&gt;与 ENUM 类似，SET 最多只能包含 64 个列表项，不过 SET 可存储一个以上的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Number类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TINYINT(size)&lt;/td&gt;
&lt;td&gt;-128 到 127 常规。0 到 255 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SMALLINT(size)&lt;/td&gt;
&lt;td&gt;-32768 到 32767 常规。0 到 65535 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMINT(size)&lt;/td&gt;
&lt;td&gt;-8388608 到 8388607 普通。0 to 16777215 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INT(size)&lt;/td&gt;
&lt;td&gt;-2147483648 到 2147483647 常规。0 到 4294967295 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BIGINT(size)&lt;/td&gt;
&lt;td&gt;-9223372036854775808 到 9223372036854775807 常规。0 到 18446744073709551615 无符号*。在括号中规定最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FLOAT(size,d)&lt;/td&gt;
&lt;td&gt;带有浮动小数点的小数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DOUBLE(size,d)&lt;/td&gt;
&lt;td&gt;带有浮动小数点的大数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DECIMAL(size,d)&lt;/td&gt;
&lt;td&gt;作为字符串存储的 DOUBLE 类型，允许固定的小数点。(* 这些整数类型拥有额外的选项 UNSIGNED。通常，整数可以是负数或正数。如果添加 UNSIGNED 属性，那么范围将从 0 开始，而不是某个负数。)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="数据库概论" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown简明语法手册1</title>
    <link href="http://yoursite.com/2016/08/17/Markdown%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C1/"/>
    <id>http://yoursite.com/2016/08/17/Markdown简明语法手册1/</id>
    <published>2016-08-17T02:55:22.052Z</published>
    <updated>2016-11-01T13:11:24.380Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Cmd-Markdown-简明语法手册&quot;&gt;&lt;a href=&quot;#Cmd-Markdown-简明语法手册&quot; class=&quot;headerlink&quot; title=&quot;Cmd Markdown 简明语法手册&quot;&gt;&lt;/a&gt;Cmd Markdown 简明语法手册&lt;/h1&gt;&lt;p&gt;标签： Cmd-Markdown&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#6-加强的代码块&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;参考外链&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;&lt;em&gt;临睡前，闲余时间抽空看看，毕竟年纪大了容易忘&lt;/em&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-斜体和粗体&quot;&gt;&lt;a href=&quot;#1-斜体和粗体&quot; class=&quot;headerlink&quot; title=&quot;1. 斜体和粗体&quot;&gt;&lt;/a&gt;1. 斜体和粗体&lt;/h3&gt;&lt;p&gt;使用 &lt;em&gt; 和 *&lt;/em&gt; 表示斜体和粗体。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;这是 &lt;em&gt;斜体&lt;/em&gt;，这是 &lt;strong&gt;粗体&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;2-分级标题&quot;&gt;&lt;a href=&quot;#2-分级标题&quot; class=&quot;headerlink&quot; title=&quot;2. 分级标题&quot;&gt;&lt;/a&gt;2. 分级标题&lt;/h3&gt;&lt;p&gt;使用 === 表示一级标题，使用 — 表示二级标题。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;h1 id=&quot;这是一个一级标题&quot;&gt;&lt;a href=&quot;#这是一个一级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一个一级标题&quot;&gt;&lt;/a&gt;这是一个一级标题&lt;/h1&gt;&lt;h2 id=&quot;这是一个二级标题&quot;&gt;&lt;a href=&quot;#这是一个二级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一个二级标题&quot;&gt;&lt;/a&gt;这是一个二级标题&lt;/h2&gt;&lt;h3 id=&quot;这是一个三级标题&quot;&gt;&lt;a href=&quot;#这是一个三级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一个三级标题&quot;&gt;&lt;/a&gt;这是一个三级标题&lt;/h3&gt;&lt;p&gt;你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。&lt;/p&gt;
&lt;h3 id=&quot;3-外链接&quot;&gt;&lt;a href=&quot;#3-外链接&quot; class=&quot;headerlink&quot; title=&quot;3. 外链接&quot;&gt;&lt;/a&gt;3. 外链接&lt;/h3&gt;&lt;p&gt;使用 [描述](链接地址) 为文字增加外链接。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;这是去往 &lt;a href=&quot;http://ghosertblog.github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;本人博客&lt;/a&gt; 的链接。&lt;/p&gt;
&lt;h3 id=&quot;4-无序列表&quot;&gt;&lt;a href=&quot;#4-无序列表&quot; class=&quot;headerlink&quot; title=&quot;4. 无序列表&quot;&gt;&lt;/a&gt;4. 无序列表&lt;/h3&gt;&lt;p&gt;使用 *，+，- 表示无序列表。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无序列表项 一&lt;/li&gt;
&lt;li&gt;无序列表项 二&lt;/li&gt;
&lt;li&gt;无序列表项 三&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;5-有序列表&quot;&gt;&lt;a href=&quot;#5-有序列表&quot; class=&quot;headerlink&quot; title=&quot;5. 有序列表&quot;&gt;&lt;/a&gt;5. 有序列表&lt;/h3&gt;&lt;p&gt;使用数字和点表示有序列表。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有序列表项 一&lt;/li&gt;
&lt;li&gt;有序列表项 二&lt;/li&gt;
&lt;li&gt;有序列表项 三&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;6-文字引用&quot;&gt;&lt;a href=&quot;#6-文字引用&quot; class=&quot;headerlink&quot; title=&quot;6. 文字引用&quot;&gt;&lt;/a&gt;6. 文字引用&lt;/h3&gt;&lt;p&gt;使用 &amp;gt; 表示文字引用。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;野火烧不尽，春风吹又生。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;7-行内代码块&quot;&gt;&lt;a href=&quot;#7-行内代码块&quot; class=&quot;headerlink&quot; title=&quot;7. 行内代码块&quot;&gt;&lt;/a&gt;7. 行内代码块&lt;/h3&gt;&lt;p&gt;使用 `代码` 表示行内代码块。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;让我们聊聊 &lt;code&gt;html&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;8-代码块&quot;&gt;&lt;a href=&quot;#8-代码块&quot; class=&quot;headerlink&quot; title=&quot;8.  代码块&quot;&gt;&lt;/a&gt;8.  代码块&lt;/h3&gt;&lt;p&gt;使用 四个缩进空格 表示代码块。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;这是一个代码块，此行左侧有四个不可见的空格。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;9-插入图像&quot;&gt;&lt;a href=&quot;#9-插入图像&quot; class=&quot;headerlink&quot; title=&quot;9.  插入图像&quot;&gt;&lt;/a&gt;9.  插入图像&lt;/h3&gt;&lt;p&gt;使用 ![描述](图片链接地址) 插入图像。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/my_head.jpg&quot; alt=&quot;我的头像&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Cmd-Markdown-高阶语法手册&quot;&gt;&lt;a href=&quot;#Cmd-Markdown-高阶语法手册&quot; class=&quot;headerlink&quot; title=&quot;Cmd Markdown 高阶语法手册&quot;&gt;&lt;/a&gt;Cmd Markdown 高阶语法手册&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/markdownicon.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-内容目录&quot;&gt;&lt;a href=&quot;#1-内容目录&quot; class=&quot;headerlink&quot; title=&quot;1. 内容目录&quot;&gt;&lt;/a&gt;1. 内容目录&lt;/h3&gt;&lt;p&gt;在段落中填写 &lt;code&gt;[TOC]&lt;/code&gt; 以显示全文内容的目录结构。&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;2-标签分类&quot;&gt;&lt;a href=&quot;#2-标签分类&quot; class=&quot;headerlink&quot; title=&quot;2. 标签分类&quot;&gt;&lt;/a&gt;2. 标签分类&lt;/h3&gt;&lt;p&gt;在编辑区任意行的列首位置输入以下代码给文稿标签：&lt;/p&gt;
&lt;p&gt;标签： 数学 英语 Markdown&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;Tags： 数学 英语 Markdown&lt;/p&gt;
&lt;h3 id=&quot;3-删除线&quot;&gt;&lt;a href=&quot;#3-删除线&quot; class=&quot;headerlink&quot; title=&quot;3. 删除线&quot;&gt;&lt;/a&gt;3. 删除线&lt;/h3&gt;&lt;p&gt;使用 ~~ 表示删除线。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;这是一段错误的文本。&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-注脚&quot;&gt;&lt;a href=&quot;#4-注脚&quot; class=&quot;headerlink&quot; title=&quot;4. 注脚&quot;&gt;&lt;/a&gt;4. 注脚&lt;/h3&gt;&lt;p&gt;使用 [^keyword] 表示注脚。&lt;/p&gt;
&lt;p&gt;这是一个注脚[^footnote]的样例。&lt;/p&gt;
&lt;p&gt;这是第二个注脚[^footnote2]的样例。&lt;/p&gt;
&lt;h3 id=&quot;5-LaTeX-公式&quot;&gt;&lt;a href=&quot;#5-LaTeX-公式&quot; class=&quot;headerlink&quot; title=&quot;5. LaTeX 公式&quot;&gt;&lt;/a&gt;5. LaTeX 公式&lt;/h3&gt;&lt;p&gt;$ 表示行内公式：&lt;/p&gt;
&lt;p&gt;质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。&lt;/p&gt;
&lt;p&gt;$$ 表示整行公式：&lt;/p&gt;
&lt;p&gt;$$\sum_{i=1}^n a_i=0$$&lt;/p&gt;
&lt;p&gt;$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$&lt;/p&gt;
&lt;p&gt;$$\sum^{j-1}&lt;em&gt;{k=0}{\widehat{\gamma}&lt;/em&gt;{kj} z_k}$$&lt;/p&gt;
&lt;p&gt;访问 &lt;a href=&quot;http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MathJax&lt;/a&gt; 参考更多使用方法。&lt;/p&gt;
&lt;h3 id=&quot;6-加强的代码块&quot;&gt;&lt;a href=&quot;#6-加强的代码块&quot; class=&quot;headerlink&quot; title=&quot;6. 加强的代码块&quot;&gt;&lt;/a&gt;6. 加强的代码块&lt;/h3&gt;&lt;p&gt;支持四十一种编程语言的语法高亮的显示，行号显示。&lt;/p&gt;
&lt;p&gt;非代码示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install vim-gnome&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Python 示例：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@requires_authorization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;somefunc&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(param1=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, param2=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;A docstring&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; param1 &amp;gt; param2: &lt;span class=&quot;comment&quot;&gt;# interesting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Greater&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (param2 - param1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SomeClass&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;message = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;interpreter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;... &lt;/span&gt;prompt&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;JavaScript 示例：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* nth element in the fibonacci series.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* @param n &amp;gt;= 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* @return the nth element, &amp;gt;= 0.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fib&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, b = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (--n &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tmp = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a += b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(fib(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;7-流程图&quot;&gt;&lt;a href=&quot;#7-流程图&quot; class=&quot;headerlink&quot; title=&quot;7. 流程图&quot;&gt;&lt;/a&gt;7. 流程图&lt;/h3&gt;&lt;h4 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;st=&amp;gt;start: Start:&amp;gt;https://www.zybuluo.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;io=&amp;gt;inputoutput: verification&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;op=&amp;gt;operation: Your Operation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond=&amp;gt;condition: Yes or No?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sub=&amp;gt;subroutine: Your Subroutine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e=&amp;gt;end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;st-&amp;gt;io-&amp;gt;op-&amp;gt;cond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(yes)-&amp;gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(no)-&amp;gt;sub-&amp;gt;io&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;更多语法参考：流程图语法参考&quot;&gt;&lt;a href=&quot;#更多语法参考：流程图语法参考&quot; class=&quot;headerlink&quot; title=&quot;更多语法参考：流程图语法参考&quot;&gt;&lt;/a&gt;更多语法参考：&lt;a href=&quot;http://adrai.github.io/flowchart.js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;流程图语法参考&lt;/a&gt;&lt;/h4&gt;&lt;h3 id=&quot;8-序列图&quot;&gt;&lt;a href=&quot;#8-序列图&quot; class=&quot;headerlink&quot; title=&quot;8. 序列图&quot;&gt;&lt;/a&gt;8. 序列图&lt;/h3&gt;&lt;h4 id=&quot;示例-1&quot;&gt;&lt;a href=&quot;#示例-1&quot; class=&quot;headerlink&quot; title=&quot;示例 1&quot;&gt;&lt;/a&gt;示例 1&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Alice-&amp;gt;Bob: Hello Bob, how are you?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Note right of Bob: Bob thinks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Bob--&amp;gt;Alice: I am good thanks!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;示例-2&quot;&gt;&lt;a href=&quot;#示例-2&quot; class=&quot;headerlink&quot; title=&quot;示例 2&quot;&gt;&lt;/a&gt;示例 2&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Title: Here is a title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A-&amp;gt;B: Normal line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B--&amp;gt;C: Dashed line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&amp;gt;D: Open arrow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D--&amp;gt;&amp;gt;A: Dashed open arrow&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;更多语法参考：序列图语法参考&quot;&gt;&lt;a href=&quot;#更多语法参考：序列图语法参考&quot; class=&quot;headerlink&quot; title=&quot;更多语法参考：序列图语法参考&quot;&gt;&lt;/a&gt;更多语法参考：&lt;a href=&quot;http://bramp.github.io/js-sequence-diagrams/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;序列图语法参考&lt;/a&gt;&lt;/h4&gt;&lt;h3 id=&quot;9-表格支持&quot;&gt;&lt;a href=&quot;#9-表格支持&quot; class=&quot;headerlink&quot; title=&quot;9. 表格支持&quot;&gt;&lt;/a&gt;9. 表格支持&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;价格&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;数量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;计算机&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;\$1600&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;手机&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;\$12&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;管线&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;\$1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;234&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;10-定义型列表&quot;&gt;&lt;a href=&quot;#10-定义型列表&quot; class=&quot;headerlink&quot; title=&quot;10. 定义型列表&quot;&gt;&lt;/a&gt;10. 定义型列表&lt;/h3&gt;&lt;p&gt;名词 1&lt;br&gt;:   定义 1（左侧有一个可见的冒号和四个不可见的空格）&lt;/p&gt;
&lt;p&gt;代码块 2&lt;br&gt;:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;代码块（左侧有八个不可见的空格）
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;11-Html-标签&quot;&gt;&lt;a href=&quot;#11-Html-标签&quot; class=&quot;headerlink&quot; title=&quot;11. Html 标签&quot;&gt;&lt;/a&gt;11. Html 标签&lt;/h3&gt;&lt;p&gt;本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;th rowspan=&amp;quot;2&amp;quot;&amp;gt;值班人员&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;星期一&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;星期二&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;星期三&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;李强&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;张明&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;王平&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt;&lt;br&gt;        &lt;th&gt;星期一&lt;/th&gt;&lt;br&gt;        &lt;th&gt;星期二&lt;/th&gt;&lt;br&gt;        &lt;th&gt;星期三&lt;/th&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;td&gt;李强&lt;/td&gt;&lt;br&gt;        &lt;td&gt;张明&lt;/td&gt;&lt;br&gt;        &lt;td&gt;王平&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;&lt;/table&gt;

&lt;h3 id=&quot;12-内嵌图标&quot;&gt;&lt;a href=&quot;#12-内嵌图标&quot; class=&quot;headerlink&quot; title=&quot;12. 内嵌图标&quot;&gt;&lt;/a&gt;12. 内嵌图标&lt;/h3&gt;&lt;p&gt;本站的图标系统对外开放，在文档中输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;icon-weibo&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即显示微博的图标： &lt;i class=&quot;icon-weibo icon-2x&quot;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;替换 上述 &lt;code&gt;i 标签&lt;/code&gt; 内的 &lt;code&gt;icon-weibo&lt;/code&gt; 以显示不同的图标，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;i class=&amp;quot;icon-renren&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即显示人人的图标： &lt;i class=&quot;icon-renren icon-2x&quot;&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;更多的图标和玩法可以参看 &lt;a href=&quot;http://fortawesome.github.io/Font-Awesome/3.2.1/icons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;font-awesome&lt;/a&gt; 官方网站。&lt;/p&gt;
&lt;h3 id=&quot;13-待办事宜-Todo-列表&quot;&gt;&lt;a href=&quot;#13-待办事宜-Todo-列表&quot; class=&quot;headerlink&quot; title=&quot;13. 待办事宜 Todo 列表&quot;&gt;&lt;/a&gt;13. 待办事宜 Todo 列表&lt;/h3&gt;&lt;p&gt;使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- [ ] **Cmd Markdown 开发**
    - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率
    - [ ] 支持以 PDF 格式导出文稿
    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)
    - [x] 改进 LaTex 功能
        - [x] 修复 LaTex 公式渲染问题
        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)
- [ ] **七月旅行准备**
    - [ ] 准备邮轮上需要携带的物品
    - [ ] 浏览日本免税店的物品
    - [x] 购买蓝宝石公主号七月一日的船票
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;对应显示如下待办事宜 Todo 列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;strong&gt;Cmd Markdown 开发&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率&lt;/li&gt;
&lt;li&gt;[ ] 支持以 PDF 格式导出文稿&lt;/li&gt;
&lt;li&gt;[x] 新增Todo列表功能 &lt;a href=&quot;https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;语法参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[x] 改进 LaTex 功能&lt;ul&gt;
&lt;li&gt;[x] 修复 LaTex 公式渲染问题&lt;/li&gt;
&lt;li&gt;[x] 新增 LaTex 公式编号功能 &lt;a href=&quot;http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;语法参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[ ] &lt;strong&gt;七月旅行准备&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;[ ] 准备邮轮上需要携带的物品&lt;/li&gt;
&lt;li&gt;[ ] 浏览日本免税店的物品&lt;/li&gt;
&lt;li&gt;[x] 购买蓝宝石公主号七月一日的船票&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[^footnote]: 这是一个 &lt;em&gt;注脚&lt;/em&gt; 的 &lt;strong&gt;文本&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;[^footnote2]: 这是另一个 &lt;em&gt;注脚&lt;/em&gt; 的 &lt;strong&gt;文本&lt;/strong&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Cmd-Markdown-简明语法手册&quot;&gt;&lt;a href=&quot;#Cmd-Markdown-简明语法手册&quot; class=&quot;headerlink&quot; title=&quot;Cmd Markdown 简明语法手册&quot;&gt;&lt;/a&gt;Cmd Markdown 简明语法手册&lt;/h1&gt;&lt;p&gt;标签： Cmd-Markdown&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#6-加强的代码块&quot;&gt;&lt;strong&gt;参考外链&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;&lt;em&gt;临睡前，闲余时间抽空看看，毕竟年纪大了容易忘&lt;/em&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-斜体和粗体&quot;&gt;&lt;a href=&quot;#1-斜体和粗体&quot; class=&quot;headerlink&quot; title=&quot;1. 斜体和粗体&quot;&gt;&lt;/a&gt;1. 斜体和粗体&lt;/h3&gt;&lt;p&gt;使用 &lt;em&gt; 和 *&lt;/em&gt; 表示斜体和粗体。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;这是 &lt;em&gt;斜体&lt;/em&gt;，这是 &lt;strong&gt;粗体&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;2-分级标题&quot;&gt;&lt;a href=&quot;#2-分级标题&quot; class=&quot;headerlink&quot; title=&quot;2. 分级标题&quot;&gt;&lt;/a&gt;2. 分级标题&lt;/h3&gt;&lt;p&gt;使用 === 表示一级标题，使用 — 表示二级标题。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;h1 id=&quot;这是一个一级标题&quot;&gt;&lt;a href=&quot;#这是一个一级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一个一级标题&quot;&gt;&lt;/a&gt;这是一个一级标题&lt;/h1&gt;&lt;h2 id=&quot;这是一个二级标题&quot;&gt;&lt;a href=&quot;#这是一个二级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一个二级标题&quot;&gt;&lt;/a&gt;这是一个二级标题&lt;/h2&gt;&lt;h3 id=&quot;这是一个三级标题&quot;&gt;&lt;a href=&quot;#这是一个三级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一个三级标题&quot;&gt;&lt;/a&gt;这是一个三级标题&lt;/h3&gt;&lt;p&gt;你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。&lt;/p&gt;
&lt;h3 id=&quot;3-外链接&quot;&gt;&lt;a href=&quot;#3-外链接&quot; class=&quot;headerlink&quot; title=&quot;3. 外链接&quot;&gt;&lt;/a&gt;3. 外链接&lt;/h3&gt;&lt;p&gt;使用 [描述](链接地址) 为文字增加外链接。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;这是去往 &lt;a href=&quot;http://ghosertblog.github.com&quot;&gt;本人博客&lt;/a&gt; 的链接。&lt;/p&gt;
&lt;h3 id=&quot;4-无序列表&quot;&gt;&lt;a href=&quot;#4-无序列表&quot; class=&quot;headerlink&quot; title=&quot;4. 无序列表&quot;&gt;&lt;/a&gt;4. 无序列表&lt;/h3&gt;&lt;p&gt;使用 *，+，- 表示无序列表。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无序列表项 一&lt;/li&gt;
&lt;li&gt;无序列表项 二&lt;/li&gt;
&lt;li&gt;无序列表项 三&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;5-有序列表&quot;&gt;&lt;a href=&quot;#5-有序列表&quot; class=&quot;headerlink&quot; title=&quot;5. 有序列表&quot;&gt;&lt;/a&gt;5. 有序列表&lt;/h3&gt;&lt;p&gt;使用数字和点表示有序列表。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有序列表项 一&lt;/li&gt;
&lt;li&gt;有序列表项 二&lt;/li&gt;
&lt;li&gt;有序列表项 三&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;6-文字引用&quot;&gt;&lt;a href=&quot;#6-文字引用&quot; class=&quot;headerlink&quot; title=&quot;6. 文字引用&quot;&gt;&lt;/a&gt;6. 文字引用&lt;/h3&gt;&lt;p&gt;使用 &amp;gt; 表示文字引用。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;野火烧不尽，春风吹又生。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;7-行内代码块&quot;&gt;&lt;a href=&quot;#7-行内代码块&quot; class=&quot;headerlink&quot; title=&quot;7. 行内代码块&quot;&gt;&lt;/a&gt;7. 行内代码块&lt;/h3&gt;&lt;p&gt;使用 `代码` 表示行内代码块。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;让我们聊聊 &lt;code&gt;html&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;8-代码块&quot;&gt;&lt;a href=&quot;#8-代码块&quot; class=&quot;headerlink&quot; title=&quot;8.  代码块&quot;&gt;&lt;/a&gt;8.  代码块&lt;/h3&gt;&lt;p&gt;使用 四个缩进空格 表示代码块。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;这是一个代码块，此行左侧有四个不可见的空格。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;9-插入图像&quot;&gt;&lt;a href=&quot;#9-插入图像&quot; class=&quot;headerlink&quot; title=&quot;9.  插入图像&quot;&gt;&lt;/a&gt;9.  插入图像&lt;/h3&gt;&lt;p&gt;使用 ![描述](图片链接地址) 插入图像。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.zybuluo.com/static/img/my_head.jpg&quot; alt=&quot;我的头像&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Cmd-Markdown-高阶语法手册&quot;&gt;&lt;a href=&quot;#Cmd-Markdown-高阶语法手册&quot; class=&quot;headerlink&quot; title=&quot;Cmd Markdown 高阶语法手册&quot;&gt;&lt;/a&gt;Cmd Markdown 高阶语法手册&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/markdownicon.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-内容目录&quot;&gt;&lt;a href=&quot;#1-内容目录&quot; class=&quot;headerlink&quot; title=&quot;1. 内容目录&quot;&gt;&lt;/a&gt;1. 内容目录&lt;/h3&gt;&lt;p&gt;在段落中填写 &lt;code&gt;[TOC]&lt;/code&gt; 以显示全文内容的目录结构。&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;2-标签分类&quot;&gt;&lt;a href=&quot;#2-标签分类&quot; class=&quot;headerlink&quot; title=&quot;2. 标签分类&quot;&gt;&lt;/a&gt;2. 标签分类&lt;/h3&gt;&lt;p&gt;在编辑区任意行的列首位置输入以下代码给文稿标签：&lt;/p&gt;
&lt;p&gt;标签： 数学 英语 Markdown&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;Tags： 数学 英语 Markdown&lt;/p&gt;
&lt;h3 id=&quot;3-删除线&quot;&gt;&lt;a href=&quot;#3-删除线&quot; class=&quot;headerlink&quot; title=&quot;3. 删除线&quot;&gt;&lt;/a&gt;3. 删除线&lt;/h3&gt;&lt;p&gt;使用 ~~ 表示删除线。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;这是一段错误的文本。&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-注脚&quot;&gt;&lt;a href=&quot;#4-注脚&quot; class=&quot;headerlink&quot; title=&quot;4. 注脚&quot;&gt;&lt;/a&gt;4. 注脚&lt;/h3&gt;&lt;p&gt;使用 [^keyword] 表示注脚。&lt;/p&gt;
&lt;p&gt;这是一个注脚[^footnote]的样例。&lt;/p&gt;
&lt;p&gt;这是第二个注脚[^footnote2]的样例。&lt;/p&gt;
&lt;h3 id=&quot;5-LaTeX-公式&quot;&gt;&lt;a href=&quot;#5-LaTeX-公式&quot; class=&quot;headerlink&quot; title=&quot;5. LaTeX 公式&quot;&gt;&lt;/a&gt;5. LaTeX 公式&lt;/h3&gt;&lt;p&gt;$ 表示行内公式：&lt;/p&gt;
&lt;p&gt;质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。&lt;/p&gt;
&lt;p&gt;$$ 表示整行公式：&lt;/p&gt;
&lt;p&gt;$$\sum_{i=1}^n a_i=0$$&lt;/p&gt;
&lt;p&gt;$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$&lt;/p&gt;
&lt;p&gt;$$\sum^{j-1}&lt;em&gt;{k=0}{\widehat{\gamma}&lt;/em&gt;{kj} z_k}$$&lt;/p&gt;
&lt;p&gt;访问 &lt;a href=&quot;http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference&quot;&gt;MathJax&lt;/a&gt; 参考更多使用方法。&lt;/p&gt;
&lt;h3 id=&quot;6-加强的代码块&quot;&gt;&lt;a href=&quot;#6-加强的代码块&quot; class=&quot;headerlink&quot; title=&quot;6. 加强的代码块&quot;&gt;&lt;/a&gt;6. 加强的代码块&lt;/h3&gt;&lt;p&gt;支持四十一种编程语言的语法高亮的显示，行号显示。&lt;/p&gt;
&lt;p&gt;非代码示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install vim-gnome&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Python 示例：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@requires_authorization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;somefunc&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(param1=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, param2=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;A docstring&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; param1 &amp;gt; param2: &lt;span class=&quot;comment&quot;&gt;# interesting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Greater&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (param2 - param1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SomeClass&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;message = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;interpreter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;... &lt;/span&gt;prompt&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;JavaScript 示例：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* nth element in the fibonacci series.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* @param n &amp;gt;= 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* @return the nth element, &amp;gt;= 0.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fib&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, b = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (--n &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tmp = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a += b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(fib(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="正则表达式" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习笔记1</title>
    <link href="http://yoursite.com/2016/08/13/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
    <id>http://yoursite.com/2016/08/13/Linux学习笔记1/</id>
    <published>2016-08-13T13:04:33.039Z</published>
    <updated>2016-08-13T14:19:29.257Z</updated>
    
    <content type="html">&lt;p&gt;####如何学习&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;学习心态&lt;br&gt;明确目的：你是要用 Linux 来干什么，搭建服务器，做程序开发，还是日常办公，还是娱乐游戏；&lt;br&gt;面对现实：Linux 大都在命令行下操作，能否接受不用或少用图形界面；&lt;br&gt;是学习 Linux 操作系统本身还是某一个Linux发行版（&lt;a href=&quot;http://www.ubuntu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu&lt;/a&gt;,&lt;a href=&quot;http://www.centos.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CentOS&lt;/a&gt;,&lt;a href=&quot;http://fedoraproject.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fedora&lt;/a&gt;,&lt;a href=&quot;http://www.opensuse.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenSUSE&lt;/a&gt;,&lt;a href=&quot;http://www.debian.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Debian&lt;/a&gt;,&lt;a href=&quot;http://linuxmint.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mint&lt;/a&gt; 等等）,如果你对发行版的概念或者它们之间的关系不明确的话可以参看&lt;a href=&quot;http://baike.baidu.com/view/897468.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux 发行版&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;学习路径(注重基础，重头开始)&lt;br&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/linux_base/1-8.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h6 id=&quot;Linux严格区分大小写&quot;&gt;&lt;a href=&quot;#Linux严格区分大小写&quot; class=&quot;headerlink&quot; title=&quot;Linux严格区分大小写&quot;&gt;&lt;/a&gt;Linux严格区分大小写&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;Linux不靠扩展名区分文件类型（靠文件的权限来区分文件类型）&lt;/li&gt;
&lt;li&gt;&lt;em&gt;.rpm 二进制软件包 &lt;/em&gt;.sh(脚本文件,可执行文件)， *.conf（配置文件）&lt;/li&gt;
&lt;li&gt;Linux中所有内容以文件方式保存，包括硬件、用户（一切东西皆是文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;Linux-domain&quot;&gt;&lt;a href=&quot;#Linux-domain&quot; class=&quot;headerlink&quot; title=&quot;Linux domain&quot;&gt;&lt;/a&gt;Linux domain&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;字符界面占用资源更少，出错被攻击概率小&lt;/li&gt;
&lt;li&gt;domainn service域名服务&lt;br&gt;whois domain获取domain的whois信息&lt;br&gt;dig domain 获取domain的DNS信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;Linux版本&quot;&gt;&lt;a href=&quot;#Linux版本&quot; class=&quot;headerlink&quot; title=&quot;Linux版本&quot;&gt;&lt;/a&gt;Linux版本&lt;/h6&gt;&lt;p&gt; 一个典型的Linux发行版包括：&lt;a href=&quot;http://baike.baidu.com/view/573460.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux内核&lt;/a&gt;，一些&lt;a href=&quot;http://baike.baidu.com/view/36272.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GNU&lt;/a&gt;&lt;a href=&quot;http://baike.baidu.com/view/421066.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序库&lt;/a&gt;和工具，命令行shell，图形界面的&lt;a href=&quot;http://baike.baidu.com/view/398752.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;X Window&lt;/a&gt;系统和相应的&lt;a href=&quot;http://baike.baidu.com/view/2319495.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;桌面环境&lt;/a&gt;，如&lt;a href=&quot;http://baike.baidu.com/view/281881.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KDE&lt;/a&gt;或&lt;a href=&quot;http://baike.baidu.com/view/281766.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GNOME&lt;/a&gt;，并包含数千种从[办公套件]，[编译器]，[文本编辑器]:到科学工具的应用软件。&lt;br&gt;格来讲，Linux这个词本身只表示Linux内核，但在实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU 工程各种工具和数据库的操作系统&lt;/p&gt;
&lt;h6 id=&quot;linux桌面环境介绍&quot;&gt;&lt;a href=&quot;#linux桌面环境介绍&quot; class=&quot;headerlink&quot; title=&quot;linux桌面环境介绍&quot;&gt;&lt;/a&gt;linux桌面环境介绍&lt;/h6&gt;&lt;p&gt;LInux/unix本身没有图形化界面，我们看到的图形化界面是运行在linux系统上的一套软件，这套软件现在是xorg(X本身只是工具包和架构协议，xorg是实现了x协议规范并提供图形用户界面服务的服务器)，就像实现了HTTP协议提供web服务的Apach,如果只有服务器是不可能实现完整的桌面环境的，还需要一个客户端X client，最流行实现桌面客户端服务的客户端有KDE,GNOME,LXDE,XFCE,实验楼是XFCE&lt;br&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/linux_base/2-1.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h6 id=&quot;终端-Terminal&quot;&gt;&lt;a href=&quot;#终端-Terminal&quot; class=&quot;headerlink&quot; title=&quot;终端(Terminal)&quot;&gt;&lt;/a&gt;终端(Terminal)&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在使用Linux系统时，我们不是直接与Linux系统本身打交道，而是通过Shell(命令行解释器)中间程序完成的，Teminal为了在图形化界面接受用户输入和显示输出，几个比较常见的终端模拟器，例如 gnome-terminal，kconsole，xterm，rxvt，kvt，nxterm 和 eterm&lt;br&gt;注意这里说的终端(Termianl)和控制台（termianl）是有区别的&lt;/p&gt;
&lt;p&gt;终端本质上是对应着 Linux 上的 /dev/tty 设备，Linux 的多用户登陆就是通过不同的 /dev/tty 设备完成的，Linux 默认提供了 6 个纯命令行界面的 “terminal”（准确的说这里应该是 6 个 virtual consoles）来让用户登录，在物理机系统上你可以通过使用&lt;code&gt;[Ctrl]+[Alt]+[F1]～[F6]&lt;/code&gt;进行切换，当你切换到其中一个终端后想要切换回图形界面，你可以按下&lt;code&gt;[Ctrl]+[Alt]+[F7]&lt;/code&gt;来完成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;shell&lt;br&gt;在实际桌面环境的使用过程中，正真带来差异的不是不同发行版本的终端，而是shell(壳)，有核就有壳，shell就是命令行解释器，普通意义上就是接受用户输入命令的程序，它之所以被称作 Shell 是因为它隐藏了操作系统底层的细节。 Unix/Linux 下的图形用户界面 GNOME 和 KDE有时也被叫做“虚拟 shell”或“图形 shell”。&lt;/p&gt;
&lt;p&gt;Unix/Linux 操作系统下的 Shell 既是用户交互的界面，也是控制系统的脚本语言，在 UNIX/Linux 中比较流行的常见的 Shell 有 bash，zsh，ksh，csh 等等，Ubuntu 终端默认使用的是 bash，默认的桌面环境是 GNOME 或者 Unity（基于 GNOME）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h6 id=&quot;重要的快捷键&quot;&gt;&lt;a href=&quot;#重要的快捷键&quot; class=&quot;headerlink&quot; title=&quot;重要的快捷键&quot;&gt;&lt;/a&gt;重要的快捷键&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;tab&lt;/code&gt; 补全命令，补全路径，补全命令参数&lt;br&gt;(可以一边输入，按tab下面提示，再在上方继续输入)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl+C&lt;/code&gt; 中止退出当前执行命令&lt;br&gt;Python中（ ctrl+C ctrl+z q exit()总有一个是）&lt;/li&gt;
&lt;li&gt;键盘向&lt;code&gt;上&lt;/code&gt;键, 显示历史输入命令，恢复你之前输入过的命令&lt;br&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/Linux_keyss.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h6 id=&quot;学习使用通配符&quot;&gt;&lt;a href=&quot;#学习使用通配符&quot; class=&quot;headerlink&quot; title=&quot;学习使用通配符&quot;&gt;&lt;/a&gt;学习使用通配符&lt;/h6&gt;&lt;p&gt;通配符是一种特殊语句，主要有星号和问号（?），用来对对字符串进行模糊匹配（比如文件名，参数名）。当查找文件夹时，可以使用它来代替一个或多个真正字符；当不知道真正字符或者懒得输入完整名字时，常常使用通配符代替一个或多个真正的字符。 &lt;strong&gt;通配符&lt;/strong&gt; 实际上就是一种 Shell 实现的路径扩展功能。在 通配符被处理后, Shell 会先完成该命令的重组，然后再继续处理重组后的命令，直至执行该命令&lt;/p&gt;
&lt;p&gt;终端里面输入的通配符是由 Shell 处理的，不是由所涉及到命令语句处理的，它只会出现在命令的“参数值”里（它不用在 命令名称里）。当 Shell 在“参数值”中遇到了通配符时，Shell 会将其当作路径或文件名去在磁盘上搜寻可能的匹配：若符合要求的匹配存在，则进行代换(路径扩展)；否则就将该通配符作为一个普通字符传递给“命令”，然后再由命令进行处理。&lt;br&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/shell_tongpei.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;######在命令行中获取帮助(其实就是获取在线手册)&lt;br&gt;在 Linux 环境中，如果你遇到困难，可以使用 &lt;code&gt;man&lt;/code&gt; 命令，它是&lt;code&gt;Manual page&lt;/code&gt;的缩写。&lt;/p&gt;
&lt;p&gt;Manual pages 是在 UNIX 或类 UNIX 操作系统在线软件文档的一种普遍的形式。 内容包括计算机程序（包括库和系统调用），正式的标准和惯例，甚至是抽象的概念。用户可以通过执行 man 命令调用手册页。&lt;/p&gt;
&lt;p&gt;你可以使用如下方式来获得某个命令的说明和使用方式的详细介绍：&lt;br&gt;&lt;code&gt;$ man &amp;lt;command_name&amp;gt;&lt;/code&gt;&lt;br&gt;比如你想查看 man 命令本身的使用方式，你可以输入：&lt;br&gt;&lt;code&gt;man man&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;通常情况下，man 手册里面的内容都是英文的，这就要求你有一定的英文基础。man 手册的内容很多，涉及了 Linux 使用过程中的方方面面，为了便于查找，是做了分册（分区段）处理的，在Research UNIX、BSD、OS X 和 Linux 中，手册通常被分为8个区段，安排如下：&lt;br&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/linux_shouce.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;要查看相应区段的内容，就在 man 后面加上相应区段的数字即可，如：&lt;br&gt;&lt;code&gt;$ man 1 ls&lt;/code&gt;&lt;br&gt;会显示第一区段中的ls 命令man页面&lt;/p&gt;
&lt;p&gt;所有的手册页遵循一个常见的布局，其为通过简单的 ASCII 文本展示而优化，而这种情况下可能没有任何形式的高亮或字体控制。一般包括以下部分内容：&lt;br&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/shouce_des.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/shouce_2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h6 id=&quot;apt-get-update和-apt-upgrade的区别&quot;&gt;&lt;a href=&quot;#apt-get-update和-apt-upgrade的区别&quot; class=&quot;headerlink&quot; title=&quot;apt-get update和 apt-upgrade的区别&quot;&gt;&lt;/a&gt;apt-get update和 apt-upgrade的区别&lt;/h6&gt;&lt;p&gt;update是下载源里面的metadata的. 包括这个源有什么包, 每个包什么版本之类的.&lt;br&gt;upgrade是根据update命令下载的metadata决定要更新什么包(同时获取每个包的位置).&lt;br&gt;安装软件之前, 可以不upgrade, 但是要update. 因为旧的信息指向了旧版本的包, 但是源的服务器更新了之后旧的包可能被新的替代了, 于是你会遇到404…&lt;/p&gt;
&lt;p&gt;也就是说：&lt;br&gt;update更新软件包索引，就是告诉包管理器最新的一份源里面的软件包版本信息，upgrade是通常意义的更新软件包。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;####如何学习&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;学习心态&lt;br&gt;明确目的：你是要用 Linux 来干什么，搭建服务器，做程序开发，还是日常办公，还是娱乐游戏；&lt;br&gt;面对现实：Linux 大都在命令行下操作，能否接受不用或少用图形界面；&lt;br&gt;是学习 Linux 操作系统本身还是某一个Linux发行版（&lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt;,&lt;a href=&quot;http://www.centos.org/&quot;&gt;CentOS&lt;/a&gt;,&lt;a href=&quot;http://fedoraproject.org/&quot;&gt;Fedora&lt;/a&gt;,&lt;a href=&quot;http://www.opensuse.org/&quot;&gt;OpenSUSE&lt;/a&gt;,&lt;a href=&quot;http://www.debian.org/&quot;&gt;Debian&lt;/a&gt;,&lt;a href=&quot;http://linuxmint.com/&quot;&gt;Mint&lt;/a&gt; 等等）,如果你对发行版的概念或者它们之间的关系不明确的话可以参看&lt;a href=&quot;http://baike.baidu.com/view/897468.htm&quot;&gt;Linux 发行版&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;学习路径(注重基础，重头开始)&lt;br&gt;&lt;img src=&quot;https://dn-anything-about-doc.qbox.me/linux_base/1-8.png/logoblackfont&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Linux学习" scheme="http://yoursite.com/categories/Linux%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>正则表达式和Python中正则的使用</title>
    <link href="http://yoursite.com/2016/08/07/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8CPython%E4%B8%AD%E6%AD%A3%E5%88%99%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2016/08/07/正则表达式和Python中正则的使用/</id>
    <published>2016-08-07T10:09:32.809Z</published>
    <updated>2016-10-27T12:51:29.634Z</updated>
    
    <content type="html">&lt;h4 id=&quot;正则表达式的概念和用法&quot;&gt;&lt;a href=&quot;#正则表达式的概念和用法&quot; class=&quot;headerlink&quot; title=&quot;正则表达式的概念和用法&quot;&gt;&lt;/a&gt;正则表达式的概念和用法&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;多练习，多使用，才能熟练掌握正则表达式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.cuiqingcai.com/wp-content/uploads/2015/02/20130515113723855-e1424095177180.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h6 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=2652563938&amp;amp;idx=2&amp;amp;sn=52881e92c413cca92cdf8b1a9492a30e&amp;amp;scene=23&amp;amp;srcid=0806R6uskwun6yYYK1C8YS2o#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python 正则表达式学习摘要及资料&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.parryqiu.com/2015/06/01/regex-lesson/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正则表达式入门以及高阶视频教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/deerchao/archive/2006/08/24/zhengzhe30fengzhongjiaocheng.html#mission&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正则表达式30分钟入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gold.xitu.io/search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;掘金&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cuiqingcai.com/977.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python爬虫入门七之正则表达式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;######基本概念&lt;br&gt;在编写处理字符串的程序或者网页时，需要查找某些复杂规则的字符串。&lt;br&gt;正则表达式： &lt;code&gt;描述这些规则的工具&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;####Python 中正则的使用&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;常用方法&quot;&gt;&lt;a href=&quot;#常用方法&quot; class=&quot;headerlink&quot; title=&quot;常用方法&quot;&gt;&lt;/a&gt;常用方法&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;findall: 匹配所有符合规律的内容，以列表的方式返回&lt;/li&gt;
&lt;li&gt;Serch: 匹配并提取第一个符合规律的内容，以正则表达式对象(object)的形式返回&lt;/li&gt;
&lt;li&gt;Sub: 替换符合规律的内容，返回替换后的值&lt;h6 id=&quot;贪心和非贪心匹配&quot;&gt;&lt;a href=&quot;#贪心和非贪心匹配&quot; class=&quot;headerlink&quot; title=&quot;贪心和非贪心匹配&quot;&gt;&lt;/a&gt;贪心和非贪心匹配&lt;/h6&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.*&lt;/code&gt; 贪心 匹配尽可能多&lt;br&gt;&lt;code&gt;secret_code = &amp;#39;sdewsexxIxxdefrt12kkxxlovexx33kkxxyouxxkl&amp;#39;
...
b = re.findall(&amp;#39;xx.*xx&amp;#39;,secret_code)
print b&lt;/code&gt;&lt;br&gt;结果：多量少组合&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.*？&lt;/code&gt; 非贪心 匹配尽可能少&lt;br&gt;&lt;code&gt;c = re.findall(&amp;#39;xx.*?xx&amp;#39;,secret_code)
print c&lt;/code&gt;&lt;br&gt;结果：少量多组合&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-&lt;code&gt;(.*?)&lt;/code&gt; 只返回括号内的数据，与上面不同 &lt;strong&gt;重要&lt;/strong&gt;&lt;br&gt;&lt;code&gt;d = re.findall(&amp;#39;xx(.*?)xx&amp;#39;,secret_code)
print d
for each in d
    print each&lt;/code&gt;&lt;br&gt;结果为： I love you 只匹配括号中即xx xx中间的字符&lt;/p&gt;
&lt;h5 id=&quot;Python-re库&quot;&gt;&lt;a href=&quot;#Python-re库&quot; class=&quot;headerlink&quot; title=&quot;Python re库&quot;&gt;&lt;/a&gt;Python re库&lt;/h5&gt;&lt;p&gt;re.py源文件 就是Python 正则表达式的源码介绍&lt;br&gt;&lt;code&gt;s = &amp;#39;&amp;#39;&amp;#39;sdfxxhello
xxfsdfxxworldxxasdf&amp;#39;&amp;#39;&amp;#39;
d = re.findall(&amp;#39;xx(.*?)xx&amp;#39;,s,re.S)
print d
结果： [&amp;#39;hello\n&amp;#39;,&amp;#39;world&amp;#39;]
**re.S：表示包含换行符的任意字符** 没有则输出：fsdf&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&quot;findall-和serach的区别&quot;&gt;&lt;a href=&quot;#findall-和serach的区别&quot; class=&quot;headerlink&quot; title=&quot;findall 和serach的区别&quot;&gt;&lt;/a&gt;findall 和serach的区别&lt;/h6&gt;&lt;p&gt;&lt;code&gt;s2 = &amp;#39;asdfxxIxx123xxlovexxdfd&amp;#39;
f = re.search(&amp;#39;xx(.*?)xx123(.*?)xx&amp;#39;,s2).group(1)
print f&lt;/code&gt;&lt;br&gt;结果是： I&lt;br&gt;&lt;code&gt;f = re.search(&amp;#39;xx(.*?)xx123(.*?)xx&amp;#39;,s2).group(2)
print f&lt;/code&gt; 结果是： love&lt;br&gt;&lt;strong&gt;group&lt;/strong&gt;代表我们匹配的括号有几个&lt;/p&gt;
&lt;p&gt;&lt;code&gt;f2 = re.findall(&amp;#39;xx(.*?)xx123(.*?)xx&amp;#39;,s2)
print f2[0][1]&lt;/code&gt;&lt;br&gt;f2在断点中调试为： &lt;code&gt;f2={list}[(&amp;#39;I&amp;#39;,&amp;#39;love&amp;#39;)]
                 0={tuple}(&amp;#39;I&amp;#39;,&amp;#39;love&amp;#39;)&lt;/code&gt;&lt;br&gt;print结果是： love&lt;/p&gt;
&lt;p&gt;&lt;em&gt;findall: 匹配所有符合的内容，返回的是list&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;search: 匹配的是第一个符合的内容，返回的是object&lt;/em&gt;&lt;br&gt;&lt;em&gt;确定只有一个内容的时候，使用search方法可以提高效率&lt;/em&gt;&lt;/p&gt;
&lt;h6 id=&quot;sub的使用&quot;&gt;&lt;a href=&quot;#sub的使用&quot; class=&quot;headerlink&quot; title=&quot;sub的使用&quot;&gt;&lt;/a&gt;sub的使用&lt;/h6&gt;&lt;p&gt;&lt;code&gt;s = &amp;#39;123abcdsdffrerg123&amp;#39;
se = re.sub(&amp;#39;123(.*?)123&amp;#39;,&amp;#39;456789123&amp;#39;,s)
print se
result : 456789123&lt;/code&gt;&lt;br&gt;analyse: 123和123之间包围的 用了括号只返回括号中内容&lt;/p&gt;
&lt;h6 id=&quot;不建议使用compile&quot;&gt;&lt;a href=&quot;#不建议使用compile&quot; class=&quot;headerlink&quot; title=&quot;不建议使用compile&quot;&gt;&lt;/a&gt;不建议使用compile&lt;/h6&gt;&lt;p&gt;compile 是先进行编译 在进行匹配&lt;br&gt;源码中 def compile中也有compile 多此一举&lt;br&gt;&lt;code&gt;pattern = &amp;#39;xx(.*?)xx&amp;#39;
new_pattern = re.compile(pattern,re.S)
output = re.findall(new_pattern,secret_code)
print output&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&quot;匹配数字&quot;&gt;&lt;a href=&quot;#匹配数字&quot; class=&quot;headerlink&quot; title=&quot;匹配数字&quot;&gt;&lt;/a&gt;匹配数字&lt;/h6&gt;&lt;p&gt;&lt;code&gt;a = &amp;#39;asdfasf1234567fasd555fas&amp;#39;
b = re.finall(&amp;#39;(/d+)&amp;#39;,a)
print b
result: [&amp;#39;1234567&amp;#39;,&amp;#39;555&amp;#39;]&lt;/code&gt;&lt;br&gt;&lt;strong&gt;‘(/d+)’&lt;/strong&gt;表示只返回括号中的内容一定要学会使用&lt;/p&gt;
&lt;h5 id=&quot;python-中正则表达式的使用&quot;&gt;&lt;a href=&quot;#python-中正则表达式的使用&quot; class=&quot;headerlink&quot; title=&quot;python 中正则表达式的使用&quot;&gt;&lt;/a&gt;python 中正则表达式的使用&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;使用findall与serach从大量文本中匹配感兴趣的内容(先抓大再抓小技巧)&lt;/li&gt;
&lt;li&gt;使用sub实现换页功能&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;正则表达式的概念和用法&quot;&gt;&lt;a href=&quot;#正则表达式的概念和用法&quot; class=&quot;headerlink&quot; title=&quot;正则表达式的概念和用法&quot;&gt;&lt;/a&gt;正则表达式的概念和用法&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;多练习，多使用，才能熟练掌握正则表达式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.cuiqingcai.com/wp-content/uploads/2015/02/20130515113723855-e1424095177180.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h6 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=2652563938&amp;amp;idx=2&amp;amp;sn=52881e92c413cca92cdf8b1a9492a30e&amp;amp;scene=23&amp;amp;srcid=0806R6uskwun6yYYK1C8YS2o#rd&quot;&gt;Python 正则表达式学习摘要及资料&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.parryqiu.com/2015/06/01/regex-lesson/&quot;&gt;正则表达式入门以及高阶视频教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/deerchao/archive/2006/08/24/zhengzhe30fengzhongjiaocheng.html#mission&quot;&gt;正则表达式30分钟入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gold.xitu.io/search&quot;&gt;掘金&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cuiqingcai.com/977.html&quot;&gt;Python爬虫入门七之正则表达式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;######基本概念&lt;br&gt;在编写处理字符串的程序或者网页时，需要查找某些复杂规则的字符串。&lt;br&gt;正则表达式： &lt;code&gt;描述这些规则的工具&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;####Python 中正则的使用&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="正则表达式" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>相册效果页面</title>
    <link href="http://yoursite.com/2016/07/28/%E7%9B%B8%E5%86%8C%E6%95%88%E6%9E%9C%E9%A1%B5%E9%9D%A2/"/>
    <id>http://yoursite.com/2016/07/28/相册效果页面/</id>
    <published>2016-07-28T08:45:57.000Z</published>
    <updated>2016-07-28T09:37:08.724Z</updated>
    
    <content type="html">&lt;h6 id=&quot;7-27晚上花了半个小时-百度google没解决&quot;&gt;&lt;a href=&quot;#7-27晚上花了半个小时-百度google没解决&quot; class=&quot;headerlink&quot; title=&quot;7.27晚上花了半个小时 百度google没解决&quot;&gt;&lt;/a&gt;7.27晚上花了半个小时 百度google没解决&lt;/h6&gt;&lt;p&gt;   &lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/London.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h6 id=&quot;7-28上午stack-overflow-python3-5操作注册表库-winreg改变winreg-一次性解决&quot;&gt;&lt;a href=&quot;#7-28上午stack-overflow-python3-5操作注册表库-winreg改变winreg-一次性解决&quot; class=&quot;headerlink&quot; title=&quot;7.28上午stack overflow, python3.5操作注册表库_winreg改变winreg,一次性解决&quot;&gt;&lt;/a&gt;7.28上午stack overflow, python3.5操作注册表库&lt;code&gt;_winreg&lt;/code&gt;改变&lt;code&gt;winreg&lt;/code&gt;,一次性解决&lt;/h6&gt;&lt;p&gt;  &lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/Sydney.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;结论：百度不靠谱，Google大法好&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;7-27晚上花了半个小时-百度google没解决&quot;&gt;&lt;a href=&quot;#7-27晚上花了半个小时-百度google没解决&quot; class=&quot;headerlink&quot; title=&quot;7.27晚上花了半个小时 百度google没解决&quot;&gt;&lt;/a&gt;7.27晚上花了半个小时 百
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Android避免OOM(内存优化)</title>
    <link href="http://yoursite.com/2016/07/06/Android%E9%81%BF%E5%85%8DOOM-%E5%86%85%E5%AD%98%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2016/07/06/Android避免OOM-内存优化/</id>
    <published>2016-07-06T07:22:11.000Z</published>
    <updated>2016-11-01T13:12:15.421Z</updated>
    
    <content type="html">&lt;p&gt;Android内存优化是性能优化很重要的一部分，而如何避免OOM又是内存优化的核心。&lt;/p&gt;
&lt;h2 id=&quot;Android内存管理机制&quot;&gt;&lt;a href=&quot;#Android内存管理机制&quot; class=&quot;headerlink&quot; title=&quot;Android内存管理机制&quot;&gt;&lt;/a&gt;Android内存管理机制&lt;/h2&gt;&lt;h3 id=&quot;android官网有一篇文章&quot;&gt;&lt;a href=&quot;#android官网有一篇文章&quot; class=&quot;headerlink&quot; title=&quot;android官网有一篇文章&quot;&gt;&lt;/a&gt;android官网有一篇文章&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://developer.android.com/training/articles/memory.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android是如何管理应用的进程与内存分配&lt;/a&gt;&lt;br&gt;Android系统的Dalvik虚拟机扮演了内存垃圾自动回收的角色。&lt;/p&gt;
&lt;h4 id=&quot;OOM介绍（out-of-memory-内存溢出）&quot;&gt;&lt;a href=&quot;#OOM介绍（out-of-memory-内存溢出）&quot; class=&quot;headerlink&quot; title=&quot;OOM介绍（out of memory 内存溢出）&quot;&gt;&lt;/a&gt;OOM介绍（out of memory 内存溢出）&lt;/h4&gt;&lt;p&gt;Android和java中都会出现由于不良代码引起的内存泄露，为了使Android应用程序能够快速高效的运行，Android每个应用程序都会有专门Dalvik虚拟机实例来运行，也就是每个程序都在属于自己的进程中运行。&lt;br&gt;这样，某个应用程序内存泄露仅仅只会使自己进程被kill掉不会影响其他进程（如果是system_process等系统进程出现问题，就会造成系统重启），&lt;strong&gt;另一方面&lt;/strong&gt;，系统为每一个应用程序分配了不同的内存上限，如果超过这个上限被视为内存泄露，从而被kill掉。&lt;br&gt;Dalvik Heap size因不同设备的RAM不同而有所差异，应用占用内存接近这个阀值，在尝试分配内存就会引起outofmemoryError的错误。&lt;/p&gt;
&lt;p&gt;出现OOM有几种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加载对象过大&lt;/li&gt;
&lt;li&gt;相应资源过多，来不及加载。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解决这些问题，有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内存引用上做一些处理，常用的有软引用。&lt;/li&gt;
&lt;li&gt;内存中加载图片直接在内存中做处理（如边界压缩）&lt;br&gt;这个Glide\Fresco 图片框架可能封装好了&lt;br&gt;3.动态回收内存&lt;br&gt;4.优化Delivk虚拟机的堆内存分配&lt;br&gt;5.自定义堆内存大小&lt;h4 id=&quot;共享内存&quot;&gt;&lt;a href=&quot;#共享内存&quot; class=&quot;headerlink&quot; title=&quot;共享内存&quot;&gt;&lt;/a&gt;共享内存&lt;/h4&gt;Android应用程序的进程都是从Zygote的进程fork出来的。Zygote进程在系统启动并载入通用的framework代码和资源后启动。一个新的应用程序启动，系统就会从Zygote中fork出来一个新的进程，在新的进程中加载并允许应用程序的代码。这使得大多数RAM pages被分配给framework的代码，并且RAM资源能够在应用的所有进程之间共享。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大多数static 数据被mmapped到一个进程中，这样使得同样的数据在进程之间能够共享，而且在需要的时候能paged out.常见static 数据包括Dalvik code ,app resourecs,so 文件等。&lt;/p&gt;
&lt;p&gt;大多数情况下，Android通过显示的方式分配共享内存区域（例如ashmem或gralloc）来实现动态RAM区域能够在不同进程之间进行共享的机制。比如，Window Surface在APP和Screen Composition之间使用共享的内存，&lt;br&gt;Cursor Buffers在Content Provider与Clients之间共享内存。&lt;/p&gt;
&lt;h4 id=&quot;分配与回收内存&quot;&gt;&lt;a href=&quot;#分配与回收内存&quot; class=&quot;headerlink&quot; title=&quot;分配与回收内存&quot;&gt;&lt;/a&gt;分配与回收内存&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;每个进程的Dalvik heap都反应了使用内存的占用范围,（Dalvik Heap Size）,他可以根据需要进行增长，但是系统有一个上限。&lt;/li&gt;
&lt;li&gt;HeapSize跟实际的物理内存大小是不对等的，PSS（proportional Set Size）记录了应用程序自身占用以及和其他进程共享的内容。&lt;/li&gt;
&lt;li&gt;Android不会对heap空闲区域进行做碎片整理。系统仅仅在新的内存分配之前判断Heap的尾端剩余空间是否足够，不够就会触发gc操作，从而腾出更多空闲的内存空间。gc操作(garbage collection)也就是所谓的垃圾回收，Android在适当时候触发gc操作，将一些不再使用的对象回收，在Android高级系统针对Heap空间有一个Generational Heap Memory的模型，最近分配的对象在放在young generation区域，当停留一段时间，这个对象会被移动到old generation中，最后在移动到permanent generation区域中。系统会根据内存中不同的内存数据类型进行gc操作，young generation区域的对象更容易被销毁，而且gc操作的速度比old generation的速度要快，时间更短。&lt;br&gt;每个generation的内存区域都有固定的大小，随着新的对象陆续被分配到此区域，当这些对象的大小快达到阀门值时，就会触发gc操作。通常情况下，gc操作发生时，所有线程都是暂停的。&lt;br&gt;如何查看本机heap size:&lt;br&gt;&lt;code&gt;ActivityManager manager=(Activity)getSystemService(Context.ACTIVITY_SERVICE);
int heapsize=manager.getMemoryClass();&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;应用切换操作&quot;&gt;&lt;a href=&quot;#应用切换操作&quot; class=&quot;headerlink&quot; title=&quot;应用切换操作&quot;&gt;&lt;/a&gt;应用切换操作&lt;/h4&gt;&lt;p&gt;Android系统不会再用户切换应用的时候进行交换内存的操作，而是把不包含Foreground组件的应用进程放到LRUCache中，比如用户启动一个应用，系统会为它创建一个进程，但是当用户离开这个应用，此进程不会背立即销毁而是会放到一个Cache中，当用户切换回来够快速的恢复。&lt;/p&gt;
&lt;h4 id=&quot;发生OOM的条件&quot;&gt;&lt;a href=&quot;#发生OOM的条件&quot; class=&quot;headerlink&quot; title=&quot;发生OOM的条件&quot;&gt;&lt;/a&gt;发生OOM的条件&lt;/h4&gt;&lt;p&gt;通过不同的内存分配方式对不同的对象(bitmap,etc)进行操作因Android版本差异发生变化。&lt;br&gt;4.0以上，废除了external的计数器，类似bitmap的分配改到dalvik的Java heap(堆)中申请，只要allocated+新分配的内存&amp;gt;=getMemoryClass()就会发生OOM。(在AS memory monitor查看内存中Dalvik Heap的实时变化)&lt;/p&gt;
&lt;h4 id=&quot;如何避免OOM&quot;&gt;&lt;a href=&quot;#如何避免OOM&quot; class=&quot;headerlink&quot; title=&quot;如何避免OOM&quot;&gt;&lt;/a&gt;如何避免OOM&lt;/h4&gt;&lt;p&gt;减少OOM的第一步就是要尽量减少新分配出来的对象占用内存的大小，尽量使用更加轻量的对象。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用更加轻量的数据结构&lt;br&gt;考虑使用ArrayMap/SpareseArray而不是传统的HashMap等数据结构，Android系统为移动系统设计的容器ArrayMap更加高效，占用内存更少，因为HashMap需要一个额外的实例对象来记录Mapping的操作。而SparesArray高效的避免了key和value的自动装箱，而且避免了装箱后的解箱。&lt;br&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/OOM1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;关于更多ArrayMap/SparseArray的讨论，请参考&lt;a href=&quot;http://hukai.me/android-performance-patterns-season-3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hukai.me/android-performance-patterns-season-3/&lt;/a&gt;的前三个段落&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;避免在Android中使用Enum&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;减少Bitmap对象的内存占用&lt;br&gt;Bitmap是一个消耗内存的大胖子，减少创建出来的Bitmap的内存占用很重要。一般有两种措施&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;inSampleSize:缩放比例，在把图片载入内存之前，我们需要计算一个合适的缩放比例，避免不必要的大图载入。&lt;/li&gt;
&lt;li&gt;decode format:解码格式，选择ARGB_8888/RBG_565/ARGB_4444/ALPHA_8，存在很大差异。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;使用更小的图片&lt;br&gt;在设计图片资源的时候，我们要考虑图片是否存在可以压缩的空间，是否能使用更小的图片，使用小图在xml加载资源时就不会在初始化视图因为内存不足而发生InflationException,其根本原因就是发生了OOM。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;内存对象的重复利用&quot;&gt;&lt;a href=&quot;#内存对象的重复利用&quot; class=&quot;headerlink&quot; title=&quot;内存对象的重复利用&quot;&gt;&lt;/a&gt;内存对象的重复利用&lt;/h4&gt;&lt;p&gt;Android最常用的缓存算法LRU(Least Recently Use)&lt;br&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/OOM2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;复用系统自带的资源，比如字符串、图片、动画、样式、颜色、简单布局，在应用中直接引用，减少自身负重、apk大小、减少内存的开销、复用性更好。但需要考虑版本差异。&lt;/li&gt;
&lt;li&gt;Listview和GirdView出现大量重复子组件的视图里面对ConvertView的复用。&lt;/li&gt;
&lt;li&gt;Bitmap对象的复用&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;在ListView和GridView等显示大量图片的控件里面需要使用LRU机制缓存Bitmap.&lt;/li&gt;
&lt;li&gt;利用inBitmap的高级特性提高Android系统在Bitmap分配和释放执行效率，inBitmap属性可以告知Bitmap解码器使用已经存在的内存区域而不是重新申请一块内存区域存放Bitmap,也就是新解码的Bitmap会使用之前那张bitmap在heap占用的内存区域，即使是上千张图片，也只占用屏幕能放下图片的内存&lt;h6 id=&quot;inBitmap的限制&quot;&gt;&lt;a href=&quot;#inBitmap的限制&quot; class=&quot;headerlink&quot; title=&quot;inBitmap的限制&quot;&gt;&lt;/a&gt;inBitmap的限制&lt;/h6&gt;&lt;/li&gt;
&lt;li&gt;SDK19以后：新申请的BItmap大小必须小于或等于前面赋值过的bitmap的大小&lt;/li&gt;
&lt;li&gt;新的Bitmap和原来的解码格式要相同，我们可以创建包含多种类型可以重用的bitmap对象池，这样后序的bitmap创建就可以找到合适的模板去重用。&lt;br&gt;&lt;img src=&quot;http://o9pxg8pv5.bkt.clouddn.com/OOM3.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;避免在onDraw方法里面执行对象的创建&lt;br&gt;在onDraw这种频繁调用的方法要避免对象的创建操作，因为他会迅速增加内存的使用，引起频繁的gc，甚至内存抖动&lt;br&gt;5.StringBuilder&lt;br&gt;如果代码中有大量字符串拼接操作，使用StringBuilder代替”+”&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;避免对象的内存泄露&quot;&gt;&lt;a href=&quot;#避免对象的内存泄露&quot; class=&quot;headerlink&quot; title=&quot;避免对象的内存泄露&quot;&gt;&lt;/a&gt;避免对象的内存泄露&lt;/h4&gt;&lt;p&gt;内存对象的泄露会导致不再使用的对象无法及时释放，不仅浪费了宝贵的内存空间，后续要分配内存的时候，空间不足造成OOM。这样，每级的generation会变小，gc更加容易触发，引起内存抖动，带来性能问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LeakCanary开源控件可以帮助我们发现内存泄露的问题。&lt;br&gt;介绍：&lt;a href=&quot;https://github.com/square/leakcanary&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/square/leakcanary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;中文文档 &lt;a href=&quot;http://www.liaohuqiu.net/cn/posts/leak-canary-read-me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.liaohuqiu.net/cn/posts/leak-canary-read-me/&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;注意Activity的泄露&lt;br&gt;Activity泄露是内存泄露最为严重的问题，涉及内存多，影响面广&lt;br&gt;两种情形：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;内部类引用导致Activity的泄露&lt;br&gt;典型的是Handler导致的Activity泄露，如果Handler中有延迟的任务或者等待执行的任务队列过长，很可能因为Handler继续执行造成Activity的泄露。&lt;br&gt;引用链是Looper-&amp;gt;MessageQueue-&amp;gt;Message-&amp;gt;handler-&amp;gt;Activity,解决办法是在退出UI之前执行 remove Handler消息队列中的消息与runnable对象。或者使用Static+WeakReference的方式来判断Handler和Activity之间存在引用关系。&lt;/li&gt;
&lt;li&gt;Activity Context被传递到其他实例中，可能导致自身被引用而发生泄露&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;考虑使用Application Context而不是Activity Context&lt;br&gt;除必须使用Activity Context的情况(Dialog的context必须是Activity),我们可以使用Application Context来避免Activity泄露&lt;/li&gt;
&lt;li&gt;注意临时Bitmap的及时回收&lt;br&gt;大多数情况下，我们对Bitmap对象增加缓存机制，但是有时候部分bitmap需要及时回收。比如我们临时创建的摸个相对大的bitmap对象，变换得到新的bitmap对象后，尽快回收原始的bitmap,及时释放原来的空间。&lt;/li&gt;
&lt;li&gt;注意监听器的注销&lt;br&gt;android程序里面register后要及时释放unregister那些监听器，自己手动add的listener，要记得remove这个listener.&lt;br&gt;5.注意缓存容器的对象泄露&lt;br&gt;有时候我们为了提高对象的复用性，把某些对象放到缓存容器中，如果这些对象没有及时从容器中清楚，也可能导致内存泄露，&lt;/li&gt;
&lt;li&gt;注意webview的泄露&lt;br&gt;Android不同版本对webview产生有很大差异，较为严重的问题是webview的泄露，解决办法：为webview新开一个线程，通过AIDL与主进程通信，根据业务的需要在合适的时机进行销毁，从而达到内存的释放。&lt;/li&gt;
&lt;li&gt;注意cursor对象是否关闭&lt;br&gt;我们在对数据库进行操作时，使用完cursor没有及时关闭，cursor的泄露，会对内存管理带来负面影响&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;内存使用策略优化&quot;&gt;&lt;a href=&quot;#内存使用策略优化&quot; class=&quot;headerlink&quot; title=&quot;内存使用策略优化&quot;&gt;&lt;/a&gt;内存使用策略优化&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;谨慎使用large heap&lt;br&gt;android设备由于软硬件的差异，heap阀值不同，特殊情况下可以在manifest中使用largeheap=true声明一个更大的heap空间，使用getLargeMemoryClass()来获取到这个更大的空间。但是要谨慎使用，因为额外的空间会影响到系统整体的用户体验，并且会使每次gc的运行时间更长。切换任务时性能大打折扣，large heap并不一定能获取到更大的heap.&lt;/li&gt;
&lt;li&gt;综合考虑设备内存阈值与其他因素设计合适的缓存大小&lt;br&gt;例如，在设计ListView或者GridView的Bitmap LRU缓存的时候，需要考虑的点有：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应用程序剩下了多少可用的内存空间?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有多少图片会被一次呈现到屏幕上？有多少图片需要事先缓存好以便快速滑动时能够立即显示到屏幕？&lt;/li&gt;
&lt;li&gt;设备的屏幕大小与密度是多少? 一个xhdpi的设备会比hdpi需要一个更大的Cache来hold住同样数量的图片。&lt;/li&gt;
&lt;li&gt;不同的页面针对Bitmap的设计的尺寸与配置是什么，大概会花费多少内存？&lt;/li&gt;
&lt;li&gt;页面图片被访问的频率？是否存在其中的一部分比其他的图片具有更高的访问频繁？如果是，也许你想要保存那些最常访问的到内存中，或者为不同组别的位图(按访问频率分组)设置多个LruCache容器。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;onLowMemory() 与onTrimMemory()&lt;br&gt;Android可以在不同的应用当中随意切换。为了让background转到foreground, 每一个background都会占用一定的内存。系统会根据内存的使用情况决定回收部分background的应用内存。background的应用从暂停状态恢复到foreground，比较快，如果从kill状态恢复比较慢。&lt;/li&gt;
&lt;li&gt;资源文件需要选择合适的文件夹进行存放&lt;br&gt;我们知道hdpi/xhdpi/xxhdpi等等不同dpi的文件夹下的图片在不同的设备上会经过scale的处理。例如我们只在hdpi的目录下放置了一张100&lt;em&gt;100的图片，那么根据换算关系，xxhdpi&lt;br&gt;的手机去引用那张图片就会被拉伸到200&lt;/em&gt;200。需要注意到在这种情况下，内存占用是会显著提高的。对于不希望被拉伸的图片，需要放到assets或者nodpi的目录下。&lt;/li&gt;
&lt;li&gt;Try catch某些大内存分配的操作&lt;br&gt;在某些情况下，我们需要事先评估那些可能发生OOM的代码，对于这些可能发生OOM的代码，加入catch机制，可以考虑在catch里面尝试一次降级的内存分配操作。例如decode bitmap的时候，catch到OOM，可以尝试把采样比例再增加一倍之后，再次尝试decode。&lt;/li&gt;
&lt;li&gt;谨慎使用static对象&lt;br&gt;因为static的生命周期过长，和应用的进程保持一致，使用不当很可能导致对象泄漏，在Android中应该谨慎使用static对象。&lt;/li&gt;
&lt;li&gt;特别留意单例对象中不合理的持有&lt;br&gt;虽然单例模式简单实用，提供了很多便利性，但是因为单例的生命周期和应用保持一致，使用不合理很容易出现持有对象的泄漏。&lt;/li&gt;
&lt;li&gt;珍惜Services资源&lt;br&gt;如果你的应用需要在后台使用service，除非它被触发并执行一个任务，否则其他时候Service都应该是停止状态。另外需要注意当这个service完成任务之后因为停止service失败而引起的内存泄漏。 当你启动一个Service，系统会倾向为了保留这个Service而一直保留Service所在的进程。这使得进程的运行代价很高，因为系统没有办法把Service所占用的RAM空间腾出来让给其他组件，另外Service还不能被Paged out。这减少了系统能够存放到LRU缓存当中的进程数量，它会影响应用之间的切换效率，甚至会导致系统内存使用不稳定，从而无法继续保持住所有目前正在运行的service。 建议使用&lt;a href=&quot;http://developer.android.com/reference/android/app/IntentService.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IntentService&lt;/a&gt;，它会在处理完交代给它的任务之后尽快结束自己。更多信息，请阅读&lt;a href=&quot;http://developer.android.com/training/run-background-service/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Running in a Background Service&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;优化布局层次，减少内存消耗&lt;br&gt;越扁平化的视图布局，占用的内存就越少，效率越高。我们需要尽量保证布局足够扁平化，当使用系统提供的View无法实现足够扁平的时候考虑使用自定义View来达到目的。&lt;/li&gt;
&lt;li&gt;谨慎使用“抽象”编程&lt;br&gt;很多时候，开发者会使用抽象类作为”好的编程实践”，因为抽象能够提升代码的灵活性与可维护性。然而，抽象会导致一个显著的额外内存开销：他们需要同等量的代码用于可执行，那些代码会被mapping到内存中，因此如果你的抽象没有显著的提升效率，应该尽量避免他们。&lt;/li&gt;
&lt;li&gt;使用nano protobufs序列化数据&lt;br&gt;Protocol buffers是由Google为序列化结构数据而设计的，一种语言无关，平台无关，具有良好的扩展性。类似XML，却比XML更加轻量，快速，简单。如果你需要为你的数据实现序列化与协议化，建议使用nano protobufs。关于更多细节，请参考&lt;a href=&quot;https://android.googlesource.com/platform/external/protobuf/+/master/java/README.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;protobuf readme&lt;/a&gt;的”Nano version”章节。&lt;/li&gt;
&lt;li&gt;谨慎使用依赖注入框架&lt;br&gt;使用类似Guice或者RoboGuice等框架注入代码，在某种程度上可以简化你的代码。下面是使用RoboGuice前后的对比图：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;13.谨慎使用多进程&lt;br&gt;使用多进程可以把应用中的部分组件运行在单独的进程当中，这样可以扩大应用的内存占用范围，但是这个技术必须谨慎使用，绝大多数应用都不应该贸然使用多进程，一方面是因为使用多进程会使得代码逻辑更加复杂，另外如果使用不当，它可能反而会导致显著增加内存。当你的应用需要运行一个常驻后台的任务，而且这个任务并不轻量，可以考虑使用这个技术。&lt;/p&gt;
&lt;p&gt;一个典型的例子是创建一个可以长时间后台播放的Music Player。如果整个应用都运行在一个进程中，当后台播放的时候，前台的那些UI资源也没有办法得到释放。类似这样的应用可以切分成2个进程：一个用来操作UI，另外一个给后台的Service。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用ProGuard来剔除不需要的代码&lt;br&gt;&lt;a href=&quot;http://developer.android.com/tools/help/proguard.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ProGuard&lt;/a&gt;能够通过移除不需要的代码，重命名类，域与方法等等对代码进行压缩，优化与混淆。使用ProGuard可以使得你的代码更加紧凑，这样能够减少mapping代码所需要的内存空间。&lt;/li&gt;
&lt;li&gt;谨慎使用第三方libraries&lt;br&gt;很多开源的library代码都不是为移动网络环境而编写的，如果运用在移动设备上，并不一定适合。即使是针对Android而设计的library，也需要特别谨慎，特别是在你不知道引入的library具体做了什么事情的时候。例如，其中一个library使用的是nano protobufs, 而另外一个使用的是micro protobufs。这样一来，在你的应用里面就有2种protobuf的实现方式。这样类似的冲突还可能发生在输出日志，加载图片，缓存等等模块里面。另外不要为了1个或者2个功能而导入整个library，如果没有一个合适的库与你的需求相吻合，你应该考虑自己去实现，而不是导入一个大而全的解决方案。&lt;/li&gt;
&lt;li&gt;考虑不同的实现方式来优化内存占用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;写在最后：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计风格很大程度上会影响到程序的内存与性能，相对来说，如果大量使用类似Material Design的风格，不仅安装包可以变小，还可以减少内存的占用，渲染性能与加载性能都会有一定的提升。&lt;/li&gt;
&lt;li&gt;内存优化并不就是说程序占用的内存越少就越好，如果因为想要保持更低的内存占用，而频繁触发执行gc操作，在某种程度上反而会导致应用性能整体有所下降，这里需要综合考虑做一定的权衡。&lt;/li&gt;
&lt;li&gt;Android的内存优化涉及的知识面还有很多：内存管理的细节，垃圾回收的工作原理，如何查找内存泄漏等等都可以展开讲很多。OOM是内存优化当中比较突出的一点，尽量减少OOM的概率对内存优化有着很大的意义。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详细看郭霖的&lt;a href=&quot;http://blog.csdn.net/guolin_blog/article/details/42238633&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;分析内存的使用&lt;/a&gt;总结&lt;br&gt;胡凯大大&lt;a href=&quot;http://hukai.me/android-performance-oom/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;内存优化之OOM&lt;/a&gt;&lt;/p&gt;
&lt;!--more--&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Android内存优化是性能优化很重要的一部分，而如何避免OOM又是内存优化的核心。&lt;/p&gt;
&lt;h2 id=&quot;Android内存管理机制&quot;&gt;&lt;a href=&quot;#Android内存管理机制&quot; class=&quot;headerlink&quot; title=&quot;Android内存管理机制&quot;&gt;&lt;/a&gt;Android内存管理机制&lt;/h2&gt;&lt;h3 id=&quot;android官网有一篇文章&quot;&gt;&lt;a href=&quot;#android官网有一篇文章&quot; class=&quot;headerlink&quot; title=&quot;android官网有一篇文章&quot;&gt;&lt;/a&gt;android官网有一篇文章&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://developer.android.com/training/articles/memory.html&quot;&gt;Android是如何管理应用的进程与内存分配&lt;/a&gt;&lt;br&gt;Android系统的Dalvik虚拟机扮演了内存垃圾自动回收的角色。&lt;/p&gt;
&lt;h4 id=&quot;OOM介绍（out-of-memory-内存溢出）&quot;&gt;&lt;a href=&quot;#OOM介绍（out-of-memory-内存溢出）&quot; class=&quot;headerlink&quot; title=&quot;OOM介绍（out of memory 内存溢出）&quot;&gt;&lt;/a&gt;OOM介绍（out of memory 内存溢出）&lt;/h4&gt;&lt;p&gt;Android和java中都会出现由于不良代码引起的内存泄露，为了使Android应用程序能够快速高效的运行，Android每个应用程序都会有专门Dalvik虚拟机实例来运行，也就是每个程序都在属于自己的进程中运行。&lt;br&gt;这样，某个应用程序内存泄露仅仅只会使自己进程被kill掉不会影响其他进程（如果是system_process等系统进程出现问题，就会造成系统重启），&lt;strong&gt;另一方面&lt;/strong&gt;，系统为每一个应用程序分配了不同的内存上限，如果超过这个上限被视为内存泄露，从而被kill掉。&lt;br&gt;Dalvik Heap size因不同设备的RAM不同而有所差异，应用占用内存接近这个阀值，在尝试分配内存就会引起outofmemoryError的错误。&lt;/p&gt;
&lt;p&gt;出现OOM有几种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加载对象过大&lt;/li&gt;
&lt;li&gt;相应资源过多，来不及加载。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解决这些问题，有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内存引用上做一些处理，常用的有软引用。&lt;/li&gt;
&lt;li&gt;内存中加载图片直接在内存中做处理（如边界压缩）&lt;br&gt;这个Glide\Fresco 图片框架可能封装好了&lt;br&gt;3.动态回收内存&lt;br&gt;4.优化Delivk虚拟机的堆内存分配&lt;br&gt;5.自定义堆内存大小&lt;h4 id=&quot;共享内存&quot;&gt;&lt;a href=&quot;#共享内存&quot; class=&quot;headerlink&quot; title=&quot;共享内存&quot;&gt;&lt;/a&gt;共享内存&lt;/h4&gt;Android应用程序的进程都是从Zygote的进程fork出来的。Zygote进程在系统启动并载入通用的framework代码和资源后启动。一个新的应用程序启动，系统就会从Zygote中fork出来一个新的进程，在新的进程中加载并允许应用程序的代码。这使得大多数RAM pages被分配给framework的代码，并且RAM资源能够在应用的所有进程之间共享。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大多数static 数据被mmapped到一个进程中，这样使得同样的数据在进程之间能够共享，而且在需要的时候能paged out.常见static 数据包括Dalvik code ,app resourecs,so 文件等。&lt;/p&gt;
&lt;p&gt;大多数情况下，Android通过显示的方式分配共享内存区域（例如ashmem或gralloc）来实现动态RAM区域能够在不同进程之间进行共享的机制。比如，Window Surface在APP和Screen Composition之间使用共享的内存，&lt;br&gt;Cursor Buffers在Content Provider与Clients之间共享内存。&lt;/p&gt;
&lt;h4 id=&quot;分配与回收内存&quot;&gt;&lt;a href=&quot;#分配与回收内存&quot; class=&quot;headerlink&quot; title=&quot;分配与回收内存&quot;&gt;&lt;/a&gt;分配与回收内存&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;每个进程的Dalvik heap都反应了使用内存的占用范围,（Dalvik Heap Size）,他可以根据需要进行增长，但是系统有一个上限。&lt;/li&gt;
&lt;li&gt;HeapSize跟实际的物理内存大小是不对等的，PSS（proportional Set Size）记录了应用程序自身占用以及和其他进程共享的内容。&lt;/li&gt;
&lt;li&gt;Android不会对heap空闲区域进行做碎片整理。系统仅仅在新的内存分配之前判断Heap的尾端剩余空间是否足够，不够就会触发gc操作，从而腾出更多空闲的内存空间。gc操作(garbage collection)也就是所谓的垃圾回收，Android在适当时候触发gc操作，将一些不再使用的对象回收，在Android高级系统针对Heap空间有一个Generational Heap Memory的模型，最近分配的对象在放在young generation区域，当停留一段时间，这个对象会被移动到old generation中，最后在移动到permanent generation区域中。系统会根据内存中不同的内存数据类型进行gc操作，young generation区域的对象更容易被销毁，而且gc操作的速度比old generation的速度要快，时间更短。&lt;br&gt;每个generation的内存区域都有固定的大小，随着新的对象陆续被分配到此区域，当这些对象的大小快达到阀门值时，就会触发gc操作。通常情况下，gc操作发生时，所有线程都是暂停的。&lt;br&gt;如何查看本机heap size:&lt;br&gt;&lt;code&gt;ActivityManager manager=(Activity)getSystemService(Context.ACTIVITY_SERVICE);
int heapsize=manager.getMemoryClass();&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;应用切换操作&quot;&gt;&lt;a href=&quot;#应用切换操作&quot; class=&quot;headerlink&quot; title=&quot;应用切换操作&quot;&gt;&lt;/a&gt;应用切换操作&lt;/h4&gt;&lt;p&gt;Android系统不会再用户切换应用的时候进行交换内存的操作，而是把不包含Foreground组件的应用进程放到LRUCache中，比如用户启动一个应用，系统会为它创建一个进程，但是当用户离开这个应用，此进程不会背立即销毁而是会放到一个Cache中，当用户切换回来够快速的恢复。&lt;/p&gt;
&lt;h4 id=&quot;发生OOM的条件&quot;&gt;&lt;a href=&quot;#发生OOM的条件&quot; class=&quot;headerlink&quot; title=&quot;发生OOM的条件&quot;&gt;&lt;/a&gt;发生OOM的条件&lt;/h4&gt;&lt;p&gt;通过不同的内存分配方式对不同的对象(bitmap,etc)进行操作因Android版本差异发生变化。&lt;br&gt;4.0以上，废除了external的计数器，类似bitmap的分配改到dalvik的Java heap(堆)中申请，只要allocated+新分配的内存&amp;gt;=getMemoryClass()就会发生OOM。(在AS memory monitor查看内存中Dalvik Heap的实时变化)&lt;/p&gt;
&lt;h4 id=&quot;如何避免OOM&quot;&gt;&lt;a href=&quot;#如何避免OOM&quot; class=&quot;headerlink&quot; title=&quot;如何避免OOM&quot;&gt;&lt;/a&gt;如何避免OOM&lt;/h4&gt;&lt;p&gt;减少OOM的第一步就是要尽量减少新分配出来的对象占用内存的大小，尽量使用更加轻量的对象。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android优化" scheme="http://yoursite.com/tags/Android%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>美团大众点评大咖秀(2016.6.19)</title>
    <link href="http://yoursite.com/2016/06/20/my-first-blog/"/>
    <id>http://yoursite.com/2016/06/20/my-first-blog/</id>
    <published>2016-06-20T09:43:32.000Z</published>
    <updated>2016-08-07T13:04:05.382Z</updated>
    
    <content type="html">&lt;p&gt;我去听了半天课&lt;/p&gt;
&lt;p&gt;###git add详解&lt;br&gt;git add. 添加所有文件&lt;br&gt;git add -u 将所有修改或删除的文件添加到索引库&lt;br&gt;git add -i 查看所有修改或者删除但是没有被提交的文件&lt;/p&gt;
&lt;p&gt;美团IOS工程师(北航)&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wal139491/myphoto/master/IMAG1070.jpg&quot; alt=&quot;建议&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wal139491/myphoto/master/IMAG1071.jpg&quot; alt=&quot;新人培养&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wal139491/myphoto/master/IMAG1069.jpg&quot; alt=&quot;经历&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我去听了半天课&lt;/p&gt;
&lt;p&gt;###git add详解&lt;br&gt;git add. 添加所有文件&lt;br&gt;git add -u 将所有修改或删除的文件添加到索引库&lt;br&gt;git add -i 查看所有修改或者删除但是没有被提交的文件&lt;/p&gt;
&lt;p&gt;美团IOS工程师(北航)&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wal139491/myphoto/master/IMAG1070.jpg&quot; alt=&quot;建议&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="something" scheme="http://yoursite.com/tags/something/"/>
    
  </entry>
  
</feed>
